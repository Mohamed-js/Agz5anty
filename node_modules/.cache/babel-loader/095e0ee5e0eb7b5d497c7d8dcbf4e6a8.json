{"ast":null,"code":"// This file is automatically compiled by Webpack, along with any other files\n// present in this directory. You're encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\nimport Rails from \"@rails/ujs\";\nimport Turbolinks from \"turbolinks\";\nimport * as ActiveStorage from \"@rails/activestorage\";\nimport \"channels\";\nRails.start();\nTurbolinks.start();\nActiveStorage.start(); // x\n\nimport * as Tone from 'tone';\nvar sampler = new Tone.Sampler({\n  urls: {\n    \"C4\": \"C4.mp3\",\n    \"D#4\": \"Ds4.mp3\",\n    \"F#4\": \"Fs4.mp3\",\n    \"A4\": \"A4.mp3\"\n  },\n  release: 1,\n  baseUrl: \"https://tonejs.github.io/audio/salamander/\"\n}).toDestination();\nTone.loaded().then(function () {\n  sampler.triggerAttackRelease([\"Eb4\", \"G4\", \"Bb4\"], 4);\n});\nvar count = 0;\n\nfunction refresh() {\n  var req = new XMLHttpRequest();\n\n  req.onreadystatechange = function (params) {\n    if (this.readyState === 4 && this.status === 200) {\n      var meds = JSON.parse(this.responseText);\n      document.getElementById(\"meds\").innerHTML = \"\";\n      meds.forEach(function (med) {\n        document.getElementById(\"meds\").innerHTML += med.name + \"<br>\";\n      });\n\n      if (count !== meds.length) {// alert(\"hay\")\n        // document.getElementById(\"audio\").currentTime = 0;\n        // document.getElementById(\"audio\").play()\n      }\n\n      count = meds.length;\n    }\n  };\n\n  req.open('GET', '/medications.json', true);\n  req.send();\n}\n\nsetInterval(function () {\n  if (document.getElementById(\"meds\") != null) {\n    refresh();\n  }\n}, 1000);","map":{"version":3,"sources":["C:/Users/lordd/Documents/GitHub/Agz5anty/app/javascript/packs/application.js"],"names":["Rails","Turbolinks","ActiveStorage","start","Tone","sampler","Sampler","urls","release","baseUrl","toDestination","loaded","then","triggerAttackRelease","count","refresh","req","XMLHttpRequest","onreadystatechange","params","readyState","status","meds","JSON","parse","responseText","document","getElementById","innerHTML","forEach","med","name","length","open","send","setInterval"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,OAAO,UAAP;AAEAF,KAAK,CAACG,KAAN;AACAF,UAAU,CAACE,KAAX;AACAD,aAAa,CAACC,KAAd,G,CAGA;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAGA,IAAMC,OAAO,GAAG,IAAID,IAAI,CAACE,OAAT,CAAiB;AAChCC,EAAAA,IAAI,EAAE;AACL,UAAM,QADD;AAEL,WAAO,SAFF;AAGL,WAAO,SAHF;AAIL,UAAM;AAJD,GAD0B;AAOhCC,EAAAA,OAAO,EAAE,CAPuB;AAQhCC,EAAAA,OAAO,EAAE;AARuB,CAAjB,EASbC,aATa,EAAhB;AAWAN,IAAI,CAACO,MAAL,GAAcC,IAAd,CAAmB,YAAM;AACxBP,EAAAA,OAAO,CAACQ,oBAAR,CAA6B,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAA7B,EAAmD,CAAnD;AACA,CAFD;AAQA,IAAIC,KAAK,GAAG,CAAZ;;AACA,SAASC,OAAT,GAAmB;AACf,MAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;;AAEAD,EAAAA,GAAG,CAACE,kBAAJ,GAAyB,UAAUC,MAAV,EAAkB;AACvC,QAAI,KAAKC,UAAL,KAAoB,CAApB,IAAyB,KAAKC,MAAL,KAAgB,GAA7C,EAAkD;AAE9C,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAX;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,EAA5C;AACAN,MAAAA,IAAI,CAACO,OAAL,CAAa,UAAAC,GAAG,EAAI;AAChBJ,QAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,IAA6CE,GAAG,CAACC,IAAJ,GAAW,MAAxD;AACH,OAFD;;AAGA,UAAIjB,KAAK,KAAKQ,IAAI,CAACU,MAAnB,EAA2B,CACvB;AACA;AACA;AAEH;;AACDlB,MAAAA,KAAK,GAAGQ,IAAI,CAACU,MAAb;AAEH;AACJ,GAjBD;;AAkBAhB,EAAAA,GAAG,CAACiB,IAAJ,CAAS,KAAT,EAAgB,mBAAhB,EAAqC,IAArC;AAEAjB,EAAAA,GAAG,CAACkB,IAAJ;AACH;;AAIGC,WAAW,CAAC,YAAM;AACd,MAAIT,QAAQ,CAACC,cAAT,CAAwB,MAAxB,KAAmC,IAAvC,EAA4C;AACxCZ,IAAAA,OAAO;AACV;AACJ,CAJU,EAIR,IAJQ,CAAX","sourcesContent":["// This file is automatically compiled by Webpack, along with any other files\r\n// present in this directory. You're encouraged to place your actual application logic in\r\n// a relevant structure within app/javascript and only use these pack files to reference\r\n// that code so it'll be compiled.\r\n\r\nimport Rails from \"@rails/ujs\"\r\nimport Turbolinks from \"turbolinks\"\r\nimport * as ActiveStorage from \"@rails/activestorage\"\r\nimport \"channels\"\r\n\r\nRails.start()\r\nTurbolinks.start()\r\nActiveStorage.start()\r\n\r\n\r\n// x\r\n\r\nimport * as Tone from 'tone'\r\n\r\n\r\nconst sampler = new Tone.Sampler({\r\n\turls: {\r\n\t\t\"C4\": \"C4.mp3\",\r\n\t\t\"D#4\": \"Ds4.mp3\",\r\n\t\t\"F#4\": \"Fs4.mp3\",\r\n\t\t\"A4\": \"A4.mp3\",\r\n\t},\r\n\trelease: 1,\r\n\tbaseUrl: \"https://tonejs.github.io/audio/salamander/\",\r\n}).toDestination();\r\n\r\nTone.loaded().then(() => {\r\n\tsampler.triggerAttackRelease([\"Eb4\", \"G4\", \"Bb4\"], 4);\r\n})\r\n\r\n\r\n\r\n\r\n\r\nlet count = 0\r\nfunction refresh() {\r\n    let req = new XMLHttpRequest();\r\n    \r\n    req.onreadystatechange = function (params) {\r\n        if (this.readyState === 4 && this.status === 200) {\r\n\r\n            let meds = JSON.parse(this.responseText);\r\n            document.getElementById(\"meds\").innerHTML = \"\"\r\n            meds.forEach(med => {\r\n                document.getElementById(\"meds\").innerHTML += med.name + \"<br>\"\r\n            });\r\n            if (count !== meds.length) {\r\n                // alert(\"hay\")\r\n                // document.getElementById(\"audio\").currentTime = 0;\r\n                // document.getElementById(\"audio\").play()\r\n\r\n            }\r\n            count = meds.length\r\n            \r\n        }\r\n    }\r\n    req.open('GET', '/medications.json', true);\r\n\r\n    req.send();\r\n}\r\n\r\n\r\n\r\n    setInterval(() => {\r\n        if (document.getElementById(\"meds\") != null){\r\n            refresh()\r\n        }\r\n    }, 1000);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}