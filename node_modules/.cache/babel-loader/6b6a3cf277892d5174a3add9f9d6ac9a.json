{"ast":null,"code":"export var testAudioNodeDisconnectMethodSupport = function testAudioNodeDisconnectMethodSupport(nativeAudioContext) {\n  return new Promise(function (resolve) {\n    var analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n    var dummy = nativeAudioContext.createGain(); // Bug #95: Safari does not play one sample buffers.\n\n    var ones = nativeAudioContext.createBuffer(1, 2, 44100);\n    var channelData = ones.getChannelData(0);\n    channelData[0] = 1;\n    channelData[1] = 1;\n    var source = nativeAudioContext.createBufferSource();\n    source.buffer = ones;\n    source.loop = true;\n    source.connect(analyzer).connect(nativeAudioContext.destination);\n    source.connect(dummy);\n    source.disconnect(dummy); // tslint:disable-next-line:deprecation\n\n    analyzer.onaudioprocess = function (event) {\n      var chnnlDt = event.inputBuffer.getChannelData(0);\n\n      if (Array.prototype.some.call(chnnlDt, function (sample) {\n        return sample === 1;\n      })) {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n\n      source.stop();\n      analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n\n      source.disconnect(analyzer);\n      analyzer.disconnect(nativeAudioContext.destination);\n    };\n\n    source.start();\n  });\n};","map":null,"metadata":{},"sourceType":"module"}