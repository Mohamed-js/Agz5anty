{"ast":null,"code":"/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport var createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = function createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor) {\n  return function () {\n    if (nativeOfflineAudioContextConstructor === null) {\n      return Promise.resolve(false);\n    }\n\n    var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #21: Safari does not support promises yet.\n\n    return new Promise(function (resolve) {\n      var isPending = true;\n\n      var resolvePromise = function resolvePromise(err) {\n        if (isPending) {\n          isPending = false;\n          offlineAudioContext.startRendering();\n          resolve(err instanceof TypeError);\n        }\n      };\n\n      var promise; // Bug #26: Safari throws a synchronous error.\n\n      try {\n        promise = offlineAudioContext // Bug #1: Safari requires a successCallback.\n        .decodeAudioData(null, function () {// Ignore the success callback.\n        }, resolvePromise);\n      } catch (err) {\n        resolvePromise(err);\n      } // Bug #21: Safari does not support promises yet.\n\n\n      if (promise !== undefined) {\n        // Bug #6: Chrome, Edge, Firefox and Opera do not call the errorCallback.\n        promise.catch(resolvePromise);\n      }\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}