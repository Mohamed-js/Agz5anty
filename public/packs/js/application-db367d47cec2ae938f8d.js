/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/packs/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/javascript/packs/application.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/javascript/channels sync recursive _channel\\.js$":
/*!****************************************************!*\
  !*** ./app/javascript/channels sync _channel\.js$ ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = "./app/javascript/channels sync recursive _channel\\.js$";

/***/ }),

/***/ "./app/javascript/channels/index.js":
/*!******************************************!*\
  !*** ./app/javascript/channels/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Load all the channels within this directory and all subdirectories.
// Channel files must be named *_channel.js.
var channels = __webpack_require__("./app/javascript/channels sync recursive _channel\\.js$");

channels.keys().forEach(channels);

/***/ }),

/***/ "./app/javascript/packs/application.js":
/*!*********************************************!*\
  !*** ./app/javascript/packs/application.js ***!
  \*********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rails_ujs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @rails/ujs */ "./node_modules/@rails/ujs/lib/assets/compiled/rails-ujs.js");
/* harmony import */ var _rails_ujs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_rails_ujs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var turbolinks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! turbolinks */ "./node_modules/turbolinks/dist/turbolinks.js");
/* harmony import */ var turbolinks__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(turbolinks__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _rails_activestorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @rails/activestorage */ "./node_modules/@rails/activestorage/app/assets/javascripts/activestorage.js");
/* harmony import */ var _rails_activestorage__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_rails_activestorage__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var channels__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! channels */ "./app/javascript/channels/index.js");
/* harmony import */ var channels__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(channels__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var tone__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tone */ "./node_modules/tone/build/esm/index.js");
// This file is automatically compiled by Webpack, along with any other files
// present in this directory. You're encouraged to place your actual application logic in
// a relevant structure within app/javascript and only use these pack files to reference
// that code so it'll be compiled.




_rails_ujs__WEBPACK_IMPORTED_MODULE_0___default.a.start();
turbolinks__WEBPACK_IMPORTED_MODULE_1___default.a.start();
_rails_activestorage__WEBPACK_IMPORTED_MODULE_2__["start"](); // x



function beep() {
  var snd = new Audio("data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=");
  snd.play();
}

var count = 0;

function refresh() {
  var req = new XMLHttpRequest();

  req.onreadystatechange = function (params) {
    if (this.readyState === 4 && this.status === 200) {
      var meds = JSON.parse(this.responseText);
      document.getElementById("meds").innerHTML = "";
      meds.forEach(function (med) {
        document.getElementById("meds").innerHTML += med.name + "<br>";
      });

      if (count !== meds.length) {
        // alert("hay")
        // document.getElementById("audio").currentTime = 0;
        // document.getElementById("audio").play()
        beep();
      }

      count = meds.length;
    }
  };

  req.open('GET', '/medications.json', true);
  req.send();
}

setInterval(function () {
  if (document.getElementById("meds") != null) {
    refresh();
  }
}, 1000);

/***/ }),

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./node_modules/@rails/activestorage/app/assets/javascripts/activestorage.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@rails/activestorage/app/assets/javascripts/activestorage.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (global, factory) {
  ( false ? undefined : _typeof(exports)) === "object" && typeof module !== "undefined" ? factory(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
})(this, function (exports) {
  "use strict";

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var sparkMd5 = createCommonjsModule(function (module, exports) {
    (function (factory) {
      {
        module.exports = factory();
      }
    })(function (undefined) {
      var hex_chr = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"];

      function md5cycle(x, k) {
        var a = x[0],
            b = x[1],
            c = x[2],
            d = x[3];
        a += (b & c | ~b & d) + k[0] - 680876936 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[1] - 389564586 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[2] + 606105819 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[4] - 176418897 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[7] - 45705983 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[10] - 42063 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;
        a = (a << 7 | a >>> 25) + b | 0;
        d += (a & b | ~a & c) + k[13] - 40341101 | 0;
        d = (d << 12 | d >>> 20) + a | 0;
        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;
        c = (c << 17 | c >>> 15) + d | 0;
        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;
        b = (b << 22 | b >>> 10) + c | 0;
        a += (b & d | c & ~d) + k[1] - 165796510 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[11] + 643717713 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[0] - 373897302 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[5] - 701558691 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[10] + 38016083 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[15] - 660478335 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[4] - 405537848 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[9] + 568446438 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[3] - 187363961 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;
        a = (a << 5 | a >>> 27) + b | 0;
        d += (a & c | b & ~c) + k[2] - 51403784 | 0;
        d = (d << 9 | d >>> 23) + a | 0;
        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;
        c = (c << 14 | c >>> 18) + d | 0;
        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;
        b = (b << 20 | b >>> 12) + c | 0;
        a += (b ^ c ^ d) + k[5] - 378558 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[14] - 35309556 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[7] - 155497632 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[13] + 681279174 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[0] - 358537222 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[3] - 722521979 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[6] + 76029189 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        a += (b ^ c ^ d) + k[9] - 640364487 | 0;
        a = (a << 4 | a >>> 28) + b | 0;
        d += (a ^ b ^ c) + k[12] - 421815835 | 0;
        d = (d << 11 | d >>> 21) + a | 0;
        c += (d ^ a ^ b) + k[15] + 530742520 | 0;
        c = (c << 16 | c >>> 16) + d | 0;
        b += (c ^ d ^ a) + k[2] - 995338651 | 0;
        b = (b << 23 | b >>> 9) + c | 0;
        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;
        a = (a << 6 | a >>> 26) + b | 0;
        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;
        d = (d << 10 | d >>> 22) + a | 0;
        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;
        c = (c << 15 | c >>> 17) + d | 0;
        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;
        b = (b << 21 | b >>> 11) + c | 0;
        x[0] = a + x[0] | 0;
        x[1] = b + x[1] | 0;
        x[2] = c + x[2] | 0;
        x[3] = d + x[3] | 0;
      }

      function md5blk(s) {
        var md5blks = [],
            i;

        for (i = 0; i < 64; i += 4) {
          md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);
        }

        return md5blks;
      }

      function md5blk_array(a) {
        var md5blks = [],
            i;

        for (i = 0; i < 64; i += 4) {
          md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);
        }

        return md5blks;
      }

      function md51(s) {
        var n = s.length,
            state = [1732584193, -271733879, -1732584194, 271733878],
            i,
            length,
            tail,
            tmp,
            lo,
            hi;

        for (i = 64; i <= n; i += 64) {
          md5cycle(state, md5blk(s.substring(i - 64, i)));
        }

        s = s.substring(i - 64);
        length = s.length;
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= s.charCodeAt(i) << (i % 4 << 3);
        }

        tail[i >> 2] |= 128 << (i % 4 << 3);

        if (i > 55) {
          md5cycle(state, tail);

          for (i = 0; i < 16; i += 1) {
            tail[i] = 0;
          }
        }

        tmp = n * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;
        tail[14] = lo;
        tail[15] = hi;
        md5cycle(state, tail);
        return state;
      }

      function md51_array(a) {
        var n = a.length,
            state = [1732584193, -271733879, -1732584194, 271733878],
            i,
            length,
            tail,
            tmp,
            lo,
            hi;

        for (i = 64; i <= n; i += 64) {
          md5cycle(state, md5blk_array(a.subarray(i - 64, i)));
        }

        a = i - 64 < n ? a.subarray(i - 64) : new Uint8Array(0);
        length = a.length;
        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= a[i] << (i % 4 << 3);
        }

        tail[i >> 2] |= 128 << (i % 4 << 3);

        if (i > 55) {
          md5cycle(state, tail);

          for (i = 0; i < 16; i += 1) {
            tail[i] = 0;
          }
        }

        tmp = n * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;
        tail[14] = lo;
        tail[15] = hi;
        md5cycle(state, tail);
        return state;
      }

      function rhex(n) {
        var s = "",
            j;

        for (j = 0; j < 4; j += 1) {
          s += hex_chr[n >> j * 8 + 4 & 15] + hex_chr[n >> j * 8 & 15];
        }

        return s;
      }

      function hex(x) {
        var i;

        for (i = 0; i < x.length; i += 1) {
          x[i] = rhex(x[i]);
        }

        return x.join("");
      }

      if (hex(md51("hello")) !== "5d41402abc4b2a76b9719d911017c592") ;

      if (typeof ArrayBuffer !== "undefined" && !ArrayBuffer.prototype.slice) {
        (function () {
          function clamp(val, length) {
            val = val | 0 || 0;

            if (val < 0) {
              return Math.max(val + length, 0);
            }

            return Math.min(val, length);
          }

          ArrayBuffer.prototype.slice = function (from, to) {
            var length = this.byteLength,
                begin = clamp(from, length),
                end = length,
                num,
                target,
                targetArray,
                sourceArray;

            if (to !== undefined) {
              end = clamp(to, length);
            }

            if (begin > end) {
              return new ArrayBuffer(0);
            }

            num = end - begin;
            target = new ArrayBuffer(num);
            targetArray = new Uint8Array(target);
            sourceArray = new Uint8Array(this, begin, num);
            targetArray.set(sourceArray);
            return target;
          };
        })();
      }

      function toUtf8(str) {
        if (/[\u0080-\uFFFF]/.test(str)) {
          str = unescape(encodeURIComponent(str));
        }

        return str;
      }

      function utf8Str2ArrayBuffer(str, returnUInt8Array) {
        var length = str.length,
            buff = new ArrayBuffer(length),
            arr = new Uint8Array(buff),
            i;

        for (i = 0; i < length; i += 1) {
          arr[i] = str.charCodeAt(i);
        }

        return returnUInt8Array ? arr : buff;
      }

      function arrayBuffer2Utf8Str(buff) {
        return String.fromCharCode.apply(null, new Uint8Array(buff));
      }

      function concatenateArrayBuffers(first, second, returnUInt8Array) {
        var result = new Uint8Array(first.byteLength + second.byteLength);
        result.set(new Uint8Array(first));
        result.set(new Uint8Array(second), first.byteLength);
        return returnUInt8Array ? result : result.buffer;
      }

      function hexToBinaryString(hex) {
        var bytes = [],
            length = hex.length,
            x;

        for (x = 0; x < length - 1; x += 2) {
          bytes.push(parseInt(hex.substr(x, 2), 16));
        }

        return String.fromCharCode.apply(String, bytes);
      }

      function SparkMD5() {
        this.reset();
      }

      SparkMD5.prototype.append = function (str) {
        this.appendBinary(toUtf8(str));
        return this;
      };

      SparkMD5.prototype.appendBinary = function (contents) {
        this._buff += contents;
        this._length += contents.length;
        var length = this._buff.length,
            i;

        for (i = 64; i <= length; i += 64) {
          md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));
        }

        this._buff = this._buff.substring(i - 64);
        return this;
      };

      SparkMD5.prototype.end = function (raw) {
        var buff = this._buff,
            length = buff.length,
            i,
            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            ret;

        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= buff.charCodeAt(i) << (i % 4 << 3);
        }

        this._finish(tail, length);

        ret = hex(this._hash);

        if (raw) {
          ret = hexToBinaryString(ret);
        }

        this.reset();
        return ret;
      };

      SparkMD5.prototype.reset = function () {
        this._buff = "";
        this._length = 0;
        this._hash = [1732584193, -271733879, -1732584194, 271733878];
        return this;
      };

      SparkMD5.prototype.getState = function () {
        return {
          buff: this._buff,
          length: this._length,
          hash: this._hash
        };
      };

      SparkMD5.prototype.setState = function (state) {
        this._buff = state.buff;
        this._length = state.length;
        this._hash = state.hash;
        return this;
      };

      SparkMD5.prototype.destroy = function () {
        delete this._hash;
        delete this._buff;
        delete this._length;
      };

      SparkMD5.prototype._finish = function (tail, length) {
        var i = length,
            tmp,
            lo,
            hi;
        tail[i >> 2] |= 128 << (i % 4 << 3);

        if (i > 55) {
          md5cycle(this._hash, tail);

          for (i = 0; i < 16; i += 1) {
            tail[i] = 0;
          }
        }

        tmp = this._length * 8;
        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);
        lo = parseInt(tmp[2], 16);
        hi = parseInt(tmp[1], 16) || 0;
        tail[14] = lo;
        tail[15] = hi;
        md5cycle(this._hash, tail);
      };

      SparkMD5.hash = function (str, raw) {
        return SparkMD5.hashBinary(toUtf8(str), raw);
      };

      SparkMD5.hashBinary = function (content, raw) {
        var hash = md51(content),
            ret = hex(hash);
        return raw ? hexToBinaryString(ret) : ret;
      };

      SparkMD5.ArrayBuffer = function () {
        this.reset();
      };

      SparkMD5.ArrayBuffer.prototype.append = function (arr) {
        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),
            length = buff.length,
            i;
        this._length += arr.byteLength;

        for (i = 64; i <= length; i += 64) {
          md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));
        }

        this._buff = i - 64 < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);
        return this;
      };

      SparkMD5.ArrayBuffer.prototype.end = function (raw) {
        var buff = this._buff,
            length = buff.length,
            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            i,
            ret;

        for (i = 0; i < length; i += 1) {
          tail[i >> 2] |= buff[i] << (i % 4 << 3);
        }

        this._finish(tail, length);

        ret = hex(this._hash);

        if (raw) {
          ret = hexToBinaryString(ret);
        }

        this.reset();
        return ret;
      };

      SparkMD5.ArrayBuffer.prototype.reset = function () {
        this._buff = new Uint8Array(0);
        this._length = 0;
        this._hash = [1732584193, -271733879, -1732584194, 271733878];
        return this;
      };

      SparkMD5.ArrayBuffer.prototype.getState = function () {
        var state = SparkMD5.prototype.getState.call(this);
        state.buff = arrayBuffer2Utf8Str(state.buff);
        return state;
      };

      SparkMD5.ArrayBuffer.prototype.setState = function (state) {
        state.buff = utf8Str2ArrayBuffer(state.buff, true);
        return SparkMD5.prototype.setState.call(this, state);
      };

      SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;
      SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;

      SparkMD5.ArrayBuffer.hash = function (arr, raw) {
        var hash = md51_array(new Uint8Array(arr)),
            ret = hex(hash);
        return raw ? hexToBinaryString(ret) : ret;
      };

      return SparkMD5;
    });
  });

  var classCallCheck = function classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  var createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var fileSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;

  var FileChecksum = function () {
    createClass(FileChecksum, null, [{
      key: "create",
      value: function create(file, callback) {
        var instance = new FileChecksum(file);
        instance.create(callback);
      }
    }]);

    function FileChecksum(file) {
      classCallCheck(this, FileChecksum);
      this.file = file;
      this.chunkSize = 2097152;
      this.chunkCount = Math.ceil(this.file.size / this.chunkSize);
      this.chunkIndex = 0;
    }

    createClass(FileChecksum, [{
      key: "create",
      value: function create(callback) {
        var _this = this;

        this.callback = callback;
        this.md5Buffer = new sparkMd5.ArrayBuffer();
        this.fileReader = new FileReader();
        this.fileReader.addEventListener("load", function (event) {
          return _this.fileReaderDidLoad(event);
        });
        this.fileReader.addEventListener("error", function (event) {
          return _this.fileReaderDidError(event);
        });
        this.readNextChunk();
      }
    }, {
      key: "fileReaderDidLoad",
      value: function fileReaderDidLoad(event) {
        this.md5Buffer.append(event.target.result);

        if (!this.readNextChunk()) {
          var binaryDigest = this.md5Buffer.end(true);
          var base64digest = btoa(binaryDigest);
          this.callback(null, base64digest);
        }
      }
    }, {
      key: "fileReaderDidError",
      value: function fileReaderDidError(event) {
        this.callback("Error reading " + this.file.name);
      }
    }, {
      key: "readNextChunk",
      value: function readNextChunk() {
        if (this.chunkIndex < this.chunkCount || this.chunkIndex == 0 && this.chunkCount == 0) {
          var start = this.chunkIndex * this.chunkSize;
          var end = Math.min(start + this.chunkSize, this.file.size);
          var bytes = fileSlice.call(this.file, start, end);
          this.fileReader.readAsArrayBuffer(bytes);
          this.chunkIndex++;
          return true;
        } else {
          return false;
        }
      }
    }]);
    return FileChecksum;
  }();

  function getMetaValue(name) {
    var element = findElement(document.head, 'meta[name="' + name + '"]');

    if (element) {
      return element.getAttribute("content");
    }
  }

  function findElements(root, selector) {
    if (typeof root == "string") {
      selector = root;
      root = document;
    }

    var elements = root.querySelectorAll(selector);
    return toArray$1(elements);
  }

  function findElement(root, selector) {
    if (typeof root == "string") {
      selector = root;
      root = document;
    }

    return root.querySelector(selector);
  }

  function dispatchEvent(element, type) {
    var eventInit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var disabled = element.disabled;
    var bubbles = eventInit.bubbles,
        cancelable = eventInit.cancelable,
        detail = eventInit.detail;
    var event = document.createEvent("Event");
    event.initEvent(type, bubbles || true, cancelable || true);
    event.detail = detail || {};

    try {
      element.disabled = false;
      element.dispatchEvent(event);
    } finally {
      element.disabled = disabled;
    }

    return event;
  }

  function toArray$1(value) {
    if (Array.isArray(value)) {
      return value;
    } else if (Array.from) {
      return Array.from(value);
    } else {
      return [].slice.call(value);
    }
  }

  var BlobRecord = function () {
    function BlobRecord(file, checksum, url) {
      var _this = this;

      classCallCheck(this, BlobRecord);
      this.file = file;
      this.attributes = {
        filename: file.name,
        content_type: file.type || "application/octet-stream",
        byte_size: file.size,
        checksum: checksum
      };
      this.xhr = new XMLHttpRequest();
      this.xhr.open("POST", url, true);
      this.xhr.responseType = "json";
      this.xhr.setRequestHeader("Content-Type", "application/json");
      this.xhr.setRequestHeader("Accept", "application/json");
      this.xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
      var csrfToken = getMetaValue("csrf-token");

      if (csrfToken != undefined) {
        this.xhr.setRequestHeader("X-CSRF-Token", csrfToken);
      }

      this.xhr.addEventListener("load", function (event) {
        return _this.requestDidLoad(event);
      });
      this.xhr.addEventListener("error", function (event) {
        return _this.requestDidError(event);
      });
    }

    createClass(BlobRecord, [{
      key: "create",
      value: function create(callback) {
        this.callback = callback;
        this.xhr.send(JSON.stringify({
          blob: this.attributes
        }));
      }
    }, {
      key: "requestDidLoad",
      value: function requestDidLoad(event) {
        if (this.status >= 200 && this.status < 300) {
          var response = this.response;
          var direct_upload = response.direct_upload;
          delete response.direct_upload;
          this.attributes = response;
          this.directUploadData = direct_upload;
          this.callback(null, this.toJSON());
        } else {
          this.requestDidError(event);
        }
      }
    }, {
      key: "requestDidError",
      value: function requestDidError(event) {
        this.callback('Error creating Blob for "' + this.file.name + '". Status: ' + this.status);
      }
    }, {
      key: "toJSON",
      value: function toJSON() {
        var result = {};

        for (var key in this.attributes) {
          result[key] = this.attributes[key];
        }

        return result;
      }
    }, {
      key: "status",
      get: function get$$1() {
        return this.xhr.status;
      }
    }, {
      key: "response",
      get: function get$$1() {
        var _xhr = this.xhr,
            responseType = _xhr.responseType,
            response = _xhr.response;

        if (responseType == "json") {
          return response;
        } else {
          return JSON.parse(response);
        }
      }
    }]);
    return BlobRecord;
  }();

  var BlobUpload = function () {
    function BlobUpload(blob) {
      var _this = this;

      classCallCheck(this, BlobUpload);
      this.blob = blob;
      this.file = blob.file;
      var _blob$directUploadDat = blob.directUploadData,
          url = _blob$directUploadDat.url,
          headers = _blob$directUploadDat.headers;
      this.xhr = new XMLHttpRequest();
      this.xhr.open("PUT", url, true);
      this.xhr.responseType = "text";

      for (var key in headers) {
        this.xhr.setRequestHeader(key, headers[key]);
      }

      this.xhr.addEventListener("load", function (event) {
        return _this.requestDidLoad(event);
      });
      this.xhr.addEventListener("error", function (event) {
        return _this.requestDidError(event);
      });
    }

    createClass(BlobUpload, [{
      key: "create",
      value: function create(callback) {
        this.callback = callback;
        this.xhr.send(this.file.slice());
      }
    }, {
      key: "requestDidLoad",
      value: function requestDidLoad(event) {
        var _xhr = this.xhr,
            status = _xhr.status,
            response = _xhr.response;

        if (status >= 200 && status < 300) {
          this.callback(null, response);
        } else {
          this.requestDidError(event);
        }
      }
    }, {
      key: "requestDidError",
      value: function requestDidError(event) {
        this.callback('Error storing "' + this.file.name + '". Status: ' + this.xhr.status);
      }
    }]);
    return BlobUpload;
  }();

  var id = 0;

  var DirectUpload = function () {
    function DirectUpload(file, url, delegate) {
      classCallCheck(this, DirectUpload);
      this.id = ++id;
      this.file = file;
      this.url = url;
      this.delegate = delegate;
    }

    createClass(DirectUpload, [{
      key: "create",
      value: function create(callback) {
        var _this = this;

        FileChecksum.create(this.file, function (error, checksum) {
          if (error) {
            callback(error);
            return;
          }

          var blob = new BlobRecord(_this.file, checksum, _this.url);
          notify(_this.delegate, "directUploadWillCreateBlobWithXHR", blob.xhr);
          blob.create(function (error) {
            if (error) {
              callback(error);
            } else {
              var upload = new BlobUpload(blob);
              notify(_this.delegate, "directUploadWillStoreFileWithXHR", upload.xhr);
              upload.create(function (error) {
                if (error) {
                  callback(error);
                } else {
                  callback(null, blob.toJSON());
                }
              });
            }
          });
        });
      }
    }]);
    return DirectUpload;
  }();

  function notify(object, methodName) {
    if (object && typeof object[methodName] == "function") {
      for (var _len = arguments.length, messages = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        messages[_key - 2] = arguments[_key];
      }

      return object[methodName].apply(object, messages);
    }
  }

  var DirectUploadController = function () {
    function DirectUploadController(input, file) {
      classCallCheck(this, DirectUploadController);
      this.input = input;
      this.file = file;
      this.directUpload = new DirectUpload(this.file, this.url, this);
      this.dispatch("initialize");
    }

    createClass(DirectUploadController, [{
      key: "start",
      value: function start(callback) {
        var _this = this;

        var hiddenInput = document.createElement("input");
        hiddenInput.type = "hidden";
        hiddenInput.name = this.input.name;
        this.input.insertAdjacentElement("beforebegin", hiddenInput);
        this.dispatch("start");
        this.directUpload.create(function (error, attributes) {
          if (error) {
            hiddenInput.parentNode.removeChild(hiddenInput);

            _this.dispatchError(error);
          } else {
            hiddenInput.value = attributes.signed_id;
          }

          _this.dispatch("end");

          callback(error);
        });
      }
    }, {
      key: "uploadRequestDidProgress",
      value: function uploadRequestDidProgress(event) {
        var progress = event.loaded / event.total * 100;

        if (progress) {
          this.dispatch("progress", {
            progress: progress
          });
        }
      }
    }, {
      key: "dispatch",
      value: function dispatch(name) {
        var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        detail.file = this.file;
        detail.id = this.directUpload.id;
        return dispatchEvent(this.input, "direct-upload:" + name, {
          detail: detail
        });
      }
    }, {
      key: "dispatchError",
      value: function dispatchError(error) {
        var event = this.dispatch("error", {
          error: error
        });

        if (!event.defaultPrevented) {
          alert(error);
        }
      }
    }, {
      key: "directUploadWillCreateBlobWithXHR",
      value: function directUploadWillCreateBlobWithXHR(xhr) {
        this.dispatch("before-blob-request", {
          xhr: xhr
        });
      }
    }, {
      key: "directUploadWillStoreFileWithXHR",
      value: function directUploadWillStoreFileWithXHR(xhr) {
        var _this2 = this;

        this.dispatch("before-storage-request", {
          xhr: xhr
        });
        xhr.upload.addEventListener("progress", function (event) {
          return _this2.uploadRequestDidProgress(event);
        });
      }
    }, {
      key: "url",
      get: function get$$1() {
        return this.input.getAttribute("data-direct-upload-url");
      }
    }]);
    return DirectUploadController;
  }();

  var inputSelector = "input[type=file][data-direct-upload-url]:not([disabled])";

  var DirectUploadsController = function () {
    function DirectUploadsController(form) {
      classCallCheck(this, DirectUploadsController);
      this.form = form;
      this.inputs = findElements(form, inputSelector).filter(function (input) {
        return input.files.length;
      });
    }

    createClass(DirectUploadsController, [{
      key: "start",
      value: function start(callback) {
        var _this = this;

        var controllers = this.createDirectUploadControllers();

        var startNextController = function startNextController() {
          var controller = controllers.shift();

          if (controller) {
            controller.start(function (error) {
              if (error) {
                callback(error);

                _this.dispatch("end");
              } else {
                startNextController();
              }
            });
          } else {
            callback();

            _this.dispatch("end");
          }
        };

        this.dispatch("start");
        startNextController();
      }
    }, {
      key: "createDirectUploadControllers",
      value: function createDirectUploadControllers() {
        var controllers = [];
        this.inputs.forEach(function (input) {
          toArray$1(input.files).forEach(function (file) {
            var controller = new DirectUploadController(input, file);
            controllers.push(controller);
          });
        });
        return controllers;
      }
    }, {
      key: "dispatch",
      value: function dispatch(name) {
        var detail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        return dispatchEvent(this.form, "direct-uploads:" + name, {
          detail: detail
        });
      }
    }]);
    return DirectUploadsController;
  }();

  var processingAttribute = "data-direct-uploads-processing";
  var submitButtonsByForm = new WeakMap();
  var started = false;

  function start() {
    if (!started) {
      started = true;
      document.addEventListener("click", didClick, true);
      document.addEventListener("submit", didSubmitForm);
      document.addEventListener("ajax:before", didSubmitRemoteElement);
    }
  }

  function didClick(event) {
    var target = event.target;

    if ((target.tagName == "INPUT" || target.tagName == "BUTTON") && target.type == "submit" && target.form) {
      submitButtonsByForm.set(target.form, target);
    }
  }

  function didSubmitForm(event) {
    handleFormSubmissionEvent(event);
  }

  function didSubmitRemoteElement(event) {
    if (event.target.tagName == "FORM") {
      handleFormSubmissionEvent(event);
    }
  }

  function handleFormSubmissionEvent(event) {
    var form = event.target;

    if (form.hasAttribute(processingAttribute)) {
      event.preventDefault();
      return;
    }

    var controller = new DirectUploadsController(form);
    var inputs = controller.inputs;

    if (inputs.length) {
      event.preventDefault();
      form.setAttribute(processingAttribute, "");
      inputs.forEach(disable);
      controller.start(function (error) {
        form.removeAttribute(processingAttribute);

        if (error) {
          inputs.forEach(enable);
        } else {
          submitForm(form);
        }
      });
    }
  }

  function submitForm(form) {
    var button = submitButtonsByForm.get(form) || findElement(form, "input[type=submit], button[type=submit]");

    if (button) {
      var _button = button,
          disabled = _button.disabled;
      button.disabled = false;
      button.focus();
      button.click();
      button.disabled = disabled;
    } else {
      button = document.createElement("input");
      button.type = "submit";
      button.style.display = "none";
      form.appendChild(button);
      button.click();
      form.removeChild(button);
    }

    submitButtonsByForm["delete"](form);
  }

  function disable(input) {
    input.disabled = true;
  }

  function enable(input) {
    input.disabled = false;
  }

  function autostart() {
    if (window.ActiveStorage) {
      start();
    }
  }

  setTimeout(autostart, 1);
  exports.start = start;
  exports.DirectUpload = DirectUpload;
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
});

/***/ }),

/***/ "./node_modules/@rails/ujs/lib/assets/compiled/rails-ujs.js":
/*!******************************************************************!*\
  !*** ./node_modules/@rails/ujs/lib/assets/compiled/rails-ujs.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*
Unobtrusive JavaScript
https://github.com/rails/rails/blob/main/actionview/app/assets/javascripts
Released under the MIT license
 */
;
(function () {
  var context = this;
  (function () {
    (function () {
      this.Rails = {
        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',
        buttonClickSelector: {
          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',
          exclude: 'form button'
        },
        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',
        formSubmitSelector: 'form',
        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',
        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',
        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',
        fileInputSelector: 'input[name][type=file]:not([disabled])',
        linkDisableSelector: 'a[data-disable-with], a[data-disable]',
        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'
      };
    }).call(this);
  }).call(context);
  var Rails = context.Rails;
  (function () {
    (function () {
      var nonce;
      nonce = null;

      Rails.loadCSPNonce = function () {
        var ref;
        return nonce = (ref = document.querySelector("meta[name=csp-nonce]")) != null ? ref.content : void 0;
      };

      Rails.cspNonce = function () {
        return nonce != null ? nonce : Rails.loadCSPNonce();
      };
    }).call(this);
    (function () {
      var expando, m;
      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;

      Rails.matches = function (element, selector) {
        if (selector.exclude != null) {
          return m.call(element, selector.selector) && !m.call(element, selector.exclude);
        } else {
          return m.call(element, selector);
        }
      };

      expando = '_ujsData';

      Rails.getData = function (element, key) {
        var ref;
        return (ref = element[expando]) != null ? ref[key] : void 0;
      };

      Rails.setData = function (element, key, value) {
        if (element[expando] == null) {
          element[expando] = {};
        }

        return element[expando][key] = value;
      };

      Rails.$ = function (selector) {
        return Array.prototype.slice.call(document.querySelectorAll(selector));
      };
    }).call(this);
    (function () {
      var $, csrfParam, csrfToken;
      $ = Rails.$;

      csrfToken = Rails.csrfToken = function () {
        var meta;
        meta = document.querySelector('meta[name=csrf-token]');
        return meta && meta.content;
      };

      csrfParam = Rails.csrfParam = function () {
        var meta;
        meta = document.querySelector('meta[name=csrf-param]');
        return meta && meta.content;
      };

      Rails.CSRFProtection = function (xhr) {
        var token;
        token = csrfToken();

        if (token != null) {
          return xhr.setRequestHeader('X-CSRF-Token', token);
        }
      };

      Rails.refreshCSRFTokens = function () {
        var param, token;
        token = csrfToken();
        param = csrfParam();

        if (token != null && param != null) {
          return $('form input[name="' + param + '"]').forEach(function (input) {
            return input.value = token;
          });
        }
      };
    }).call(this);
    (function () {
      var CustomEvent, fire, matches, preventDefault;
      matches = Rails.matches;
      CustomEvent = window.CustomEvent;

      if (typeof CustomEvent !== 'function') {
        CustomEvent = function CustomEvent(event, params) {
          var evt;
          evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
          return evt;
        };

        CustomEvent.prototype = window.Event.prototype;
        preventDefault = CustomEvent.prototype.preventDefault;

        CustomEvent.prototype.preventDefault = function () {
          var result;
          result = preventDefault.call(this);

          if (this.cancelable && !this.defaultPrevented) {
            Object.defineProperty(this, 'defaultPrevented', {
              get: function get() {
                return true;
              }
            });
          }

          return result;
        };
      }

      fire = Rails.fire = function (obj, name, data) {
        var event;
        event = new CustomEvent(name, {
          bubbles: true,
          cancelable: true,
          detail: data
        });
        obj.dispatchEvent(event);
        return !event.defaultPrevented;
      };

      Rails.stopEverything = function (e) {
        fire(e.target, 'ujs:everythingStopped');
        e.preventDefault();
        e.stopPropagation();
        return e.stopImmediatePropagation();
      };

      Rails.delegate = function (element, selector, eventType, handler) {
        return element.addEventListener(eventType, function (e) {
          var target;
          target = e.target;

          while (!(!(target instanceof Element) || matches(target, selector))) {
            target = target.parentNode;
          }

          if (target instanceof Element && handler.call(target, e) === false) {
            e.preventDefault();
            return e.stopPropagation();
          }
        });
      };
    }).call(this);
    (function () {
      var AcceptHeaders, CSRFProtection, createXHR, cspNonce, fire, prepareOptions, processResponse;
      cspNonce = Rails.cspNonce, CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;
      AcceptHeaders = {
        '*': '*/*',
        text: 'text/plain',
        html: 'text/html',
        xml: 'application/xml, text/xml',
        json: 'application/json, text/javascript',
        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'
      };

      Rails.ajax = function (options) {
        var xhr;
        options = prepareOptions(options);
        xhr = createXHR(options, function () {
          var ref, response;
          response = processResponse((ref = xhr.response) != null ? ref : xhr.responseText, xhr.getResponseHeader('Content-Type'));

          if (Math.floor(xhr.status / 100) === 2) {
            if (typeof options.success === "function") {
              options.success(response, xhr.statusText, xhr);
            }
          } else {
            if (typeof options.error === "function") {
              options.error(response, xhr.statusText, xhr);
            }
          }

          return typeof options.complete === "function" ? options.complete(xhr, xhr.statusText) : void 0;
        });

        if (options.beforeSend != null && !options.beforeSend(xhr, options)) {
          return false;
        }

        if (xhr.readyState === XMLHttpRequest.OPENED) {
          return xhr.send(options.data);
        }
      };

      prepareOptions = function prepareOptions(options) {
        options.url = options.url || location.href;
        options.type = options.type.toUpperCase();

        if (options.type === 'GET' && options.data) {
          if (options.url.indexOf('?') < 0) {
            options.url += '?' + options.data;
          } else {
            options.url += '&' + options.data;
          }
        }

        if (AcceptHeaders[options.dataType] == null) {
          options.dataType = '*';
        }

        options.accept = AcceptHeaders[options.dataType];

        if (options.dataType !== '*') {
          options.accept += ', */*; q=0.01';
        }

        return options;
      };

      createXHR = function createXHR(options, done) {
        var xhr;
        xhr = new XMLHttpRequest();
        xhr.open(options.type, options.url, true);
        xhr.setRequestHeader('Accept', options.accept);

        if (typeof options.data === 'string') {
          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
        }

        if (!options.crossDomain) {
          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
          CSRFProtection(xhr);
        }

        xhr.withCredentials = !!options.withCredentials;

        xhr.onreadystatechange = function () {
          if (xhr.readyState === XMLHttpRequest.DONE) {
            return done(xhr);
          }
        };

        return xhr;
      };

      processResponse = function processResponse(response, type) {
        var parser, script;

        if (typeof response === 'string' && typeof type === 'string') {
          if (type.match(/\bjson\b/)) {
            try {
              response = JSON.parse(response);
            } catch (error) {}
          } else if (type.match(/\b(?:java|ecma)script\b/)) {
            script = document.createElement('script');
            script.setAttribute('nonce', cspNonce());
            script.text = response;
            document.head.appendChild(script).parentNode.removeChild(script);
          } else if (type.match(/\b(xml|html|svg)\b/)) {
            parser = new DOMParser();
            type = type.replace(/;.+/, '');

            try {
              response = parser.parseFromString(response, type);
            } catch (error) {}
          }
        }

        return response;
      };

      Rails.href = function (element) {
        return element.href;
      };

      Rails.isCrossDomain = function (url) {
        var e, originAnchor, urlAnchor;
        originAnchor = document.createElement('a');
        originAnchor.href = location.href;
        urlAnchor = document.createElement('a');

        try {
          urlAnchor.href = url;
          return !((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host || originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host);
        } catch (error) {
          e = error;
          return true;
        }
      };
    }).call(this);
    (function () {
      var matches, toArray;
      matches = Rails.matches;

      toArray = function toArray(e) {
        return Array.prototype.slice.call(e);
      };

      Rails.serializeElement = function (element, additionalParam) {
        var inputs, params;
        inputs = [element];

        if (matches(element, 'form')) {
          inputs = toArray(element.elements);
        }

        params = [];
        inputs.forEach(function (input) {
          if (!input.name || input.disabled) {
            return;
          }

          if (matches(input, 'fieldset[disabled] *')) {
            return;
          }

          if (matches(input, 'select')) {
            return toArray(input.options).forEach(function (option) {
              if (option.selected) {
                return params.push({
                  name: input.name,
                  value: option.value
                });
              }
            });
          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {
            return params.push({
              name: input.name,
              value: input.value
            });
          }
        });

        if (additionalParam) {
          params.push(additionalParam);
        }

        return params.map(function (param) {
          if (param.name != null) {
            return encodeURIComponent(param.name) + "=" + encodeURIComponent(param.value);
          } else {
            return param;
          }
        }).join('&');
      };

      Rails.formElements = function (form, selector) {
        if (matches(form, 'form')) {
          return toArray(form.elements).filter(function (el) {
            return matches(el, selector);
          });
        } else {
          return toArray(form.querySelectorAll(selector));
        }
      };
    }).call(this);
    (function () {
      var allowAction, fire, stopEverything;
      fire = Rails.fire, stopEverything = Rails.stopEverything;

      Rails.handleConfirm = function (e) {
        if (!allowAction(this)) {
          return stopEverything(e);
        }
      };

      Rails.confirm = function (message, element) {
        return confirm(message);
      };

      allowAction = function allowAction(element) {
        var answer, callback, message;
        message = element.getAttribute('data-confirm');

        if (!message) {
          return true;
        }

        answer = false;

        if (fire(element, 'confirm')) {
          try {
            answer = Rails.confirm(message, element);
          } catch (error) {}

          callback = fire(element, 'confirm:complete', [answer]);
        }

        return answer && callback;
      };
    }).call(this);
    (function () {
      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, isXhrRedirect, matches, setData, stopEverything;
      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;

      Rails.handleDisabledElement = function (e) {
        var element;
        element = this;

        if (element.disabled) {
          return stopEverything(e);
        }
      };

      Rails.enableElement = function (e) {
        var element;

        if (e instanceof Event) {
          if (isXhrRedirect(e)) {
            return;
          }

          element = e.target;
        } else {
          element = e;
        }

        if (matches(element, Rails.linkDisableSelector)) {
          return enableLinkElement(element);
        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {
          return enableFormElement(element);
        } else if (matches(element, Rails.formSubmitSelector)) {
          return enableFormElements(element);
        }
      };

      Rails.disableElement = function (e) {
        var element;
        element = e instanceof Event ? e.target : e;

        if (matches(element, Rails.linkDisableSelector)) {
          return disableLinkElement(element);
        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {
          return disableFormElement(element);
        } else if (matches(element, Rails.formSubmitSelector)) {
          return disableFormElements(element);
        }
      };

      disableLinkElement = function disableLinkElement(element) {
        var replacement;

        if (getData(element, 'ujs:disabled')) {
          return;
        }

        replacement = element.getAttribute('data-disable-with');

        if (replacement != null) {
          setData(element, 'ujs:enable-with', element.innerHTML);
          element.innerHTML = replacement;
        }

        element.addEventListener('click', stopEverything);
        return setData(element, 'ujs:disabled', true);
      };

      enableLinkElement = function enableLinkElement(element) {
        var originalText;
        originalText = getData(element, 'ujs:enable-with');

        if (originalText != null) {
          element.innerHTML = originalText;
          setData(element, 'ujs:enable-with', null);
        }

        element.removeEventListener('click', stopEverything);
        return setData(element, 'ujs:disabled', null);
      };

      disableFormElements = function disableFormElements(form) {
        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);
      };

      disableFormElement = function disableFormElement(element) {
        var replacement;

        if (getData(element, 'ujs:disabled')) {
          return;
        }

        replacement = element.getAttribute('data-disable-with');

        if (replacement != null) {
          if (matches(element, 'button')) {
            setData(element, 'ujs:enable-with', element.innerHTML);
            element.innerHTML = replacement;
          } else {
            setData(element, 'ujs:enable-with', element.value);
            element.value = replacement;
          }
        }

        element.disabled = true;
        return setData(element, 'ujs:disabled', true);
      };

      enableFormElements = function enableFormElements(form) {
        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);
      };

      enableFormElement = function enableFormElement(element) {
        var originalText;
        originalText = getData(element, 'ujs:enable-with');

        if (originalText != null) {
          if (matches(element, 'button')) {
            element.innerHTML = originalText;
          } else {
            element.value = originalText;
          }

          setData(element, 'ujs:enable-with', null);
        }

        element.disabled = false;
        return setData(element, 'ujs:disabled', null);
      };

      isXhrRedirect = function isXhrRedirect(event) {
        var ref, xhr;
        xhr = (ref = event.detail) != null ? ref[0] : void 0;
        return (xhr != null ? xhr.getResponseHeader("X-Xhr-Redirect") : void 0) != null;
      };
    }).call(this);
    (function () {
      var stopEverything;
      stopEverything = Rails.stopEverything;

      Rails.handleMethod = function (e) {
        var csrfParam, csrfToken, form, formContent, href, link, method;
        link = this;
        method = link.getAttribute('data-method');

        if (!method) {
          return;
        }

        href = Rails.href(link);
        csrfToken = Rails.csrfToken();
        csrfParam = Rails.csrfParam();
        form = document.createElement('form');
        formContent = "<input name='_method' value='" + method + "' type='hidden' />";

        if (csrfParam != null && csrfToken != null && !Rails.isCrossDomain(href)) {
          formContent += "<input name='" + csrfParam + "' value='" + csrfToken + "' type='hidden' />";
        }

        formContent += '<input type="submit" />';
        form.method = 'post';
        form.action = href;
        form.target = link.target;
        form.innerHTML = formContent;
        form.style.display = 'none';
        document.body.appendChild(form);
        form.querySelector('[type="submit"]').click();
        return stopEverything(e);
      };
    }).call(this);
    (function () {
      var ajax,
          fire,
          getData,
          isCrossDomain,
          isRemote,
          matches,
          serializeElement,
          setData,
          stopEverything,
          slice = [].slice;
      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;

      isRemote = function isRemote(element) {
        var value;
        value = element.getAttribute('data-remote');
        return value != null && value !== 'false';
      };

      Rails.handleRemote = function (e) {
        var button, data, dataType, element, method, url, withCredentials;
        element = this;

        if (!isRemote(element)) {
          return true;
        }

        if (!fire(element, 'ajax:before')) {
          fire(element, 'ajax:stopped');
          return false;
        }

        withCredentials = element.getAttribute('data-with-credentials');
        dataType = element.getAttribute('data-type') || 'script';

        if (matches(element, Rails.formSubmitSelector)) {
          button = getData(element, 'ujs:submit-button');
          method = getData(element, 'ujs:submit-button-formmethod') || element.method;
          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;

          if (method.toUpperCase() === 'GET') {
            url = url.replace(/\?.*$/, '');
          }

          if (element.enctype === 'multipart/form-data') {
            data = new FormData(element);

            if (button != null) {
              data.append(button.name, button.value);
            }
          } else {
            data = serializeElement(element, button);
          }

          setData(element, 'ujs:submit-button', null);
          setData(element, 'ujs:submit-button-formmethod', null);
          setData(element, 'ujs:submit-button-formaction', null);
        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {
          method = element.getAttribute('data-method');
          url = element.getAttribute('data-url');
          data = serializeElement(element, element.getAttribute('data-params'));
        } else {
          method = element.getAttribute('data-method');
          url = Rails.href(element);
          data = element.getAttribute('data-params');
        }

        ajax({
          type: method || 'GET',
          url: url,
          data: data,
          dataType: dataType,
          beforeSend: function beforeSend(xhr, options) {
            if (fire(element, 'ajax:beforeSend', [xhr, options])) {
              return fire(element, 'ajax:send', [xhr]);
            } else {
              fire(element, 'ajax:stopped');
              return false;
            }
          },
          success: function success() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:success', args);
          },
          error: function error() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:error', args);
          },
          complete: function complete() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:complete', args);
          },
          crossDomain: isCrossDomain(url),
          withCredentials: withCredentials != null && withCredentials !== 'false'
        });
        return stopEverything(e);
      };

      Rails.formSubmitButtonClick = function (e) {
        var button, form;
        button = this;
        form = button.form;

        if (!form) {
          return;
        }

        if (button.name) {
          setData(form, 'ujs:submit-button', {
            name: button.name,
            value: button.value
          });
        }

        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);
        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));
        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));
      };

      Rails.preventInsignificantClick = function (e) {
        var data, insignificantMetaClick, link, metaClick, method, nonPrimaryMouseClick;
        link = this;
        method = (link.getAttribute('data-method') || 'GET').toUpperCase();
        data = link.getAttribute('data-params');
        metaClick = e.metaKey || e.ctrlKey;
        insignificantMetaClick = metaClick && method === 'GET' && !data;
        nonPrimaryMouseClick = e.button != null && e.button !== 0;

        if (nonPrimaryMouseClick || insignificantMetaClick) {
          return e.stopImmediatePropagation();
        }
      };
    }).call(this);
    (function () {
      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMethod, handleRemote, loadCSPNonce, preventInsignificantClick, refreshCSRFTokens;
      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, loadCSPNonce = Rails.loadCSPNonce, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, preventInsignificantClick = Rails.preventInsignificantClick, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMethod = Rails.handleMethod;

      if (typeof jQuery !== "undefined" && jQuery !== null && jQuery.ajax != null) {
        if (jQuery.rails) {
          throw new Error('If you load both jquery_ujs and rails-ujs, use rails-ujs only.');
        }

        jQuery.rails = Rails;
        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {
          if (!options.crossDomain) {
            return CSRFProtection(xhr);
          }
        });
      }

      Rails.start = function () {
        if (window._rails_loaded) {
          throw new Error('rails-ujs has already been loaded!');
        }

        window.addEventListener('pageshow', function () {
          $(Rails.formEnableSelector).forEach(function (el) {
            if (getData(el, 'ujs:disabled')) {
              return enableElement(el);
            }
          });
          return $(Rails.linkDisableSelector).forEach(function (el) {
            if (getData(el, 'ujs:disabled')) {
              return enableElement(el);
            }
          });
        });
        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);
        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);
        delegate(document, Rails.linkClickSelector, 'click', preventInsignificantClick);
        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);
        delegate(document, Rails.linkClickSelector, 'click', disableElement);
        delegate(document, Rails.linkClickSelector, 'click', handleRemote);
        delegate(document, Rails.linkClickSelector, 'click', handleMethod);
        delegate(document, Rails.buttonClickSelector, 'click', preventInsignificantClick);
        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);
        delegate(document, Rails.buttonClickSelector, 'click', disableElement);
        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);
        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);
        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);
        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);
        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);
        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);
        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);
        delegate(document, Rails.formSubmitSelector, 'submit', function (e) {
          return setTimeout(function () {
            return disableElement(e);
          }, 13);
        });
        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);
        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.formInputClickSelector, 'click', preventInsignificantClick);
        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);
        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);
        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);
        document.addEventListener('DOMContentLoaded', loadCSPNonce);
        return window._rails_loaded = true;
      };

      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {
        Rails.start();
      }
    }).call(this);
  }).call(this);

  if (( false ? undefined : _typeof(module)) === "object" && module.exports) {
    module.exports = Rails;
  } else if (true) {
    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (Rails),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
}).call(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/automation-events/build/es5/bundle.js":
/*!************************************************************!*\
  !*** ./node_modules/automation-events/build/es5/bundle.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (global, factory) {
  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? factory(exports, __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/slicedToArray.js"), __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/classCallCheck.js"), __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/createClass.js")) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/slicedToArray.js"), __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/classCallCheck.js"), __webpack_require__(/*! @babel/runtime/helpers/createClass */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/createClass.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (undefined);
})(this, function (exports, _slicedToArray, _classCallCheck, _createClass) {
  'use strict';

  function _interopDefaultLegacy(e) {
    return e && _typeof(e) === 'object' && 'default' in e ? e : {
      'default': e
    };
  }

  var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

  var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);

  var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);

  var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {
    return {
      endTime: endTime,
      insertTime: insertTime,
      type: 'exponentialRampToValue',
      value: value
    };
  };

  var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {
    return {
      endTime: endTime,
      insertTime: insertTime,
      type: 'linearRampToValue',
      value: value
    };
  };

  var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {
    return {
      startTime: startTime,
      type: 'setValue',
      value: value
    };
  };

  var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {
    return {
      duration: duration,
      startTime: startTime,
      type: 'setValueCurve',
      values: values
    };
  };

  var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {
    var startTime = _ref.startTime,
        target = _ref.target,
        timeConstant = _ref.timeConstant;
    return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);
  };

  var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {
    return automationEvent.type === 'exponentialRampToValue';
  };

  var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {
    return automationEvent.type === 'linearRampToValue';
  };

  var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {
    return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);
  };

  var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {
    return automationEvent.type === 'setValue';
  };

  var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {
    return automationEvent.type === 'setValueCurve';
  };

  var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {
    var automationEvent = automationEvents[index];
    return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);
  };

  var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {
    return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];
  };

  var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {
    return automationEvent.type === 'cancelAndHold';
  };

  var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {
    return automationEvent.type === 'cancelScheduledValues';
  };

  var getEventTime = function getEventTime(automationEvent) {
    if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
      return automationEvent.cancelTime;
    }

    if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {
      return automationEvent.endTime;
    }

    return automationEvent.startTime;
  };

  var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
    var endTime = _ref.endTime,
        value = _ref.value;

    if (valueAtStartTime === value) {
      return value;
    }

    if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {
      return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));
    }

    return 0;
  };

  var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
    var endTime = _ref.endTime,
        value = _ref.value;
    return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);
  };

  var interpolateValue = function interpolateValue(values, theoreticIndex) {
    var lowerIndex = Math.floor(theoreticIndex);
    var upperIndex = Math.ceil(theoreticIndex);

    if (lowerIndex === upperIndex) {
      return values[lowerIndex];
    }

    return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];
  };

  var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {
    var duration = _ref.duration,
        startTime = _ref.startTime,
        values = _ref.values;
    var theoreticIndex = (time - startTime) / duration * (values.length - 1);
    return interpolateValue(values, theoreticIndex);
  };

  var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {
    return automationEvent.type === 'setTarget';
  };

  var AutomationEventList = /*#__PURE__*/function () {
    function AutomationEventList(defaultValue) {
      _classCallCheck__default['default'](this, AutomationEventList);

      this._automationEvents = [];
      this._currenTime = 0;
      this._defaultValue = defaultValue;
    }

    _createClass__default['default'](AutomationEventList, [{
      key: Symbol.iterator,
      value: function value() {
        return this._automationEvents[Symbol.iterator]();
      }
    }, {
      key: "add",
      value: function add(automationEvent) {
        var eventTime = getEventTime(automationEvent);

        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {
            if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {
              return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;
            }

            return getEventTime(currentAutomationEvent) >= eventTime;
          });

          var removedAutomationEvent = this._automationEvents[index];

          if (index !== -1) {
            this._automationEvents = this._automationEvents.slice(0, index);
          }

          if (isCancelAndHoldAutomationEvent(automationEvent)) {
            var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];

            if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {
              if (isSetTargetAutomationEvent(lastAutomationEvent)) {
                throw new Error('The internal list is malformed.');
              }

              var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);
              var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;
              var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);
              var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);

              this._automationEvents.push(truncatedAutomationEvent);
            }

            if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {
              this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));
            }

            if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {
              this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);
            }
          }
        } else {
          var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {
            return getEventTime(currentAutomationEvent) > eventTime;
          });

          var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];

          if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {
            return false;
          }

          var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;

          if (_index === -1) {
            this._automationEvents.push(persistentAutomationEvent);
          } else {
            if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {
              return false;
            }

            this._automationEvents.splice(_index, 0, persistentAutomationEvent);
          }
        }

        return true;
      }
    }, {
      key: "flush",
      value: function flush(time) {
        var index = this._automationEvents.findIndex(function (currentAutomationEvent) {
          return getEventTime(currentAutomationEvent) > time;
        });

        if (index > 1) {
          var remainingAutomationEvents = this._automationEvents.slice(index - 1);

          var firstRemainingAutomationEvent = remainingAutomationEvents[0];

          if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {
            remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));
          }

          this._automationEvents = remainingAutomationEvents;
        }
      }
    }, {
      key: "getValue",
      value: function getValue(time) {
        if (this._automationEvents.length === 0) {
          return this._defaultValue;
        }

        var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];

        var index = this._automationEvents.findIndex(function (automationEvent) {
          return getEventTime(automationEvent) > time;
        });

        var nextAutomationEvent = this._automationEvents[index];
        var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];

        if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {
          return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);
        }

        if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
          return currentAutomationEvent.value;
        }

        if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {
          if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {
            return getValueCurveValueAtTime(time, currentAutomationEvent);
          }

          return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];
        }

        if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
          return currentAutomationEvent.value;
        }

        if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {
          var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),
              _getEndTimeAndValueOf2 = _slicedToArray__default['default'](_getEndTimeAndValueOf, 2),
              startTime = _getEndTimeAndValueOf2[0],
              value = _getEndTimeAndValueOf2[1];

          return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);
        }

        if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {
          var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),
              _getEndTimeAndValueOf4 = _slicedToArray__default['default'](_getEndTimeAndValueOf3, 2),
              _startTime = _getEndTimeAndValueOf4[0],
              _value = _getEndTimeAndValueOf4[1];

          return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);
        }

        return this._defaultValue;
      }
    }]);

    return AutomationEventList;
  }();

  var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {
    return {
      cancelTime: cancelTime,
      type: 'cancelAndHold'
    };
  };

  var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {
    return {
      cancelTime: cancelTime,
      type: 'cancelScheduledValues'
    };
  };

  var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {
    return {
      endTime: endTime,
      type: 'exponentialRampToValue',
      value: value
    };
  };

  var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {
    return {
      endTime: endTime,
      type: 'linearRampToValue',
      value: value
    };
  };

  var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {
    return {
      startTime: startTime,
      target: target,
      timeConstant: timeConstant,
      type: 'setTarget'
    };
  };

  exports.AutomationEventList = AutomationEventList;
  exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;
  exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;
  exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;
  exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;
  exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;
  exports.createSetValueAutomationEvent = createSetValueAutomationEvent;
  exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
});

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/createClass.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/createClass.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/automation-events/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ "./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;
module.exports["default"] = module.exports, module.exports.__esModule = true;

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/constants.js":
/*!***************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/constants.js ***!
  \***************************************************************************/
/*! exports provided: MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MOST_NEGATIVE_SINGLE_FLOAT", function() { return MOST_NEGATIVE_SINGLE_FLOAT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MOST_POSITIVE_SINGLE_FLOAT", function() { return MOST_POSITIVE_SINGLE_FLOAT; });
var MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;
var MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js ***!
  \***************************************************************************************/
/*! exports provided: createAbortError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAbortError", function() { return createAbortError; });
var createAbortError = function createAbortError() {
  return new DOMException('', 'AbortError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createAddActiveInputConnectionToAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddActiveInputConnectionToAudioNode", function() { return createAddActiveInputConnectionToAudioNode; });
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var createAddActiveInputConnectionToAudioNode = function createAddActiveInputConnectionToAudioNode(insertElementInSet) {
  return function (activeInputs, source, _ref, ignoreDuplicates) {
    var _ref2 = _slicedToArray(_ref, 3),
        output = _ref2[0],
        input = _ref2[1],
        eventListener = _ref2[2];

    insertElementInSet(activeInputs[input], [source, output, eventListener], function (activeInputConnection) {
      return activeInputConnection[0] === source && activeInputConnection[1] === output;
    }, ignoreDuplicates);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js ***!
  \******************************************************************************************************/
/*! exports provided: createAddAudioNodeConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddAudioNodeConnections", function() { return createAddAudioNodeConnections; });
var createAddAudioNodeConnections = function createAddAudioNodeConnections(audioNodeConnectionsStore) {
  return function (audioNode, audioNodeRenderer, nativeAudioNode) {
    var activeInputs = [];

    for (var i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {
      activeInputs.push(new Set());
    }

    audioNodeConnectionsStore.set(audioNode, {
      activeInputs: activeInputs,
      outputs: new Set(),
      passiveInputs: new WeakMap(),
      renderer: audioNodeRenderer
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js ***!
  \*******************************************************************************************************/
/*! exports provided: createAddAudioParamConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddAudioParamConnections", function() { return createAddAudioParamConnections; });
var createAddAudioParamConnections = function createAddAudioParamConnections(audioParamConnectionsStore) {
  return function (audioParam, audioParamRenderer) {
    audioParamConnectionsStore.set(audioParam, {
      activeInputs: new Set(),
      passiveInputs: new WeakMap(),
      renderer: audioParamRenderer
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js ***!
  \****************************************************************************************************/
/*! exports provided: createAddAudioWorkletModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddAudioWorkletModule", function() { return createAddAudioWorkletModule; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _helpers_is_constructible__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-constructible */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js");
/* harmony import */ var _helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/split-import-statements */ "./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }





var verifyParameterDescriptors = function verifyParameterDescriptors(parameterDescriptors) {
  if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {
    throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');
  }
};

var verifyProcessorCtor = function verifyProcessorCtor(processorCtor) {
  if (!Object(_helpers_is_constructible__WEBPACK_IMPORTED_MODULE_1__["isConstructible"])(processorCtor)) {
    throw new TypeError('The given value for processorCtor should be a constructor.');
  }

  if (processorCtor.prototype === null || _typeof(processorCtor.prototype) !== 'object') {
    throw new TypeError('The given value for processorCtor should have a prototype.');
  }
};

var createAddAudioWorkletModule = function createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) {
  return function (context, moduleURL) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
      credentials: 'omit'
    };
    var nativeContext = getNativeContext(context); // Bug #59: Safari does not implement the audioWorklet property.

    if (nativeContext.audioWorklet !== undefined) {
      return Promise.all([fetchSource(moduleURL), Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))]).then(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            _ref2$ = _slicedToArray(_ref2[0], 2),
            source = _ref2$[0],
            absoluteUrl = _ref2$[1],
            isSupportingPostMessage = _ref2[1];

        var _splitImportStatement = Object(_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__["splitImportStatements"])(source, absoluteUrl),
            _splitImportStatement2 = _slicedToArray(_splitImportStatement, 2),
            importStatements = _splitImportStatement2[0],
            sourceWithoutImportStatements = _splitImportStatement2[1];
        /*
         * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
         *
         * This is the unminified version of the code used below.
         *
         * ```js
         * class extends AudioWorkletProcessor {
         *
         *     __buffers = new WeakSet();
         *
         *     constructor () {
         *         super();
         *
         *         this.port.postMessage = ((postMessage) => {
         *             return (message, transferables) => {
         *                 const filteredTransferables = (transferables)
         *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))
         *                     : transferables;
         *
         *                 return postMessage.call(this.port, message, filteredTransferables);
         *              };
         *         })(this.port.postMessage);
         *     }
         * }
         * ```
         */


        var patchedSourceWithoutImportStatements = isSupportingPostMessage ? sourceWithoutImportStatements : sourceWithoutImportStatements.replace(/\s+extends\s+AudioWorkletProcessor\s*{/, " extends (class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}){");
        /*
         * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.
         *
         * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
         *
         * This is the unminified version of the code used below:
         *
         * ```js
         * `${ importStatements };
         * ((registerProcessor) => {${ sourceWithoutImportStatements }
         * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {
         *
         *     __collectBuffers = (array) => {
         *         array.forEach((element) => this.__buffers.add(element.buffer));
         *     };
         *
         *     process (inputs, outputs, parameters) {
         *         inputs.forEach(this.__collectBuffers);
         *         outputs.forEach(this.__collectBuffers);
         *         this.__collectBuffers(Object.values(parameters));
         *
         *         return super.process(
         *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),
         *             outputs,
         *             parameters
         *         );
         *     }
         *
         * }))`
         * ```
         */

        var memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';
        var bufferRegistration = isSupportingPostMessage ? '' : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';
        var wrappedSource = "".concat(importStatements, ";(registerProcessor=>{").concat(patchedSourceWithoutImportStatements, "\n})((n,p)=>registerProcessor(n,class extends p{").concat(memberDefinition, "process(i,o,p){").concat(bufferRegistration, "return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))");
        var blob = new Blob([wrappedSource], {
          type: 'application/javascript; charset=utf-8'
        });
        var url = URL.createObjectURL(blob);
        return nativeContext.audioWorklet.addModule(url, options).then(function () {
          if (isNativeOfflineAudioContext(nativeContext)) {
            return;
          } // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.


          var backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);
          return backupOfflineAudioContext.audioWorklet.addModule(url, options);
        }).finally(function () {
          return URL.revokeObjectURL(url);
        });
      });
    }

    var resolvedRequestsOfContext = resolvedRequests.get(context);

    if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {
      return Promise.resolve();
    }

    var ongoingRequestsOfContext = ongoingRequests.get(context);

    if (ongoingRequestsOfContext !== undefined) {
      var promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);

      if (promiseOfOngoingRequest !== undefined) {
        return promiseOfOngoingRequest;
      }
    }

    var promise = fetchSource(moduleURL).then(function (_ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
          source = _ref4[0],
          absoluteUrl = _ref4[1];

      var _splitImportStatement3 = Object(_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__["splitImportStatements"])(source, absoluteUrl),
          _splitImportStatement4 = _slicedToArray(_splitImportStatement3, 2),
          importStatements = _splitImportStatement4[0],
          sourceWithoutImportStatements = _splitImportStatement4[1];
      /*
       * This is the unminified version of the code used below:
       *
       * ```js
       * ${ importStatements };
       * ((a, b) => {
       *     (a[b] = a[b] || [ ]).push(
       *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {
       *             ${ sourceWithoutImportStatements }
       *         }
       *     );
       * })(window, '_AWGS');
       * ```
       */
      // tslint:disable-next-line:max-line-length


      var wrappedSource = "".concat(importStatements, ";((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{").concat(sourceWithoutImportStatements, "\n})})(window,'_AWGS')"); // @todo Evaluating the given source code is a possible security problem.

      return evaluateSource(wrappedSource);
    }).then(function () {
      var evaluateAudioWorkletGlobalScope = window._AWGS.pop();

      if (evaluateAudioWorkletGlobalScope === undefined) {
        // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.
        throw new SyntaxError();
      }

      exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, function () {
        return evaluateAudioWorkletGlobalScope(function AudioWorkletProcessor() {
          _classCallCheck(this, AudioWorkletProcessor);
        }, undefined, function (name, processorCtor) {
          if (name.trim() === '') {
            throw createNotSupportedError();
          }

          var nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS"].get(nativeContext);

          if (nodeNameToProcessorConstructorMap !== undefined) {
            if (nodeNameToProcessorConstructorMap.has(name)) {
              throw createNotSupportedError();
            }

            verifyProcessorCtor(processorCtor);
            verifyParameterDescriptors(processorCtor.parameterDescriptors);
            nodeNameToProcessorConstructorMap.set(name, processorCtor);
          } else {
            verifyProcessorCtor(processorCtor);
            verifyParameterDescriptors(processorCtor.parameterDescriptors);
            _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS"].set(nativeContext, new Map([[name, processorCtor]]));
          }
        }, nativeContext.sampleRate, undefined, undefined);
      });
    });

    if (ongoingRequestsOfContext === undefined) {
      ongoingRequests.set(context, new Map([[moduleURL, promise]]));
    } else {
      ongoingRequestsOfContext.set(moduleURL, promise);
    }

    promise.then(function () {
      var rslvdRqstsFCntxt = resolvedRequests.get(context);

      if (rslvdRqstsFCntxt === undefined) {
        resolvedRequests.set(context, new Set([moduleURL]));
      } else {
        rslvdRqstsFCntxt.add(moduleURL);
      }
    }).finally(function () {
      var ngngRqstsFCntxt = ongoingRequests.get(context);

      if (ngngRqstsFCntxt !== undefined) {
        ngngRqstsFCntxt.delete(moduleURL);
      }
    });
    return promise;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js ***!
  \********************************************************************************************************/
/*! exports provided: createAddConnectionToAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddConnectionToAudioNode", function() { return createAddConnectionToAudioNode; });
/* harmony import */ var _helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/delete-passive-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive-when-necessary */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js");



var createAddConnectionToAudioNode = function createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) {
  var tailTimeTimeoutIds = new WeakMap();
  return function (source, destination, output, input, isOffline) {
    var _getAudioNodeConnecti = getAudioNodeConnections(destination),
        activeInputs = _getAudioNodeConnecti.activeInputs,
        passiveInputs = _getAudioNodeConnecti.passiveInputs;

    var _getAudioNodeConnecti2 = getAudioNodeConnections(source),
        outputs = _getAudioNodeConnecti2.outputs;

    var eventListeners = getEventListenersOfAudioNode(source);

    var eventListener = function eventListener(isActive) {
      var nativeDestinationAudioNode = getNativeAudioNode(destination);
      var nativeSourceAudioNode = getNativeAudioNode(source);

      if (isActive) {
        var partialConnection = Object(_helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_0__["deletePassiveInputConnectionToAudioNode"])(passiveInputs, source, output, input);
        addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);

        if (!isOffline && !isPartOfACycle(source)) {
          connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
        }

        if (isPassiveAudioNode(destination)) {
          Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__["setInternalStateToActive"])(destination);
        }
      } else {
        var _partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);

        addPassiveInputConnectionToAudioNode(passiveInputs, input, _partialConnection, false);

        if (!isOffline && !isPartOfACycle(source)) {
          disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
        }

        var tailTime = getAudioNodeTailTime(destination);

        if (tailTime === 0) {
          if (isActiveAudioNode(destination)) {
            Object(_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_2__["setInternalStateToPassiveWhenNecessary"])(destination, activeInputs);
          }
        } else {
          var tailTimeTimeoutId = tailTimeTimeoutIds.get(destination);

          if (tailTimeTimeoutId !== undefined) {
            clearTimeout(tailTimeTimeoutId);
          }

          tailTimeTimeoutIds.set(destination, setTimeout(function () {
            if (isActiveAudioNode(destination)) {
              Object(_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_2__["setInternalStateToPassiveWhenNecessary"])(destination, activeInputs);
            }
          }, tailTime * 1000));
        }
      }
    };

    if (insertElementInSet(outputs, [destination, output, input], function (outputConnection) {
      return outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input;
    }, true)) {
      eventListeners.add(eventListener);

      if (isActiveAudioNode(source)) {
        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);
      } else {
        addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);
      }

      return true;
    }

    return false;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js ***!
  \**********************************************************************************************************************/
/*! exports provided: createAddPassiveInputConnectionToAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddPassiveInputConnectionToAudioNode", function() { return createAddPassiveInputConnectionToAudioNode; });
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var createAddPassiveInputConnectionToAudioNode = function createAddPassiveInputConnectionToAudioNode(insertElementInSet) {
  return function (passiveInputs, input, _ref, ignoreDuplicates) {
    var _ref2 = _slicedToArray(_ref, 3),
        source = _ref2[0],
        output = _ref2[1],
        eventListener = _ref2[2];

    var passiveInputConnections = passiveInputs.get(source);

    if (passiveInputConnections === undefined) {
      passiveInputs.set(source, new Set([[output, input, eventListener]]));
    } else {
      insertElementInSet(passiveInputConnections, [output, input, eventListener], function (passiveInputConnection) {
        return passiveInputConnection[0] === output && passiveInputConnection[1] === input;
      }, ignoreDuplicates);
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js ***!
  \*************************************************************************************************/
/*! exports provided: createAddSilentConnection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddSilentConnection", function() { return createAddSilentConnection; });
var createAddSilentConnection = function createAddSilentConnection(createNativeGainNode) {
  return function (nativeContext, nativeAudioScheduledSourceNode) {
    var nativeGainNode = createNativeGainNode(nativeContext, {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      gain: 0
    });
    nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);

    var disconnect = function disconnect() {
      nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);
      nativeAudioScheduledSourceNode.disconnect(nativeGainNode);
      nativeGainNode.disconnect();
    };

    nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js ***!
  \*************************************************************************************************************/
/*! exports provided: createAddUnrenderedAudioWorkletNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAddUnrenderedAudioWorkletNode", function() { return createAddUnrenderedAudioWorkletNode; });
var createAddUnrenderedAudioWorkletNode = function createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes) {
  return function (nativeContext, audioWorkletNode) {
    getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js ***!
  \*****************************************************************************************************/
/*! exports provided: createAnalyserNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAnalyserNodeConstructor", function() { return createAnalyserNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  fftSize: 2048,
  maxDecibels: -30,
  minDecibels: -100,
  smoothingTimeConstant: 0.8
};
var createAnalyserNodeConstructor = function createAnalyserNodeConstructor(audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_audionNodeConstructo) {
    _inherits(AnalyserNode, _audionNodeConstructo);

    var _super = _createSuper(AnalyserNode);

    function AnalyserNode(context, options) {
      var _this;

      _classCallCheck(this, AnalyserNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);
      var analyserNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null;
      _this = _super.call(this, context, false, nativeAnalyserNode, analyserNodeRenderer);
      _this._nativeAnalyserNode = nativeAnalyserNode;
      return _this;
    }

    _createClass(AnalyserNode, [{
      key: "fftSize",
      get: function get() {
        return this._nativeAnalyserNode.fftSize;
      },
      set: function set(value) {
        this._nativeAnalyserNode.fftSize = value;
      }
    }, {
      key: "frequencyBinCount",
      get: function get() {
        return this._nativeAnalyserNode.frequencyBinCount;
      }
    }, {
      key: "maxDecibels",
      get: function get() {
        return this._nativeAnalyserNode.maxDecibels;
      },
      set: function set(value) {
        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
        var maxDecibels = this._nativeAnalyserNode.maxDecibels;
        this._nativeAnalyserNode.maxDecibels = value;

        if (!(value > this._nativeAnalyserNode.minDecibels)) {
          this._nativeAnalyserNode.maxDecibels = maxDecibels;
          throw createIndexSizeError();
        }
      }
    }, {
      key: "minDecibels",
      get: function get() {
        return this._nativeAnalyserNode.minDecibels;
      },
      set: function set(value) {
        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
        var minDecibels = this._nativeAnalyserNode.minDecibels;
        this._nativeAnalyserNode.minDecibels = value;

        if (!(this._nativeAnalyserNode.maxDecibels > value)) {
          this._nativeAnalyserNode.minDecibels = minDecibels;
          throw createIndexSizeError();
        }
      }
    }, {
      key: "smoothingTimeConstant",
      get: function get() {
        return this._nativeAnalyserNode.smoothingTimeConstant;
      },
      set: function set(value) {
        this._nativeAnalyserNode.smoothingTimeConstant = value;
      }
    }, {
      key: "getByteFrequencyData",
      value: function getByteFrequencyData(array) {
        this._nativeAnalyserNode.getByteFrequencyData(array);
      }
    }, {
      key: "getByteTimeDomainData",
      value: function getByteTimeDomainData(array) {
        this._nativeAnalyserNode.getByteTimeDomainData(array);
      }
    }, {
      key: "getFloatFrequencyData",
      value: function getFloatFrequencyData(array) {
        this._nativeAnalyserNode.getFloatFrequencyData(array);
      }
    }, {
      key: "getFloatTimeDomainData",
      value: function getFloatTimeDomainData(array) {
        this._nativeAnalyserNode.getFloatTimeDomainData(array);
      }
    }]);

    return AnalyserNode;
  }(audionNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js ***!
  \**********************************************************************************************************/
/*! exports provided: createAnalyserNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAnalyserNodeRendererFactory", function() { return createAnalyserNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createAnalyserNodeRendererFactory = function createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeAnalyserNodes = new WeakMap();

    var createAnalyserNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeAnalyserNode, nativeAnalyserNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeAnalyserNode = getNativeAudioNode(proxy); // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeAnalyserNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeAnalyserNode, nativeOfflineAudioContext);

                if (!nativeAnalyserNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeAnalyserNode.channelCount,
                    channelCountMode: nativeAnalyserNode.channelCountMode,
                    channelInterpretation: nativeAnalyserNode.channelInterpretation,
                    fftSize: nativeAnalyserNode.fftSize,
                    maxDecibels: nativeAnalyserNode.maxDecibels,
                    minDecibels: nativeAnalyserNode.minDecibels,
                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant
                  };
                  nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);
                }

                renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);
                _context.next = 6;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);

              case 6:
                return _context.abrupt("return", nativeAnalyserNode);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createAnalyserNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);

        if (renderedNativeAnalyserNode !== undefined) {
          return Promise.resolve(renderedNativeAnalyserNode);
        }

        return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js ***!
  \****************************************************************************************************/
/*! exports provided: createAudioBufferConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioBufferConstructor", function() { return createAudioBufferConstructor; });
/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js");
/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var DEFAULT_OPTIONS = {
  numberOfChannels: 1
};
var createAudioBufferConstructor = function createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) {
  var nativeOfflineAudioContext = null;
  return /*#__PURE__*/function () {
    function AudioBuffer(options) {
      _classCallCheck(this, AudioBuffer);

      if (nativeOfflineAudioContextConstructor === null) {
        throw new Error('Missing the native OfflineAudioContext constructor.');
      }

      var _DEFAULT_OPTIONS$opti = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options),
          length = _DEFAULT_OPTIONS$opti.length,
          numberOfChannels = _DEFAULT_OPTIONS$opti.numberOfChannels,
          sampleRate = _DEFAULT_OPTIONS$opti.sampleRate;

      if (nativeOfflineAudioContext === null) {
        nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
      }
      /*
       * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the
       * factory function. But since Firefox also supports the constructor everything should be fine.
       */


      var audioBuffer = nativeAudioBufferConstructor !== null && cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport) ? new nativeAudioBufferConstructor({
        length: length,
        numberOfChannels: numberOfChannels,
        sampleRate: sampleRate
      }) : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate); // Bug #99: Safari does not throw an error when the numberOfChannels is zero.

      if (audioBuffer.numberOfChannels === 0) {
        throw createNotSupportedError();
      } // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
      // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.


      if (typeof audioBuffer.copyFromChannel !== 'function') {
        wrapAudioBufferCopyChannelMethods(audioBuffer);
        Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__["wrapAudioBufferGetChannelDataMethod"])(audioBuffer); // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
      } else if (!cacheTestResult(_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"], function () {
        return Object(_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"])(audioBuffer);
      })) {
        wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
      }

      audioBufferStore.add(audioBuffer);
      /*
       * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native
       * (Offline)AudioContexts.
       */

      return audioBuffer;
    }

    _createClass(AudioBuffer, null, [{
      key: Symbol.hasInstance,
      value: function value(instance) {
        return instance !== null && _typeof(instance) === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype || audioBufferStore.has(instance);
      }
    }]);

    return AudioBuffer;
  }();
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js ***!
  \****************************************************************************************************************/
/*! exports provided: createAudioBufferSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioBufferSourceNodeConstructor", function() { return createAudioBufferSourceNodeConstructor; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





var DEFAULT_OPTIONS = {
  buffer: null,
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  // Bug #149: Safari does not yet support the detune AudioParam.
  loop: false,
  loopEnd: 0,
  loopStart: 0,
  playbackRate: 1
};
var createAudioBufferSourceNodeConstructor = function createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(AudioBufferSourceNode, _audioNodeConstructor);

    var _super = _createSuper(AudioBufferSourceNode);

    function AudioBufferSourceNode(context, options) {
      var _this;

      _classCallCheck(this, AudioBufferSourceNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer() : null;
      _this = _super.call(this, context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);
      _this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;
      _this._isBufferNullified = false;
      _this._isBufferSet = mergedOptions.buffer !== null;
      _this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;
      _this._onended = null; // Bug #73: Safari does not export the correct values for maxValue and minValue.

      _this._playbackRate = createAudioParam(_assertThisInitialized(_this), isOffline, nativeAudioBufferSourceNode.playbackRate, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      return _this;
    }

    _createClass(AudioBufferSourceNode, [{
      key: "buffer",
      get: function get() {
        if (this._isBufferNullified) {
          return null;
        }

        return this._nativeAudioBufferSourceNode.buffer;
      },
      set: function set(value) {
        this._nativeAudioBufferSourceNode.buffer = value; // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.

        if (value !== null) {
          if (this._isBufferSet) {
            throw createInvalidStateError();
          }

          this._isBufferSet = true;
        }
      }
    }, {
      key: "loop",
      get: function get() {
        return this._nativeAudioBufferSourceNode.loop;
      },
      set: function set(value) {
        this._nativeAudioBufferSourceNode.loop = value;
      }
    }, {
      key: "loopEnd",
      get: function get() {
        return this._nativeAudioBufferSourceNode.loopEnd;
      },
      set: function set(value) {
        this._nativeAudioBufferSourceNode.loopEnd = value;
      }
    }, {
      key: "loopStart",
      get: function get() {
        return this._nativeAudioBufferSourceNode.loopStart;
      },
      set: function set(value) {
        this._nativeAudioBufferSourceNode.loopStart = value;
      }
    }, {
      key: "onended",
      get: function get() {
        return this._onended;
      },
      set: function set(value) {
        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
        this._nativeAudioBufferSourceNode.onended = wrappedListener;
        var nativeOnEnded = this._nativeAudioBufferSourceNode.onended;
        this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
      }
    }, {
      key: "playbackRate",
      get: function get() {
        return this._playbackRate;
      }
    }, {
      key: "start",
      value: function start() {
        var _this2 = this;

        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var duration = arguments.length > 2 ? arguments[2] : undefined;

        this._nativeAudioBufferSourceNode.start(when, offset, duration);

        if (this._audioBufferSourceNodeRenderer !== null) {
          this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];
        }

        if (this.context.state !== 'closed') {
          Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__["setInternalStateToActive"])(this);

          var resetInternalStateToPassive = function resetInternalStateToPassive() {
            _this2._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);

            if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__["isActiveAudioNode"])(_this2)) {
              Object(_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__["setInternalStateToPassive"])(_this2);
            }
          };

          this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);
        }
      }
    }, {
      key: "stop",
      value: function stop() {
        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

        this._nativeAudioBufferSourceNode.stop(when);

        if (this._audioBufferSourceNodeRenderer !== null) {
          this._audioBufferSourceNodeRenderer.stop = when;
        }
      }
    }]);

    return AudioBufferSourceNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createAudioBufferSourceNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioBufferSourceNodeRendererFactory", function() { return createAudioBufferSourceNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createAudioBufferSourceNodeRendererFactory = function createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeAudioBufferSourceNodes = new WeakMap();
    var start = null;
    var stop = null;

    var createAudioBufferSourceNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeAudioBufferSourceNode, nativeAudioBufferSourceNodeIsOwnedByContext, options, _nativeAudioBufferSou;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeAudioBufferSourceNode = getNativeAudioNode(proxy);
                /*
                 * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created
                 * again.
                 */

                nativeAudioBufferSourceNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeAudioBufferSourceNode, nativeOfflineAudioContext);

                if (!nativeAudioBufferSourceNodeIsOwnedByContext) {
                  options = {
                    buffer: nativeAudioBufferSourceNode.buffer,
                    channelCount: nativeAudioBufferSourceNode.channelCount,
                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,
                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,
                    // Bug #149: Safari does not yet support the detune AudioParam.
                    loop: nativeAudioBufferSourceNode.loop,
                    loopEnd: nativeAudioBufferSourceNode.loopEnd,
                    loopStart: nativeAudioBufferSourceNode.loopStart,
                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value
                  };
                  nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);

                  if (start !== null) {
                    (_nativeAudioBufferSou = nativeAudioBufferSourceNode).start.apply(_nativeAudioBufferSou, _toConsumableArray(start));
                  }

                  if (stop !== null) {
                    nativeAudioBufferSourceNode.stop(stop);
                  }
                }

                renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);

                if (nativeAudioBufferSourceNodeIsOwnedByContext) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);

              case 7:
                _context.next = 11;
                break;

              case 9:
                _context.next = 11;
                return connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);

              case 11:
                _context.next = 13;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);

              case 13:
                return _context.abrupt("return", nativeAudioBufferSourceNode);

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createAudioBufferSourceNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      set start(value) {
        start = value;
      },

      set stop(value) {
        stop = value;
      },

      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);

        if (renderedNativeAudioBufferSourceNode !== undefined) {
          return Promise.resolve(renderedNativeAudioBufferSourceNode);
        }

        return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js ***!
  \*****************************************************************************************************/
/*! exports provided: createAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioContextConstructor", function() { return createAudioContextConstructor; });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-valid-latency-hint */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var createAudioContextConstructor = function createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) {
  return /*#__PURE__*/function (_baseAudioContextCons) {
    _inherits(AudioContext, _baseAudioContextCons);

    var _super = _createSuper(AudioContext);

    function AudioContext() {
      var _this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      _classCallCheck(this, AudioContext);

      if (nativeAudioContextConstructor === null) {
        throw new Error('Missing the native AudioContext constructor.');
      }

      var nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.

      if (nativeAudioContext === null) {
        throw createUnknownError();
      } // Bug #51 Only Chrome, Edge and Opera throw an error if the given latencyHint is invalid.


      if (!Object(_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__["isValidLatencyHint"])(options.latencyHint)) {
        throw new TypeError("The provided value '".concat(options.latencyHint, "' is not a valid enum value of type AudioContextLatencyCategory."));
      } // Bug #150 Safari does not support setting the sampleRate.


      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
        throw createNotSupportedError();
      }

      _this = _super.call(this, nativeAudioContext, 2);
      var latencyHint = options.latencyHint;
      var sampleRate = nativeAudioContext.sampleRate; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.

      _this._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :
      /*
       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
       * ScriptProcessorNode.
       */
      Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
      _this._nativeAudioContext = nativeAudioContext; // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.

      if (nativeAudioContextConstructor.name === 'webkitAudioContext') {
        _this._nativeGainNode = nativeAudioContext.createGain();
        _this._nativeOscillatorNode = nativeAudioContext.createOscillator();
        _this._nativeGainNode.gain.value = 1e-37;

        _this._nativeOscillatorNode.connect(_this._nativeGainNode).connect(nativeAudioContext.destination);

        _this._nativeOscillatorNode.start();
      } else {
        _this._nativeGainNode = null;
        _this._nativeOscillatorNode = null;
      }

      _this._state = null;
      /*
       * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually
       * changes to 'running'.
       */

      if (nativeAudioContext.state === 'running') {
        _this._state = 'suspended';

        var revokeState = function revokeState() {
          if (_this._state === 'suspended') {
            _this._state = null;
          }

          nativeAudioContext.removeEventListener('statechange', revokeState);
        };

        nativeAudioContext.addEventListener('statechange', revokeState);
      }

      return _this;
    }

    _createClass(AudioContext, [{
      key: "baseLatency",
      get: function get() {
        return this._baseLatency;
      }
    }, {
      key: "state",
      get: function get() {
        return this._state !== null ? this._state : this._nativeAudioContext.state;
      }
    }, {
      key: "close",
      value: function close() {
        var _this2 = this;

        // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
        if (this.state === 'closed') {
          return this._nativeAudioContext.close().then(function () {
            throw createInvalidStateError();
          });
        } // Bug #34: If the state was set to suspended before it should be revoked now.


        if (this._state === 'suspended') {
          this._state = null;
        }

        return this._nativeAudioContext.close().then(function () {
          if (_this2._nativeGainNode !== null && _this2._nativeOscillatorNode !== null) {
            _this2._nativeOscillatorNode.stop();

            _this2._nativeGainNode.disconnect();

            _this2._nativeOscillatorNode.disconnect();
          }

          Object(_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__["deactivateAudioGraph"])(_this2);
        });
      }
    }, {
      key: "createMediaElementSource",
      value: function createMediaElementSource(mediaElement) {
        return new mediaElementAudioSourceNodeConstructor(this, {
          mediaElement: mediaElement
        });
      }
    }, {
      key: "createMediaStreamDestination",
      value: function createMediaStreamDestination() {
        return new mediaStreamAudioDestinationNodeConstructor(this);
      }
    }, {
      key: "createMediaStreamSource",
      value: function createMediaStreamSource(mediaStream) {
        return new mediaStreamAudioSourceNodeConstructor(this, {
          mediaStream: mediaStream
        });
      }
    }, {
      key: "createMediaStreamTrackSource",
      value: function createMediaStreamTrackSource(mediaStreamTrack) {
        return new mediaStreamTrackAudioSourceNodeConstructor(this, {
          mediaStreamTrack: mediaStreamTrack
        });
      }
    }, {
      key: "resume",
      value: function resume() {
        var _this3 = this;

        if (this._state === 'suspended') {
          return new Promise(function (resolve, reject) {
            var resolvePromise = function resolvePromise() {
              _this3._nativeAudioContext.removeEventListener('statechange', resolvePromise);

              if (_this3._nativeAudioContext.state === 'running') {
                resolve();
              } else {
                _this3.resume().then(resolve, reject);
              }
            };

            _this3._nativeAudioContext.addEventListener('statechange', resolvePromise);
          });
        }

        return this._nativeAudioContext.resume().catch(function (err) {
          // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.
          // Bug #56: Safari invokes the catch handler but without an error.
          if (err === undefined || err.code === 15) {
            throw createInvalidStateError();
          }

          throw err;
        });
      }
    }, {
      key: "suspend",
      value: function suspend() {
        return this._nativeAudioContext.suspend().catch(function (err) {
          // Bug #56: Safari invokes the catch handler but without an error.
          if (err === undefined) {
            throw createInvalidStateError();
          }

          throw err;
        });
      }
    }]);

    return AudioContext;
  }(baseAudioContextConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js ***!
  \**************************************************************************************************************/
/*! exports provided: createAudioDestinationNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioDestinationNodeConstructor", function() { return createAudioDestinationNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var createAudioDestinationNodeConstructor = function createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(AudioDestinationNode, _audioNodeConstructor);

    var _super = _createSuper(AudioDestinationNode);

    function AudioDestinationNode(context, channelCount) {
      var _this;

      _classCallCheck(this, AudioDestinationNode);

      var nativeContext = getNativeContext(context);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);
      var audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;
      _this = _super.call(this, context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);
      _this._isNodeOfNativeOfflineAudioContext = isOffline;
      _this._nativeAudioDestinationNode = nativeAudioDestinationNode;
      return _this;
    }

    _createClass(AudioDestinationNode, [{
      key: "channelCount",
      get: function get() {
        return this._nativeAudioDestinationNode.channelCount;
      },
      set: function set(value) {
        // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.
        // Bug #54: Firefox does throw an IndexSizeError.
        if (this._isNodeOfNativeOfflineAudioContext) {
          throw createInvalidStateError();
        } // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.


        if (value > this._nativeAudioDestinationNode.maxChannelCount) {
          throw createIndexSizeError();
        }

        this._nativeAudioDestinationNode.channelCount = value;
      }
    }, {
      key: "channelCountMode",
      get: function get() {
        return this._nativeAudioDestinationNode.channelCountMode;
      },
      set: function set(value) {
        // Bug #53: No browser does throw an exception yet.
        if (this._isNodeOfNativeOfflineAudioContext) {
          throw createInvalidStateError();
        }

        this._nativeAudioDestinationNode.channelCountMode = value;
      }
    }, {
      key: "maxChannelCount",
      get: function get() {
        return this._nativeAudioDestinationNode.maxChannelCount;
      }
    }]);

    return AudioDestinationNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createAudioDestinationNodeRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioDestinationNodeRenderer", function() { return createAudioDestinationNodeRenderer; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var createAudioDestinationNodeRenderer = function createAudioDestinationNodeRenderer(renderInputsOfAudioNode) {
  var nativeAudioDestinationNodePromise = null;

  var createAudioDestinationNode = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
      var nativeAudioDestinationNode;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              nativeAudioDestinationNode = nativeOfflineAudioContext.destination;
              _context.next = 3;
              return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);

            case 3:
              return _context.abrupt("return", nativeAudioDestinationNode);

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function createAudioDestinationNode(_x, _x2, _x3) {
      return _ref.apply(this, arguments);
    };
  }();

  return {
    render: function render(proxy, nativeOfflineAudioContext, trace) {
      if (nativeAudioDestinationNodePromise === null) {
        nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);
      }

      return nativeAudioDestinationNodePromise;
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js ***!
  \**************************************************************************************************/
/*! exports provided: createAudioListenerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioListenerFactory", function() { return createAudioListenerFactory; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");

var createAudioListenerFactory = function createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) {
  return function (context, nativeContext) {
    var nativeListener = nativeContext.listener; // Bug #117: Only Chrome, Edge & Opera support the new interface already.

    var createFakeAudioParams = function createFakeAudioParams() {
      var channelMergerNode = createNativeChannelMergerNode(nativeContext, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'speakers',
        numberOfInputs: 9
      });
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);

      var createFakeAudioParam = function createFakeAudioParam(input, value) {
        var constantSourceNode = createNativeConstantSourceNode(nativeContext, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          offset: value
        });
        constantSourceNode.connect(channelMergerNode, 0, input); // @todo This should be stopped when the context is closed.

        constantSourceNode.start();
        Object.defineProperty(constantSourceNode.offset, 'defaultValue', {
          get: function get() {
            return value;
          }
        });
        /*
         * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and
         * minValue for GainNodes.
         */

        return createAudioParam({
          context: context
        }, isOffline, constantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      };

      var lastOrientation = [0, 0, -1, 0, 1, 0];
      var lastPosition = [0, 0, 0]; // tslint:disable-next-line:deprecation

      scriptProcessorNode.onaudioprocess = function (_ref) {
        var inputBuffer = _ref.inputBuffer;
        var orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0], inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];

        if (orientation.some(function (value, index) {
          return value !== lastOrientation[index];
        })) {
          nativeListener.setOrientation.apply(nativeListener, orientation); // tslint:disable-line:deprecation

          lastOrientation = orientation;
        }

        var positon = [inputBuffer.getChannelData(6)[0], inputBuffer.getChannelData(7)[0], inputBuffer.getChannelData(8)[0]];

        if (positon.some(function (value, index) {
          return value !== lastPosition[index];
        })) {
          nativeListener.setPosition.apply(nativeListener, positon); // tslint:disable-line:deprecation

          lastPosition = positon;
        }
      };

      channelMergerNode.connect(scriptProcessorNode);
      return {
        forwardX: createFakeAudioParam(0, 0),
        forwardY: createFakeAudioParam(1, 0),
        forwardZ: createFakeAudioParam(2, -1),
        positionX: createFakeAudioParam(6, 0),
        positionY: createFakeAudioParam(7, 0),
        positionZ: createFakeAudioParam(8, 0),
        upX: createFakeAudioParam(3, 0),
        upY: createFakeAudioParam(4, 1),
        upZ: createFakeAudioParam(5, 0)
      };
    };

    var _ref2 = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener,
        forwardX = _ref2.forwardX,
        forwardY = _ref2.forwardY,
        forwardZ = _ref2.forwardZ,
        positionX = _ref2.positionX,
        positionY = _ref2.positionY,
        positionZ = _ref2.positionZ,
        upX = _ref2.upX,
        upY = _ref2.upY,
        upZ = _ref2.upZ;

    return {
      get forwardX() {
        return forwardX;
      },

      get forwardY() {
        return forwardY;
      },

      get forwardZ() {
        return forwardZ;
      },

      get positionX() {
        return positionX;
      },

      get positionY() {
        return positionY;
      },

      get positionZ() {
        return positionZ;
      },

      get upX() {
        return upX;
      },

      get upY() {
        return upY;
      },

      get upZ() {
        return upZ;
      }

    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js ***!
  \**************************************************************************************************/
/*! exports provided: createAudioNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioNodeConstructor", function() { return createAudioNodeConstructor; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _guards_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");
/* harmony import */ var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../guards/audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");
/* harmony import */ var _helpers_add_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/add-active-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_add_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/add-passive-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/connect-native-audio-node-to-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js");
/* harmony import */ var _helpers_delete_active_input_connection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/delete-active-input-connection */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js");
/* harmony import */ var _helpers_delete_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/delete-active-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/delete-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js");
/* harmony import */ var _helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/delete-passive-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js");
/* harmony import */ var _helpers_delete_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../helpers/delete-passive-input-connection-to-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js");
/* harmony import */ var _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../helpers/disconnect-native-audio-node-from-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js");
/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../helpers/get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../helpers/get-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
/* harmony import */ var _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../helpers/get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../helpers/get-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../helpers/get-native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js");
/* harmony import */ var _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../helpers/insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../helpers/is-part-of-a-cycle */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js");
/* harmony import */ var _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../helpers/is-passive-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive-when-necessary */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js");
/* harmony import */ var _helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../helpers/test-audio-node-disconnect-method-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js");
/* harmony import */ var _helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../helpers/visit-each-audio-node-once */ "./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js");
/* harmony import */ var _helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../helpers/wrap-audio-node-disconnect-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }




























var addConnectionToAudioParamOfAudioContext = function addConnectionToAudioParamOfAudioContext(source, destination, output, isOffline) {
  var _getAudioParamConnect = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_13__["getAudioParamConnections"])(destination),
      activeInputs = _getAudioParamConnect.activeInputs,
      passiveInputs = _getAudioParamConnect.passiveInputs;

  var _getAudioNodeConnecti = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__["getAudioNodeConnections"])(source),
      outputs = _getAudioNodeConnecti.outputs;

  var eventListeners = Object(_helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_14__["getEventListenersOfAudioNode"])(source);

  var eventListener = function eventListener(isActive) {
    var nativeAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__["getNativeAudioNode"])(source);
    var nativeAudioParam = Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__["getNativeAudioParam"])(destination);

    if (isActive) {
      var partialConnection = Object(_helpers_delete_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_10__["deletePassiveInputConnectionToAudioParam"])(passiveInputs, source, output);
      Object(_helpers_add_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_3__["addActiveInputConnectionToAudioParam"])(activeInputs, source, partialConnection, false);

      if (!isOffline && !Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__["isPartOfACycle"])(source)) {
        nativeAudioNode.connect(nativeAudioParam, output);
      }
    } else {
      var _partialConnection = Object(_helpers_delete_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_7__["deleteActiveInputConnectionToAudioParam"])(activeInputs, source, output);

      Object(_helpers_add_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_4__["addPassiveInputConnectionToAudioParam"])(passiveInputs, _partialConnection, false);

      if (!isOffline && !Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__["isPartOfACycle"])(source)) {
        nativeAudioNode.disconnect(nativeAudioParam, output);
      }
    }
  };

  if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_17__["insertElementInSet"])(outputs, [destination, output], function (outputConnection) {
    return outputConnection[0] === destination && outputConnection[1] === output;
  }, true)) {
    eventListeners.add(eventListener);

    if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_18__["isActiveAudioNode"])(source)) {
      Object(_helpers_add_active_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_3__["addActiveInputConnectionToAudioParam"])(activeInputs, source, [output, eventListener], true);
    } else {
      Object(_helpers_add_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_4__["addPassiveInputConnectionToAudioParam"])(passiveInputs, [source, output, eventListener], true);
    }

    return true;
  }

  return false;
};

var deleteInputConnectionOfAudioNode = function deleteInputConnectionOfAudioNode(source, destination, output, input) {
  var _getAudioNodeConnecti2 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__["getAudioNodeConnections"])(destination),
      activeInputs = _getAudioNodeConnecti2.activeInputs,
      passiveInputs = _getAudioNodeConnecti2.passiveInputs;

  var activeInputConnection = Object(_helpers_delete_active_input_connection__WEBPACK_IMPORTED_MODULE_6__["deleteActiveInputConnection"])(activeInputs[input], source, output);

  if (activeInputConnection === null) {
    var passiveInputConnection = Object(_helpers_delete_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_9__["deletePassiveInputConnectionToAudioNode"])(passiveInputs, source, output, input);
    return [passiveInputConnection[2], false];
  }

  return [activeInputConnection[2], true];
};

var deleteInputConnectionOfAudioParam = function deleteInputConnectionOfAudioParam(source, destination, output) {
  var _getAudioParamConnect2 = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_13__["getAudioParamConnections"])(destination),
      activeInputs = _getAudioParamConnect2.activeInputs,
      passiveInputs = _getAudioParamConnect2.passiveInputs;

  var activeInputConnection = Object(_helpers_delete_active_input_connection__WEBPACK_IMPORTED_MODULE_6__["deleteActiveInputConnection"])(activeInputs, source, output);

  if (activeInputConnection === null) {
    var passiveInputConnection = Object(_helpers_delete_passive_input_connection_to_audio_param__WEBPACK_IMPORTED_MODULE_10__["deletePassiveInputConnectionToAudioParam"])(passiveInputs, source, output);
    return [passiveInputConnection[1], false];
  }

  return [activeInputConnection[2], true];
};

var deleteInputsOfAudioNode = function deleteInputsOfAudioNode(source, isOffline, destination, output, input) {
  var _deleteInputConnectio = deleteInputConnectionOfAudioNode(source, destination, output, input),
      _deleteInputConnectio2 = _slicedToArray(_deleteInputConnectio, 2),
      listener = _deleteInputConnectio2[0],
      isActive = _deleteInputConnectio2[1];

  if (listener !== null) {
    Object(_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_8__["deleteEventListenerOfAudioNode"])(source, listener);

    if (isActive && !isOffline && !Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__["isPartOfACycle"])(source)) {
      Object(_helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_11__["disconnectNativeAudioNodeFromNativeAudioNode"])(Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__["getNativeAudioNode"])(source), Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__["getNativeAudioNode"])(destination), output, input);
    }
  }

  if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_18__["isActiveAudioNode"])(destination)) {
    var _getAudioNodeConnecti3 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__["getAudioNodeConnections"])(destination),
        activeInputs = _getAudioNodeConnecti3.activeInputs;

    Object(_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_22__["setInternalStateToPassiveWhenNecessary"])(destination, activeInputs);
  }
};

var deleteInputsOfAudioParam = function deleteInputsOfAudioParam(source, isOffline, destination, output) {
  var _deleteInputConnectio3 = deleteInputConnectionOfAudioParam(source, destination, output),
      _deleteInputConnectio4 = _slicedToArray(_deleteInputConnectio3, 2),
      listener = _deleteInputConnectio4[0],
      isActive = _deleteInputConnectio4[1];

  if (listener !== null) {
    Object(_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_8__["deleteEventListenerOfAudioNode"])(source, listener);

    if (isActive && !isOffline && !Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_19__["isPartOfACycle"])(source)) {
      Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__["getNativeAudioNode"])(source).disconnect(Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__["getNativeAudioParam"])(destination), output);
    }
  }
};

var deleteAnyConnection = function deleteAnyConnection(source, isOffline) {
  var audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__["getAudioNodeConnections"])(source);
  var destinations = [];

  var _iterator = _createForOfIteratorHelper(audioNodeConnectionsOfSource.outputs),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var outputConnection = _step.value;

      if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__["isAudioNodeOutputConnection"])(outputConnection)) {
        deleteInputsOfAudioNode.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));
      } else {
        deleteInputsOfAudioParam.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));
      }

      destinations.push(outputConnection[0]);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  audioNodeConnectionsOfSource.outputs.clear();
  return destinations;
};

var deleteConnectionAtOutput = function deleteConnectionAtOutput(source, isOffline, output) {
  var audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__["getAudioNodeConnections"])(source);
  var destinations = [];

  var _iterator2 = _createForOfIteratorHelper(audioNodeConnectionsOfSource.outputs),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var outputConnection = _step2.value;

      if (outputConnection[1] === output) {
        if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__["isAudioNodeOutputConnection"])(outputConnection)) {
          deleteInputsOfAudioNode.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));
        } else {
          deleteInputsOfAudioParam.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));
        }

        destinations.push(outputConnection[0]);
        audioNodeConnectionsOfSource.outputs.delete(outputConnection);
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  return destinations;
};

var deleteConnectionToDestination = function deleteConnectionToDestination(source, isOffline, destination, output, input) {
  var audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_12__["getAudioNodeConnections"])(source);
  return Array.from(audioNodeConnectionsOfSource.outputs).filter(function (outputConnection) {
    return outputConnection[0] === destination && (output === undefined || outputConnection[1] === output) && (input === undefined || outputConnection[2] === input);
  }).map(function (outputConnection) {
    if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__["isAudioNodeOutputConnection"])(outputConnection)) {
      deleteInputsOfAudioNode.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));
    } else {
      deleteInputsOfAudioParam.apply(void 0, [source, isOffline].concat(_toConsumableArray(outputConnection)));
    }

    audioNodeConnectionsOfSource.outputs.delete(outputConnection);
    return outputConnection[0];
  });
};

var createAudioNodeConstructor = function createAudioNodeConstructor(addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_eventTargetConstruct) {
    _inherits(AudioNode, _eventTargetConstruct);

    var _super = _createSuper(AudioNode);

    function AudioNode(context, isActive, nativeAudioNode, audioNodeRenderer) {
      var _this;

      _classCallCheck(this, AudioNode);

      _this = _super.call(this, nativeAudioNode);
      _this._context = context;
      _this._nativeAudioNode = nativeAudioNode;
      var nativeContext = getNativeContext(context); // Bug #12: Safari does not support to disconnect a specific destination.

      if (isNativeAudioContext(nativeContext) && true !== cacheTestResult(_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_23__["testAudioNodeDisconnectMethodSupport"], function () {
        return Object(_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_23__["testAudioNodeDisconnectMethodSupport"])(nativeContext);
      })) {
        Object(_helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_25__["wrapAudioNodeDisconnectMethod"])(nativeAudioNode);
      }

      _globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_NODE_STORE"].set(_assertThisInitialized(_this), nativeAudioNode);
      _globals__WEBPACK_IMPORTED_MODULE_0__["EVENT_LISTENERS"].set(_assertThisInitialized(_this), new Set());

      if (context.state !== 'closed' && isActive) {
        Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_21__["setInternalStateToActive"])(_assertThisInitialized(_this));
      }

      addAudioNodeConnections(_assertThisInitialized(_this), audioNodeRenderer, nativeAudioNode);
      return _this;
    }

    _createClass(AudioNode, [{
      key: "channelCount",
      get: function get() {
        return this._nativeAudioNode.channelCount;
      },
      set: function set(value) {
        this._nativeAudioNode.channelCount = value;
      }
    }, {
      key: "channelCountMode",
      get: function get() {
        return this._nativeAudioNode.channelCountMode;
      },
      set: function set(value) {
        this._nativeAudioNode.channelCountMode = value;
      }
    }, {
      key: "channelInterpretation",
      get: function get() {
        return this._nativeAudioNode.channelInterpretation;
      },
      set: function set(value) {
        this._nativeAudioNode.channelInterpretation = value;
      }
    }, {
      key: "context",
      get: function get() {
        return this._context;
      }
    }, {
      key: "numberOfInputs",
      get: function get() {
        return this._nativeAudioNode.numberOfInputs;
      }
    }, {
      key: "numberOfOutputs",
      get: function get() {
        return this._nativeAudioNode.numberOfOutputs;
      } // tslint:disable-next-line:invalid-void

    }, {
      key: "connect",
      value: function connect(destination) {
        var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

        // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.
        if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {
          throw createIndexSizeError();
        }

        var nativeContext = getNativeContext(this._context);
        var isOffline = isNativeOfflineAudioContext(nativeContext);

        if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {
          throw createInvalidAccessError();
        }

        if (Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_1__["isAudioNode"])(destination)) {
          var nativeDestinationAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_15__["getNativeAudioNode"])(destination);

          try {
            var connection = Object(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_5__["connectNativeAudioNodeToNativeAudioNode"])(this._nativeAudioNode, nativeDestinationAudioNode, output, input);
            var isPassive = Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__["isPassiveAudioNode"])(this);

            if (isOffline || isPassive) {
              var _this$_nativeAudioNod;

              (_this$_nativeAudioNod = this._nativeAudioNode).disconnect.apply(_this$_nativeAudioNod, _toConsumableArray(connection));
            }

            if (this.context.state !== 'closed' && !isPassive && Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__["isPassiveAudioNode"])(destination)) {
              Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_21__["setInternalStateToActive"])(destination);
            }
          } catch (err) {
            // Bug #41: Safari does not throw the correct exception so far.
            if (err.code === 12) {
              throw createInvalidAccessError();
            }

            throw err;
          }

          var isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline); // Bug #164: Only Firefox detects cycles so far.

          if (isNewConnectionToAudioNode) {
            var cycles = detectCycles([this], destination);
            Object(_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__["visitEachAudioNodeOnce"])(cycles, createIncrementCycleCounter(isOffline));
          }

          return destination;
        }

        var nativeAudioParam = Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_16__["getNativeAudioParam"])(destination);
        /*
         * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an
         * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify
         * Safari.
         */

        if (nativeAudioParam.name === 'playbackRate') {
          throw createNotSupportedError();
        }

        try {
          this._nativeAudioNode.connect(nativeAudioParam, output);

          if (isOffline || Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_20__["isPassiveAudioNode"])(this)) {
            this._nativeAudioNode.disconnect(nativeAudioParam, output);
          }
        } catch (err) {
          // Bug #58: Only Firefox does throw an InvalidStateError yet.
          if (err.code === 12) {
            throw createInvalidAccessError();
          }

          throw err;
        }

        var isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline); // Bug #164: Only Firefox detects cycles so far.

        if (isNewConnectionToAudioParam) {
          var _cycles = detectCycles([this], destination);

          Object(_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__["visitEachAudioNodeOnce"])(_cycles, createIncrementCycleCounter(isOffline));
        }
      }
    }, {
      key: "disconnect",
      value: function disconnect(destinationOrOutput, output, input) {
        var destinations;
        var nativeContext = getNativeContext(this._context);
        var isOffline = isNativeOfflineAudioContext(nativeContext);

        if (destinationOrOutput === undefined) {
          destinations = deleteAnyConnection(this, isOffline);
        } else if (typeof destinationOrOutput === 'number') {
          if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {
            throw createIndexSizeError();
          }

          destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);
        } else {
          if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {
            throw createIndexSizeError();
          }

          if (Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_1__["isAudioNode"])(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {
            throw createIndexSizeError();
          }

          destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);

          if (destinations.length === 0) {
            throw createInvalidAccessError();
          }
        } // Bug #164: Only Firefox detects cycles so far.


        var _iterator3 = _createForOfIteratorHelper(destinations),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var destination = _step3.value;
            var cycles = detectCycles([this], destination);
            Object(_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_24__["visitEachAudioNodeOnce"])(cycles, decrementCycleCounter);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      }
    }]);

    return AudioNode;
  }(eventTargetConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js ***!
  \***********************************************************************************************/
/*! exports provided: createAudioParamFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioParamFactory", function() { return createAudioParamFactory; });
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! automation-events */ "./node_modules/automation-events/build/es5/bundle.js");
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);

var createAudioParamFactory = function createAudioParamFactory(addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) {
  return function (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam) {
    var maxValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var minValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
    var automationEventList = new automation_events__WEBPACK_IMPORTED_MODULE_0__["AutomationEventList"](nativeAudioParam.defaultValue);
    var audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;
    var audioParam = {
      get defaultValue() {
        return nativeAudioParam.defaultValue;
      },

      get maxValue() {
        return maxValue === null ? nativeAudioParam.maxValue : maxValue;
      },

      get minValue() {
        return minValue === null ? nativeAudioParam.minValue : minValue;
      },

      get value() {
        return nativeAudioParam.value;
      },

      set value(value) {
        nativeAudioParam.value = value; // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().

        audioParam.setValueAtTime(value, audioNode.context.currentTime);
      },

      cancelAndHoldAtTime: function cancelAndHoldAtTime(cancelTime) {
        // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().
        if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {
          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }

          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
          nativeAudioParam.cancelAndHoldAtTime(cancelTime);
        } else {
          var previousLastEvent = Array.from(automationEventList).pop();

          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }

          automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
          var currentLastEvent = Array.from(automationEventList).pop();
          nativeAudioParam.cancelScheduledValues(cancelTime);

          if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {
            if (currentLastEvent.type === 'exponentialRampToValue') {
              nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
            } else if (currentLastEvent.type === 'linearRampToValue') {
              nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
            } else if (currentLastEvent.type === 'setValue') {
              nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);
            } else if (currentLastEvent.type === 'setValueCurve') {
              nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);
            }
          }
        }

        return audioParam;
      },
      cancelScheduledValues: function cancelScheduledValues(cancelTime) {
        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }

        automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));
        nativeAudioParam.cancelScheduledValues(cancelTime);
        return audioParam;
      },
      exponentialRampToValueAtTime: function exponentialRampToValueAtTime(value, endTime) {
        // Bug #45: Safari does not throw an error yet.
        if (value === 0) {
          throw new RangeError();
        } // Bug #187: Safari does not throw an error yet.


        if (!Number.isFinite(endTime) || endTime < 0) {
          throw new RangeError();
        }

        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }

        automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));
        nativeAudioParam.exponentialRampToValueAtTime(value, endTime);
        return audioParam;
      },
      linearRampToValueAtTime: function linearRampToValueAtTime(value, endTime) {
        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }

        automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));
        nativeAudioParam.linearRampToValueAtTime(value, endTime);
        return audioParam;
      },
      setTargetAtTime: function setTargetAtTime(target, startTime, timeConstant) {
        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }

        automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));
        nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);
        return audioParam;
      },
      setValueAtTime: function setValueAtTime(value, startTime) {
        if (audioParamRenderer === null) {
          automationEventList.flush(audioNode.context.currentTime);
        }

        automationEventList.add(createSetValueAutomationEvent(value, startTime));
        nativeAudioParam.setValueAtTime(value, startTime);
        return audioParam;
      },
      setValueCurveAtTime: function setValueCurveAtTime(values, startTime, duration) {
        // Bug 183: Safari only accepts a Float32Array.
        var convertedValues = values instanceof Float32Array ? values : new Float32Array(values);
        /*
         * Bug #152: Safari does not correctly interpolate the values of the curve.
         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the
         * existence of the webkitAudioContext is used as a workaround here.
         */

        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {
          var endTime = startTime + duration;
          var sampleRate = audioNode.context.sampleRate;
          var firstSample = Math.ceil(startTime * sampleRate);
          var lastSample = Math.floor(endTime * sampleRate);
          var numberOfInterpolatedValues = lastSample - firstSample;
          var interpolatedValues = new Float32Array(numberOfInterpolatedValues);

          for (var i = 0; i < numberOfInterpolatedValues; i += 1) {
            var theoreticIndex = (convertedValues.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);
            var lowerIndex = Math.floor(theoreticIndex);
            var upperIndex = Math.ceil(theoreticIndex);
            interpolatedValues[i] = lowerIndex === upperIndex ? convertedValues[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];
          }

          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }

          automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));
          nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);
          var timeOfLastSample = lastSample / sampleRate;

          if (timeOfLastSample < endTime) {
            setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);
          }

          setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);
        } else {
          if (audioParamRenderer === null) {
            automationEventList.flush(audioNode.context.currentTime);
          }

          automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));
          nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);
        }

        return audioParam;
      }
    };
    audioParamStore.set(audioParam, nativeAudioParam);
    audioParamAudioNodeStore.set(audioParam, audioNode);
    addAudioParamConnections(audioParam, audioParamRenderer);
    return audioParam;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js ***!
  \************************************************************************************************/
/*! exports provided: createAudioParamRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioParamRenderer", function() { return createAudioParamRenderer; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var createAudioParamRenderer = function createAudioParamRenderer(automationEventList) {
  return {
    replay: function replay(audioParam) {
      var _iterator = _createForOfIteratorHelper(automationEventList),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var automationEvent = _step.value;

          if (automationEvent.type === 'exponentialRampToValue') {
            var endTime = automationEvent.endTime,
                value = automationEvent.value;
            audioParam.exponentialRampToValueAtTime(value, endTime);
          } else if (automationEvent.type === 'linearRampToValue') {
            var _endTime = automationEvent.endTime,
                _value = automationEvent.value;
            audioParam.linearRampToValueAtTime(_value, _endTime);
          } else if (automationEvent.type === 'setTarget') {
            var startTime = automationEvent.startTime,
                target = automationEvent.target,
                timeConstant = automationEvent.timeConstant;
            audioParam.setTargetAtTime(target, startTime, timeConstant);
          } else if (automationEvent.type === 'setValue') {
            var _startTime = automationEvent.startTime,
                _value2 = automationEvent.value;
            audioParam.setValueAtTime(_value2, _startTime);
          } else if (automationEvent.type === 'setValueCurve') {
            var duration = automationEvent.duration,
                _startTime2 = automationEvent.startTime,
                values = automationEvent.values;
            audioParam.setValueCurveAtTime(values, _startTime2, duration);
          } else {
            throw new Error("Can't apply an unknown automation.");
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createAudioWorkletNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioWorkletNodeConstructor", function() { return createAudioWorkletNodeConstructor; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../read-only-map */ "./node_modules/standardized-audio-context/build/es2019/read-only-map.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var DEFAULT_OPTIONS = {
  channelCount: 2,
  // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.
  channelCountMode: 'explicit',
  channelInterpretation: 'speakers',
  numberOfInputs: 1,
  numberOfOutputs: 1,
  parameterData: {},
  processorOptions: {}
};
var createAudioWorkletNodeConstructor = function createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(AudioWorkletNode, _audioNodeConstructor);

    var _super = _createSuper(AudioWorkletNode);

    function AudioWorkletNode(context, name, options) {
      var _this;

      _classCallCheck(this, AudioWorkletNode);

      var _a;

      var nativeContext = getNativeContext(context);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var mergedOptions = sanitizeAudioWorkletNodeOptions(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));
      var nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS"].get(nativeContext);
      var processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name); // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.

      var nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed' ? nativeContext : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;
      var nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);
      var audioWorkletNodeRenderer = isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null;
      /*
       * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor
       * returns false.
       */

      _this = _super.call(this, context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);
      var parameters = [];
      nativeAudioWorkletNode.parameters.forEach(function (nativeAudioParam, nm) {
        var audioParam = createAudioParam(_assertThisInitialized(_this), isOffline, nativeAudioParam);
        parameters.push([nm, audioParam]);
      });
      _this._nativeAudioWorkletNode = nativeAudioWorkletNode;
      _this._onprocessorerror = null;
      _this._parameters = new _read_only_map__WEBPACK_IMPORTED_MODULE_1__["ReadOnlyMap"](parameters);
      /*
       * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to
       * the destination.
       */

      if (isOffline) {
        addUnrenderedAudioWorkletNode(nativeContext, _assertThisInitialized(_this));
      }

      var _getAudioNodeConnecti = getAudioNodeConnections(_assertThisInitialized(_this)),
          activeInputs = _getAudioNodeConnecti.activeInputs;

      setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);
      return _this;
    }

    _createClass(AudioWorkletNode, [{
      key: "onprocessorerror",
      get: function get() {
        return this._onprocessorerror;
      },
      set: function set(value) {
        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
        this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;
        var nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;
        this._onprocessorerror = nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener ? value : nativeOnProcessorError;
      }
    }, {
      key: "parameters",
      get: function get() {
        if (this._parameters === null) {
          // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
          return this._nativeAudioWorkletNode.parameters;
        }

        return this._parameters;
      }
    }, {
      key: "port",
      get: function get() {
        return this._nativeAudioWorkletNode.port;
      }
    }]);

    return AudioWorkletNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createAudioWorkletNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioWorkletNodeRendererFactory", function() { return createAudioWorkletNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/copy-from-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js");
/* harmony import */ var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/copy-to-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js");
/* harmony import */ var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/create-nested-arrays */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js");
/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/get-audio-worklet-processor */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }








var processBuffer = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) {
    var length, numberOfInputChannels, numberOfOutputChannels, processedBuffer, audioNodeConnections, audioWorkletProcessor, inputs, outputs, parameters, _loop, i, _ret;

    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // Ceil the length to the next full render quantum.
            // Bug #17: Safari does not yet expose the length.
            length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;
            numberOfInputChannels = options.channelCount * options.numberOfInputs;
            numberOfOutputChannels = outputChannelCount.reduce(function (sum, value) {
              return sum + value;
            }, 0);
            processedBuffer = numberOfOutputChannels === 0 ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);

            if (!(processorConstructor === undefined)) {
              _context.next = 6;
              break;
            }

            throw new Error('Missing the processor constructor.');

          case 6:
            audioNodeConnections = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_4__["getAudioNodeConnections"])(proxy);
            _context.next = 9;
            return Object(_helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_5__["getAudioWorkletProcessor"])(nativeOfflineAudioContext, proxy);

          case 9:
            audioWorkletProcessor = _context.sent;
            inputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_3__["createNestedArrays"])(options.numberOfInputs, options.channelCount);
            outputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_3__["createNestedArrays"])(options.numberOfOutputs, outputChannelCount);
            parameters = Array.from(proxy.parameters.keys()).reduce(function (prmtrs, name) {
              return _objectSpread(_objectSpread({}, prmtrs), {}, _defineProperty({}, name, new Float32Array(128)));
            }, {});

            _loop = function _loop(i) {
              if (options.numberOfInputs > 0 && renderedBuffer !== null) {
                for (var j = 0; j < options.numberOfInputs; j += 1) {
                  for (var k = 0; k < options.channelCount; k += 1) {
                    Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_1__["copyFromChannel"])(renderedBuffer, inputs[j], k, k, i);
                  }
                }
              }

              if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {
                processorConstructor.parameterDescriptors.forEach(function (_ref2, index) {
                  var name = _ref2.name;
                  Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_1__["copyFromChannel"])(renderedBuffer, parameters, name, numberOfInputChannels + index, i);
                });
              }

              for (var _j = 0; _j < options.numberOfInputs; _j += 1) {
                for (var _k = 0; _k < outputChannelCount[_j]; _k += 1) {
                  // The byteLength will be 0 when the ArrayBuffer was transferred.
                  if (outputs[_j][_k].byteLength === 0) {
                    outputs[_j][_k] = new Float32Array(128);
                  }
                }
              }

              try {
                var potentiallyEmptyInputs = inputs.map(function (input, index) {
                  if (audioNodeConnections.activeInputs[index].size === 0) {
                    return [];
                  }

                  return input;
                });
                var activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, function () {
                  return audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters);
                });

                if (processedBuffer !== null) {
                  for (var _j2 = 0, outputChannelSplitterNodeOutput = 0; _j2 < options.numberOfOutputs; _j2 += 1) {
                    for (var _k2 = 0; _k2 < outputChannelCount[_j2]; _k2 += 1) {
                      Object(_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_2__["copyToChannel"])(processedBuffer, outputs[_j2], _k2, outputChannelSplitterNodeOutput + _k2, i);
                    }

                    outputChannelSplitterNodeOutput += outputChannelCount[_j2];
                  }
                }

                if (!activeSourceFlag) {
                  return "break";
                }
              } catch (error) {
                proxy.dispatchEvent(new ErrorEvent('processorerror', {
                  colno: error.colno,
                  filename: error.filename,
                  lineno: error.lineno,
                  message: error.message
                }));
                return "break";
              }
            };

            i = 0;

          case 15:
            if (!(i < length)) {
              _context.next = 22;
              break;
            }

            _ret = _loop(i);

            if (!(_ret === "break")) {
              _context.next = 19;
              break;
            }

            return _context.abrupt("break", 22);

          case 19:
            i += 128;
            _context.next = 15;
            break;

          case 22:
            return _context.abrupt("return", processedBuffer);

          case 23:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function processBuffer(_x, _x2, _x3, _x4, _x5, _x6, _x7) {
    return _ref.apply(this, arguments);
  };
}();

var createAudioWorkletNodeRendererFactory = function createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) {
  return function (name, options, processorConstructor) {
    var renderedNativeAudioNodes = new WeakMap();
    var processedBufferPromise = null;

    var createAudioNode = /*#__PURE__*/function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(proxy, nativeOfflineAudioContext, trace) {
        var nativeAudioWorkletNode, nativeOutputNodes, nativeAudioWorkletNodeIsOwnedByContext, outputChannelCount, numberOfOutputChannels, outputChannelSplitterNode, outputChannelMergerNodes, i, outputGainNode, _numberOfInputChannels, numberOfParameters, numberOfChannels, renderBuffer, _processedBuffer, audioBufferSourceNode, _nativeOutputNodes, _nativeOutputNodes2, _outputChannelSplitterNode, _outputChannelMergerNodes, _outputGainNode, _i3, outputChannelSplitterNodeOutput, outputChannelMergerNode, j, _iterator2, _step2, _ref11, _ref10, nm, audioParam, _iterator3, _step3, _ref14, _ref13, _nm, _audioParam;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                nativeAudioWorkletNode = getNativeAudioNode(proxy);
                nativeOutputNodes = null;
                nativeAudioWorkletNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_6__["isOwnedByContext"])(nativeAudioWorkletNode, nativeOfflineAudioContext);
                outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount); // Bug #61: Only Chrome, Edge, Firefox & Opera have an implementation of the AudioWorkletNode yet.

                if (nativeAudioWorkletNodeConstructor === null) {
                  numberOfOutputChannels = outputChannelCount.reduce(function (sum, value) {
                    return sum + value;
                  }, 0);
                  outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {
                    channelCount: Math.max(1, numberOfOutputChannels),
                    channelCountMode: 'explicit',
                    channelInterpretation: 'discrete',
                    numberOfOutputs: Math.max(1, numberOfOutputChannels)
                  });
                  outputChannelMergerNodes = [];

                  for (i = 0; i < proxy.numberOfOutputs; i += 1) {
                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {
                      channelCount: 1,
                      channelCountMode: 'explicit',
                      channelInterpretation: 'speakers',
                      numberOfInputs: outputChannelCount[i]
                    }));
                  }

                  outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                    channelCount: options.channelCount,
                    channelCountMode: options.channelCountMode,
                    channelInterpretation: options.channelInterpretation,
                    gain: 1
                  });
                  outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);
                  outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);
                  nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];
                } else if (!nativeAudioWorkletNodeIsOwnedByContext) {
                  nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);
                }

                renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);

                if (!(nativeOutputNodes !== null)) {
                  _context4.next = 41;
                  break;
                }

                if (!(processedBufferPromise === null)) {
                  _context4.next = 32;
                  break;
                }

                if (!(processorConstructor === undefined)) {
                  _context4.next = 10;
                  break;
                }

                throw new Error('Missing the processor constructor.');

              case 10:
                if (!(nativeOfflineAudioContextConstructor === null)) {
                  _context4.next = 12;
                  break;
                }

                throw new Error('Missing the native OfflineAudioContext constructor.');

              case 12:
                // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.
                _numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;
                numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
                numberOfChannels = _numberOfInputChannels + numberOfParameters;

                renderBuffer = /*#__PURE__*/function () {
                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
                    var partialOfflineAudioContext, gainNodes, inputChannelSplitterNodes, _i, constantSourceNodes, inputChannelMergerNode, _i2, j, _iterator, _step, _ref8, _ref7, index, constantSourceNode;

                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
                      while (1) {
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, // Ceil the length to the next full render quantum.
                            // Bug #17: Safari does not yet expose the length.
                            Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);
                            gainNodes = [];
                            inputChannelSplitterNodes = [];

                            for (_i = 0; _i < options.numberOfInputs; _i += 1) {
                              gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {
                                channelCount: options.channelCount,
                                channelCountMode: options.channelCountMode,
                                channelInterpretation: options.channelInterpretation,
                                gain: 1
                              }));
                              inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {
                                channelCount: options.channelCount,
                                channelCountMode: 'explicit',
                                channelInterpretation: 'discrete',
                                numberOfOutputs: options.channelCount
                              }));
                            }

                            _context3.next = 6;
                            return Promise.all(Array.from(proxy.parameters.values()).map( /*#__PURE__*/function () {
                              var _ref5 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(audioParam) {
                                var constantSourceNode;
                                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
                                  while (1) {
                                    switch (_context2.prev = _context2.next) {
                                      case 0:
                                        constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                          channelCount: 1,
                                          channelCountMode: 'explicit',
                                          channelInterpretation: 'discrete',
                                          offset: audioParam.value
                                        });
                                        _context2.next = 3;
                                        return renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);

                                      case 3:
                                        return _context2.abrupt("return", constantSourceNode);

                                      case 4:
                                      case "end":
                                        return _context2.stop();
                                    }
                                  }
                                }, _callee2);
                              }));

                              return function (_x11) {
                                return _ref5.apply(this, arguments);
                              };
                            }()));

                          case 6:
                            constantSourceNodes = _context3.sent;
                            inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                              channelCount: 1,
                              channelCountMode: 'explicit',
                              channelInterpretation: 'speakers',
                              numberOfInputs: Math.max(1, _numberOfInputChannels + numberOfParameters)
                            });

                            for (_i2 = 0; _i2 < options.numberOfInputs; _i2 += 1) {
                              gainNodes[_i2].connect(inputChannelSplitterNodes[_i2]);

                              for (j = 0; j < options.channelCount; j += 1) {
                                inputChannelSplitterNodes[_i2].connect(inputChannelMergerNode, j, _i2 * options.channelCount + j);
                              }
                            }

                            _iterator = _createForOfIteratorHelper(constantSourceNodes.entries());

                            try {
                              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                                _ref8 = _step.value;
                                _ref7 = _slicedToArray(_ref8, 2);
                                index = _ref7[0];
                                constantSourceNode = _ref7[1];
                                constantSourceNode.connect(inputChannelMergerNode, 0, _numberOfInputChannels + index);
                                constantSourceNode.start(0);
                              }
                            } catch (err) {
                              _iterator.e(err);
                            } finally {
                              _iterator.f();
                            }

                            inputChannelMergerNode.connect(partialOfflineAudioContext.destination);
                            _context3.next = 14;
                            return Promise.all(gainNodes.map(function (gainNode) {
                              return renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace);
                            }));

                          case 14:
                            return _context3.abrupt("return", renderNativeOfflineAudioContext(partialOfflineAudioContext));

                          case 15:
                          case "end":
                            return _context3.stop();
                        }
                      }
                    }, _callee3);
                  }));

                  return function renderBuffer() {
                    return _ref4.apply(this, arguments);
                  };
                }();

                _context4.t0 = processBuffer;
                _context4.t1 = proxy;

                if (!(numberOfChannels === 0)) {
                  _context4.next = 22;
                  break;
                }

                _context4.t2 = null;
                _context4.next = 25;
                break;

              case 22:
                _context4.next = 24;
                return renderBuffer();

              case 24:
                _context4.t2 = _context4.sent;

              case 25:
                _context4.t3 = _context4.t2;
                _context4.t4 = nativeOfflineAudioContext;
                _context4.t5 = options;
                _context4.t6 = outputChannelCount;
                _context4.t7 = processorConstructor;
                _context4.t8 = exposeCurrentFrameAndCurrentTime;
                processedBufferPromise = (0, _context4.t0)(_context4.t1, _context4.t3, _context4.t4, _context4.t5, _context4.t6, _context4.t7, _context4.t8);

              case 32:
                _context4.next = 34;
                return processedBufferPromise;

              case 34:
                _processedBuffer = _context4.sent;
                audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                  buffer: null,
                  channelCount: 2,
                  channelCountMode: 'max',
                  channelInterpretation: 'speakers',
                  loop: false,
                  loopEnd: 0,
                  loopStart: 0,
                  playbackRate: 1
                });
                _nativeOutputNodes = nativeOutputNodes, _nativeOutputNodes2 = _slicedToArray(_nativeOutputNodes, 3), _outputChannelSplitterNode = _nativeOutputNodes2[0], _outputChannelMergerNodes = _nativeOutputNodes2[1], _outputGainNode = _nativeOutputNodes2[2];

                if (_processedBuffer !== null) {
                  audioBufferSourceNode.buffer = _processedBuffer;
                  audioBufferSourceNode.start(0);
                }

                audioBufferSourceNode.connect(_outputChannelSplitterNode);

                for (_i3 = 0, outputChannelSplitterNodeOutput = 0; _i3 < proxy.numberOfOutputs; _i3 += 1) {
                  outputChannelMergerNode = _outputChannelMergerNodes[_i3];

                  for (j = 0; j < outputChannelCount[_i3]; j += 1) {
                    _outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                  }

                  outputChannelSplitterNodeOutput += outputChannelCount[_i3];
                }

                return _context4.abrupt("return", _outputGainNode);

              case 41:
                if (nativeAudioWorkletNodeIsOwnedByContext) {
                  _context4.next = 64;
                  break;
                }

                _iterator2 = _createForOfIteratorHelper(proxy.parameters.entries());
                _context4.prev = 43;

                _iterator2.s();

              case 45:
                if ((_step2 = _iterator2.n()).done) {
                  _context4.next = 54;
                  break;
                }

                _ref11 = _step2.value;
                _ref10 = _slicedToArray(_ref11, 2);
                nm = _ref10[0];
                audioParam = _ref10[1];
                _context4.next = 52;
                return renderAutomation(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
                nativeAudioWorkletNode.parameters.get(nm), trace);

              case 52:
                _context4.next = 45;
                break;

              case 54:
                _context4.next = 59;
                break;

              case 56:
                _context4.prev = 56;
                _context4.t9 = _context4["catch"](43);

                _iterator2.e(_context4.t9);

              case 59:
                _context4.prev = 59;

                _iterator2.f();

                return _context4.finish(59);

              case 62:
                _context4.next = 84;
                break;

              case 64:
                _iterator3 = _createForOfIteratorHelper(proxy.parameters.entries());
                _context4.prev = 65;

                _iterator3.s();

              case 67:
                if ((_step3 = _iterator3.n()).done) {
                  _context4.next = 76;
                  break;
                }

                _ref14 = _step3.value;
                _ref13 = _slicedToArray(_ref14, 2);
                _nm = _ref13[0];
                _audioParam = _ref13[1];
                _context4.next = 74;
                return connectAudioParam(nativeOfflineAudioContext, _audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
                nativeAudioWorkletNode.parameters.get(_nm), trace);

              case 74:
                _context4.next = 67;
                break;

              case 76:
                _context4.next = 81;
                break;

              case 78:
                _context4.prev = 78;
                _context4.t10 = _context4["catch"](65);

                _iterator3.e(_context4.t10);

              case 81:
                _context4.prev = 81;

                _iterator3.f();

                return _context4.finish(81);

              case 84:
                _context4.next = 86;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);

              case 86:
                return _context4.abrupt("return", nativeAudioWorkletNode);

              case 87:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, null, [[43, 56, 59, 62], [65, 78, 81, 84]]);
      }));

      return function createAudioNode(_x8, _x9, _x10) {
        return _ref3.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);
        var renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

        if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {
          return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);
        }

        return createAudioNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createBaseAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBaseAudioContextConstructor", function() { return createBaseAudioContextConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var createBaseAudioContextConstructor = function createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, _decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) {
  return /*#__PURE__*/function (_minimalBaseAudioCont) {
    _inherits(BaseAudioContext, _minimalBaseAudioCont);

    var _super = _createSuper(BaseAudioContext);

    function BaseAudioContext(_nativeContext, numberOfChannels) {
      var _this;

      _classCallCheck(this, BaseAudioContext);

      _this = _super.call(this, _nativeContext, numberOfChannels);
      _this._nativeContext = _nativeContext;
      _this._audioWorklet = addAudioWorkletModule === undefined ? undefined : {
        addModule: function addModule(moduleURL, options) {
          return addAudioWorkletModule(_assertThisInitialized(_this), moduleURL, options);
        }
      };
      return _this;
    }

    _createClass(BaseAudioContext, [{
      key: "audioWorklet",
      get: function get() {
        return this._audioWorklet;
      }
    }, {
      key: "createAnalyser",
      value: function createAnalyser() {
        return new analyserNodeConstructor(this);
      }
    }, {
      key: "createBiquadFilter",
      value: function createBiquadFilter() {
        return new biquadFilterNodeConstructor(this);
      }
    }, {
      key: "createBuffer",
      value: function createBuffer(numberOfChannels, length, sampleRate) {
        return new audioBufferConstructor({
          length: length,
          numberOfChannels: numberOfChannels,
          sampleRate: sampleRate
        });
      }
    }, {
      key: "createBufferSource",
      value: function createBufferSource() {
        return new audioBufferSourceNodeConstructor(this);
      }
    }, {
      key: "createChannelMerger",
      value: function createChannelMerger() {
        var numberOfInputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;
        return new channelMergerNodeConstructor(this, {
          numberOfInputs: numberOfInputs
        });
      }
    }, {
      key: "createChannelSplitter",
      value: function createChannelSplitter() {
        var numberOfOutputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;
        return new channelSplitterNodeConstructor(this, {
          numberOfOutputs: numberOfOutputs
        });
      }
    }, {
      key: "createConstantSource",
      value: function createConstantSource() {
        return new constantSourceNodeConstructor(this);
      }
    }, {
      key: "createConvolver",
      value: function createConvolver() {
        return new convolverNodeConstructor(this);
      }
    }, {
      key: "createDelay",
      value: function createDelay() {
        var maxDelayTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
        return new delayNodeConstructor(this, {
          maxDelayTime: maxDelayTime
        });
      }
    }, {
      key: "createDynamicsCompressor",
      value: function createDynamicsCompressor() {
        return new dynamicsCompressorNodeConstructor(this);
      }
    }, {
      key: "createGain",
      value: function createGain() {
        return new gainNodeConstructor(this);
      }
    }, {
      key: "createIIRFilter",
      value: function createIIRFilter(feedforward, feedback) {
        return new iIRFilterNodeConstructor(this, {
          feedback: feedback,
          feedforward: feedforward
        });
      }
    }, {
      key: "createOscillator",
      value: function createOscillator() {
        return new oscillatorNodeConstructor(this);
      }
    }, {
      key: "createPanner",
      value: function createPanner() {
        return new pannerNodeConstructor(this);
      }
    }, {
      key: "createPeriodicWave",
      value: function createPeriodicWave(real, imag) {
        var constraints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
          disableNormalization: false
        };
        return new periodicWaveConstructor(this, _objectSpread(_objectSpread({}, constraints), {}, {
          imag: imag,
          real: real
        }));
      }
    }, {
      key: "createStereoPanner",
      value: function createStereoPanner() {
        return new stereoPannerNodeConstructor(this);
      }
    }, {
      key: "createWaveShaper",
      value: function createWaveShaper() {
        return new waveShaperNodeConstructor(this);
      }
    }, {
      key: "decodeAudioData",
      value: function decodeAudioData(audioData, successCallback, errorCallback) {
        return _decodeAudioData(this._nativeContext, audioData).then(function (audioBuffer) {
          if (typeof successCallback === 'function') {
            successCallback(audioBuffer);
          }

          return audioBuffer;
        }).catch(function (err) {
          if (typeof errorCallback === 'function') {
            errorCallback(err);
          }

          throw err;
        });
      }
    }]);

    return BaseAudioContext;
  }(minimalBaseAudioContextConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createBiquadFilterNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBiquadFilterNodeConstructor", function() { return createBiquadFilterNodeConstructor; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var DEFAULT_OPTIONS = {
  Q: 1,
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  detune: 0,
  frequency: 350,
  gain: 0,
  type: 'lowpass'
};
var createBiquadFilterNodeConstructor = function createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(BiquadFilterNode, _audioNodeConstructor);

    var _super = _createSuper(BiquadFilterNode);

    function BiquadFilterNode(context, options) {
      var _this;

      _classCallCheck(this, BiquadFilterNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer() : null;
      _this = _super.call(this, context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer); // Bug #80: Safari does not export the correct values for maxValue and minValue.

      _this._Q = createAudioParam(_assertThisInitialized(_this), isOffline, nativeBiquadFilterNode.Q, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]); // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.

      _this._detune = createAudioParam(_assertThisInitialized(_this), isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(_constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"]), -1200 * Math.log2(_constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"])); // Bug #77: Firefox & Safari do not export the correct value for minValue.

      _this._frequency = createAudioParam(_assertThisInitialized(_this), isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0); // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.

      _this._gain = createAudioParam(_assertThisInitialized(_this), isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(_constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"]), _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      _this._nativeBiquadFilterNode = nativeBiquadFilterNode; // @todo Determine a meaningful tail-time instead of just using one second.

      setAudioNodeTailTime(_assertThisInitialized(_this), 1);
      return _this;
    }

    _createClass(BiquadFilterNode, [{
      key: "detune",
      get: function get() {
        return this._detune;
      }
    }, {
      key: "frequency",
      get: function get() {
        return this._frequency;
      }
    }, {
      key: "gain",
      get: function get() {
        return this._gain;
      }
    }, {
      key: "Q",
      get: function get() {
        return this._Q;
      }
    }, {
      key: "type",
      get: function get() {
        return this._nativeBiquadFilterNode.type;
      },
      set: function set(value) {
        this._nativeBiquadFilterNode.type = value;
      }
    }, {
      key: "getFrequencyResponse",
      value: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
        // Bug #189: Safari does throw an InvalidStateError.
        try {
          this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
        } catch (err) {
          if (err.code === 11) {
            throw createInvalidAccessError();
          }

          throw err;
        } // Bug #68: Safari does not throw an error if the parameters differ in their length.


        if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
          throw createInvalidAccessError();
        }
      }
    }]);

    return BiquadFilterNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createBiquadFilterNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBiquadFilterNodeRendererFactory", function() { return createBiquadFilterNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createBiquadFilterNodeRendererFactory = function createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeBiquadFilterNodes = new WeakMap();

    var createBiquadFilterNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeBiquadFilterNode, nativeBiquadFilterNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeBiquadFilterNode = getNativeAudioNode(proxy);
                /*
                 * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created
                 * again.
                 */

                nativeBiquadFilterNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeBiquadFilterNode, nativeOfflineAudioContext);

                if (!nativeBiquadFilterNodeIsOwnedByContext) {
                  options = {
                    Q: nativeBiquadFilterNode.Q.value,
                    channelCount: nativeBiquadFilterNode.channelCount,
                    channelCountMode: nativeBiquadFilterNode.channelCountMode,
                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,
                    detune: nativeBiquadFilterNode.detune.value,
                    frequency: nativeBiquadFilterNode.frequency.value,
                    gain: nativeBiquadFilterNode.gain.value,
                    type: nativeBiquadFilterNode.type
                  };
                  nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);
                }

                renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);

                if (nativeBiquadFilterNodeIsOwnedByContext) {
                  _context.next = 15;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);

              case 7:
                _context.next = 9;
                return renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);

              case 9:
                _context.next = 11;
                return renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);

              case 11:
                _context.next = 13;
                return renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);

              case 13:
                _context.next = 23;
                break;

              case 15:
                _context.next = 17;
                return connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);

              case 17:
                _context.next = 19;
                return connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);

              case 19:
                _context.next = 21;
                return connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);

              case 21:
                _context.next = 23;
                return connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);

              case 23:
                _context.next = 25;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);

              case 25:
                return _context.abrupt("return", nativeBiquadFilterNode);

              case 26:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createBiquadFilterNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);

        if (renderedNativeBiquadFilterNode !== undefined) {
          return Promise.resolve(renderedNativeBiquadFilterNode);
        }

        return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js ***!
  \*********************************************************************************************/
/*! exports provided: createCacheTestResult */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCacheTestResult", function() { return createCacheTestResult; });
var createCacheTestResult = function createCacheTestResult(ongoingTests, testResults) {
  return function (tester, test) {
    var cachedTestResult = testResults.get(tester);

    if (cachedTestResult !== undefined) {
      return cachedTestResult;
    }

    var ongoingTest = ongoingTests.get(tester);

    if (ongoingTest !== undefined) {
      return ongoingTest;
    }

    try {
      var synchronousTestResult = test();

      if (synchronousTestResult instanceof Promise) {
        ongoingTests.set(tester, synchronousTestResult);
        return synchronousTestResult.catch(function () {
          return false;
        }).then(function (finalTestResult) {
          ongoingTests.delete(tester);
          testResults.set(tester, finalTestResult);
          return finalTestResult;
        });
      }

      testResults.set(tester, synchronousTestResult);
      return synchronousTestResult;
    } catch (_unused) {
      testResults.set(tester, false);
      return false;
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js ***!
  \***********************************************************************************************************/
/*! exports provided: createChannelMergerNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createChannelMergerNodeConstructor", function() { return createChannelMergerNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  channelCount: 1,
  channelCountMode: 'explicit',
  channelInterpretation: 'speakers',
  numberOfInputs: 6
};
var createChannelMergerNodeConstructor = function createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(ChannelMergerNode, _audioNodeConstructor);

    var _super = _createSuper(ChannelMergerNode);

    function ChannelMergerNode(context, options) {
      _classCallCheck(this, ChannelMergerNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);
      var channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;
      return _super.call(this, context, false, nativeChannelMergerNode, channelMergerNodeRenderer);
    }

    return ChannelMergerNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js ***!
  \****************************************************************************************************************/
/*! exports provided: createChannelMergerNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createChannelMergerNodeRendererFactory", function() { return createChannelMergerNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createChannelMergerNodeRendererFactory = function createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeAudioNodes = new WeakMap();

    var createAudioNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeAudioNode, nativeAudioNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeAudioNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeAudioNode, nativeOfflineAudioContext);

                if (!nativeAudioNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeAudioNode.channelCount,
                    channelCountMode: nativeAudioNode.channelCountMode,
                    channelInterpretation: nativeAudioNode.channelInterpretation,
                    numberOfInputs: nativeAudioNode.numberOfInputs
                  };
                  nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);
                }

                renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
                _context.next = 6;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);

              case 6:
                return _context.abrupt("return", nativeAudioNode);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createAudioNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

        if (renderedNativeAudioNode !== undefined) {
          return Promise.resolve(renderedNativeAudioNode);
        }

        return createAudioNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js ***!
  \*************************************************************************************************************/
/*! exports provided: createChannelSplitterNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createChannelSplitterNodeConstructor", function() { return createChannelSplitterNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  channelCount: 6,
  channelCountMode: 'explicit',
  channelInterpretation: 'discrete',
  numberOfOutputs: 6
};
var createChannelSplitterNodeConstructor = function createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(ChannelSplitterNode, _audioNodeConstructor);

    var _super = _createSuper(ChannelSplitterNode);

    function ChannelSplitterNode(context, options) {
      _classCallCheck(this, ChannelSplitterNode);

      var nativeContext = getNativeContext(context);
      var mergedOptions = sanitizeChannelSplitterOptions(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));
      var nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);
      var channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;
      return _super.call(this, context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);
    }

    return ChannelSplitterNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js ***!
  \******************************************************************************************************************/
/*! exports provided: createChannelSplitterNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createChannelSplitterNodeRendererFactory", function() { return createChannelSplitterNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createChannelSplitterNodeRendererFactory = function createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeAudioNodes = new WeakMap();

    var createAudioNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeAudioNode, nativeAudioNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeAudioNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeAudioNode, nativeOfflineAudioContext);

                if (!nativeAudioNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeAudioNode.channelCount,
                    channelCountMode: nativeAudioNode.channelCountMode,
                    channelInterpretation: nativeAudioNode.channelInterpretation,
                    numberOfOutputs: nativeAudioNode.numberOfOutputs
                  };
                  nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);
                }

                renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
                _context.next = 6;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);

              case 6:
                return _context.abrupt("return", nativeAudioNode);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createAudioNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

        if (renderedNativeAudioNode !== undefined) {
          return Promise.resolve(renderedNativeAudioNode);
        }

        return createAudioNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js ***!
  \***********************************************************************************************/
/*! exports provided: createConnectAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConnectAudioParam", function() { return createConnectAudioParam; });
var createConnectAudioParam = function createConnectAudioParam(renderInputsOfAudioParam) {
  return function (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) {
    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js ***!
  \****************************************************************************************************/
/*! exports provided: createConnectMultipleOutputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConnectMultipleOutputs", function() { return createConnectMultipleOutputs; });
/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");

var createConnectMultipleOutputs = function createConnectMultipleOutputs(createIndexSizeError) {
  return function (outputAudioNodes, destination) {
    var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var input = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
    var outputAudioNode = outputAudioNodes[output];

    if (outputAudioNode === undefined) {
      throw createIndexSizeError();
    }

    if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destination)) {
      return outputAudioNode.connect(destination, 0, input);
    }

    return outputAudioNode.connect(destination, 0);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: createConnectedNativeAudioBufferSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConnectedNativeAudioBufferSourceNodeFactory", function() { return createConnectedNativeAudioBufferSourceNodeFactory; });
var createConnectedNativeAudioBufferSourceNodeFactory = function createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode) {
  return function (nativeContext, nativeAudioNode) {
    var nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
      buffer: null,
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      loop: false,
      loopEnd: 0,
      loopStart: 0,
      playbackRate: 1
    });
    var nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);
    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
    nativeAudioBufferSourceNode.loop = true;
    nativeAudioBufferSourceNode.connect(nativeAudioNode);
    nativeAudioBufferSourceNode.start();
    return function () {
      nativeAudioBufferSourceNode.stop();
      nativeAudioBufferSourceNode.disconnect(nativeAudioNode);
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js ***!
  \************************************************************************************************************/
/*! exports provided: createConstantSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConstantSourceNodeConstructor", function() { return createConstantSourceNodeConstructor; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  offset: 1
};
var createConstantSourceNodeConstructor = function createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(ConstantSourceNode, _audioNodeConstructor);

    var _super = _createSuper(ConstantSourceNode);

    function ConstantSourceNode(context, options) {
      var _this;

      _classCallCheck(this, ConstantSourceNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var constantSourceNodeRenderer = isOffline ? createConstantSourceNodeRendererFactory() : null;
      _this = _super.call(this, context, false, nativeConstantSourceNode, constantSourceNodeRenderer);
      _this._constantSourceNodeRenderer = constantSourceNodeRenderer;
      _this._nativeConstantSourceNode = nativeConstantSourceNode;
      /*
       * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue
       * for GainNodes.
       */

      _this._offset = createAudioParam(_assertThisInitialized(_this), isOffline, nativeConstantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      _this._onended = null;
      return _this;
    }

    _createClass(ConstantSourceNode, [{
      key: "offset",
      get: function get() {
        return this._offset;
      }
    }, {
      key: "onended",
      get: function get() {
        return this._onended;
      },
      set: function set(value) {
        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
        this._nativeConstantSourceNode.onended = wrappedListener;
        var nativeOnEnded = this._nativeConstantSourceNode.onended;
        this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
      }
    }, {
      key: "start",
      value: function start() {
        var _this2 = this;

        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

        this._nativeConstantSourceNode.start(when);

        if (this._constantSourceNodeRenderer !== null) {
          this._constantSourceNodeRenderer.start = when;
        }

        if (this.context.state !== 'closed') {
          Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_2__["setInternalStateToActive"])(this);

          var resetInternalStateToPassive = function resetInternalStateToPassive() {
            _this2._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);

            if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_1__["isActiveAudioNode"])(_this2)) {
              Object(_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_3__["setInternalStateToPassive"])(_this2);
            }
          };

          this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);
        }
      }
    }, {
      key: "stop",
      value: function stop() {
        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

        this._nativeConstantSourceNode.stop(when);

        if (this._constantSourceNodeRenderer !== null) {
          this._constantSourceNodeRenderer.stop = when;
        }
      }
    }]);

    return ConstantSourceNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createConstantSourceNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConstantSourceNodeRendererFactory", function() { return createConstantSourceNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createConstantSourceNodeRendererFactory = function createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeConstantSourceNodes = new WeakMap();
    var start = null;
    var stop = null;

    var createConstantSourceNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeConstantSourceNode, nativeConstantSourceNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeConstantSourceNode = getNativeAudioNode(proxy);
                /*
                 * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created
                 * again.
                 */

                nativeConstantSourceNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeConstantSourceNode, nativeOfflineAudioContext);

                if (!nativeConstantSourceNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeConstantSourceNode.channelCount,
                    channelCountMode: nativeConstantSourceNode.channelCountMode,
                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,
                    offset: nativeConstantSourceNode.offset.value
                  };
                  nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);

                  if (start !== null) {
                    nativeConstantSourceNode.start(start);
                  }

                  if (stop !== null) {
                    nativeConstantSourceNode.stop(stop);
                  }
                }

                renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);

                if (nativeConstantSourceNodeIsOwnedByContext) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);

              case 7:
                _context.next = 11;
                break;

              case 9:
                _context.next = 11;
                return connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);

              case 11:
                _context.next = 13;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);

              case 13:
                return _context.abrupt("return", nativeConstantSourceNode);

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createConstantSourceNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      set start(value) {
        start = value;
      },

      set stop(value) {
        stop = value;
      },

      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);

        if (renderedNativeConstantSourceNode !== undefined) {
          return Promise.resolve(renderedNativeConstantSourceNode);
        }

        return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js ***!
  \***********************************************************************************************************/
/*! exports provided: createConvertNumberToUnsignedLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConvertNumberToUnsignedLong", function() { return createConvertNumberToUnsignedLong; });
var createConvertNumberToUnsignedLong = function createConvertNumberToUnsignedLong(unit32Array) {
  return function (value) {
    unit32Array[0] = value;
    return unit32Array[0];
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js ***!
  \******************************************************************************************************/
/*! exports provided: createConvolverNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConvolverNodeConstructor", function() { return createConvolverNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  buffer: null,
  channelCount: 2,
  channelCountMode: 'clamped-max',
  channelInterpretation: 'speakers',
  disableNormalization: false
};
var createConvolverNodeConstructor = function createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(ConvolverNode, _audioNodeConstructor);

    var _super = _createSuper(ConvolverNode);

    function ConvolverNode(context, options) {
      var _this;

      _classCallCheck(this, ConvolverNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;
      _this = _super.call(this, context, false, nativeConvolverNode, convolverNodeRenderer);
      _this._isBufferNullified = false;
      _this._nativeConvolverNode = nativeConvolverNode;

      if (mergedOptions.buffer !== null) {
        setAudioNodeTailTime(_assertThisInitialized(_this), mergedOptions.buffer.duration);
      }

      return _this;
    }

    _createClass(ConvolverNode, [{
      key: "buffer",
      get: function get() {
        if (this._isBufferNullified) {
          return null;
        }

        return this._nativeConvolverNode.buffer;
      },
      set: function set(value) {
        this._nativeConvolverNode.buffer = value; // Bug #115: Safari does not allow to set the buffer to null.

        if (value === null && this._nativeConvolverNode.buffer !== null) {
          var nativeContext = this._nativeConvolverNode.context;
          this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);
          this._isBufferNullified = true;
          setAudioNodeTailTime(this, 0);
        } else {
          this._isBufferNullified = false;
          setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);
        }
      }
    }, {
      key: "normalize",
      get: function get() {
        return this._nativeConvolverNode.normalize;
      },
      set: function set(value) {
        this._nativeConvolverNode.normalize = value;
      }
    }]);

    return ConvolverNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! exports provided: createConvolverNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createConvolverNodeRendererFactory", function() { return createConvolverNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



var createConvolverNodeRendererFactory = function createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeConvolverNodes = new WeakMap();

    var createConvolverNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeConvolverNode, nativeConvolverNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeConvolverNode = getNativeAudioNode(proxy); // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeConvolverNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__["isOwnedByContext"])(nativeConvolverNode, nativeOfflineAudioContext);

                if (!nativeConvolverNodeIsOwnedByContext) {
                  options = {
                    buffer: nativeConvolverNode.buffer,
                    channelCount: nativeConvolverNode.channelCount,
                    channelCountMode: nativeConvolverNode.channelCountMode,
                    channelInterpretation: nativeConvolverNode.channelInterpretation,
                    disableNormalization: !nativeConvolverNode.normalize
                  };
                  nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);
                }

                renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);

                if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__["isNativeAudioNodeFaker"])(nativeConvolverNode)) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);

              case 7:
                _context.next = 11;
                break;

              case 9:
                _context.next = 11;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);

              case 11:
                return _context.abrupt("return", nativeConvolverNode);

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createConvolverNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);

        if (renderedNativeConvolverNode !== undefined) {
          return Promise.resolve(renderedNativeConvolverNode);
        }

        return createConvolverNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js ***!
  \***************************************************************************************************************/
/*! exports provided: createCreateNativeOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCreateNativeOfflineAudioContext", function() { return createCreateNativeOfflineAudioContext; });
var createCreateNativeOfflineAudioContext = function createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor) {
  return function (numberOfChannels, length, sampleRate) {
    if (nativeOfflineAudioContextConstructor === null) {
      throw new Error('Missing the native OfflineAudioContext constructor.');
    }

    try {
      return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);
    } catch (err) {
      // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.
      if (err.name === 'SyntaxError') {
        throw createNotSupportedError();
      }

      throw err;
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js ***!
  \********************************************************************************************/
/*! exports provided: createDataCloneError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDataCloneError", function() { return createDataCloneError; });
var createDataCloneError = function createDataCloneError() {
  return new DOMException('', 'DataCloneError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js ***!
  \*********************************************************************************************/
/*! exports provided: createDecodeAudioData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDecodeAudioData", function() { return createDecodeAudioData; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/detach-array-buffer */ "./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js");
/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



var createDecodeAudioData = function createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) {
  return function (anyContext, audioData) {
    var nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext); // Bug #43: Only Chrome, Edge and Opera do throw a DataCloneError.

    if (detachedArrayBuffers.has(audioData)) {
      var err = createDataCloneError();
      return Promise.reject(err);
    } // The audioData parameter maybe of a type which can't be added to a WeakSet.


    try {
      detachedArrayBuffers.add(audioData);
    } catch (_unused) {// Ignore errors.
    } // Bug #21: Safari does not support promises yet.


    if (cacheTestResult(testPromiseSupport, function () {
      return testPromiseSupport(nativeContext);
    })) {
      return nativeContext.decodeAudioData(audioData).then(function (audioBuffer) {
        // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
        if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, function () {
          return testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer);
        })) {
          wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
        }

        audioBufferStore.add(audioBuffer);
        return audioBuffer;
      });
    } // Bug #21: Safari does not return a Promise yet.


    return new Promise(function (resolve, reject) {
      var complete = /*#__PURE__*/function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.prev = 0;
                  _context.next = 3;
                  return Object(_helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_1__["detachArrayBuffer"])(audioData);

                case 3:
                  _context.next = 7;
                  break;

                case 5:
                  _context.prev = 5;
                  _context.t0 = _context["catch"](0);

                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, null, [[0, 5]]);
        }));

        return function complete() {
          return _ref.apply(this, arguments);
        };
      }();

      var fail = function fail(err) {
        reject(err);
        complete();
      }; // Bug #26: Safari throws a synchronous error.


      try {
        // Bug #1: Safari requires a successCallback.
        nativeContext.decodeAudioData(audioData, function (audioBuffer) {
          // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
          // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
          if (typeof audioBuffer.copyFromChannel !== 'function') {
            wrapAudioBufferCopyChannelMethods(audioBuffer);
            Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_2__["wrapAudioBufferGetChannelDataMethod"])(audioBuffer);
          }

          audioBufferStore.add(audioBuffer);
          complete().then(function () {
            return resolve(audioBuffer);
          });
        }, function (err) {
          // Bug #4: Safari returns null instead of an error.
          if (err === null) {
            fail(createEncodingError());
          } else {
            fail(err);
          }
        });
      } catch (err) {
        fail(err);
      }
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js ***!
  \***************************************************************************************************/
/*! exports provided: createDecrementCycleCounter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDecrementCycleCounter", function() { return createDecrementCycleCounter; });
/* harmony import */ var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


var createDecrementCycleCounter = function createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) {
  return function (audioNode, count) {
    var cycleCounter = cycleCounters.get(audioNode);

    if (cycleCounter === undefined) {
      throw new Error('Missing the expected cycle count.');
    }

    var nativeContext = getNativeContext(audioNode.context);
    var isOffline = isNativeOfflineAudioContext(nativeContext);

    if (cycleCounter === count) {
      cycleCounters.delete(audioNode);

      if (!isOffline && isActiveAudioNode(audioNode)) {
        var nativeSourceAudioNode = getNativeAudioNode(audioNode);

        var _getAudioNodeConnecti = getAudioNodeConnections(audioNode),
            outputs = _getAudioNodeConnecti.outputs;

        var _iterator = _createForOfIteratorHelper(outputs),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var output = _step.value;

            if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__["isAudioNodeOutputConnection"])(output)) {
              var nativeDestinationAudioNode = getNativeAudioNode(output[0]);
              connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
            } else {
              var nativeDestinationAudioParam = getNativeAudioParam(output[0]);
              nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
    } else {
      cycleCounters.set(audioNode, cycleCounter - count);
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js ***!
  \**************************************************************************************************/
/*! exports provided: createDelayNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDelayNodeConstructor", function() { return createDelayNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  delayTime: 0,
  maxDelayTime: 1
};
var createDelayNodeConstructor = function createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(DelayNode, _audioNodeConstructor);

    var _super = _createSuper(DelayNode);

    function DelayNode(context, options) {
      var _this;

      _classCallCheck(this, DelayNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;
      _this = _super.call(this, context, false, nativeDelayNode, delayNodeRenderer);
      _this._delayTime = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDelayNode.delayTime);
      setAudioNodeTailTime(_assertThisInitialized(_this), mergedOptions.maxDelayTime);
      return _this;
    }

    _createClass(DelayNode, [{
      key: "delayTime",
      get: function get() {
        return this._delayTime;
      }
    }]);

    return DelayNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js ***!
  \*******************************************************************************************************/
/*! exports provided: createDelayNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDelayNodeRendererFactory", function() { return createDelayNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createDelayNodeRendererFactory = function createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function (maxDelayTime) {
    var renderedNativeDelayNodes = new WeakMap();

    var createDelayNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeDelayNode, nativeDelayNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeDelayNode = getNativeAudioNode(proxy); // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeDelayNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeDelayNode, nativeOfflineAudioContext);

                if (!nativeDelayNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeDelayNode.channelCount,
                    channelCountMode: nativeDelayNode.channelCountMode,
                    channelInterpretation: nativeDelayNode.channelInterpretation,
                    delayTime: nativeDelayNode.delayTime.value,
                    maxDelayTime: maxDelayTime
                  };
                  nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);
                }

                renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);

                if (nativeDelayNodeIsOwnedByContext) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);

              case 7:
                _context.next = 11;
                break;

              case 9:
                _context.next = 11;
                return connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);

              case 11:
                _context.next = 13;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);

              case 13:
                return _context.abrupt("return", nativeDelayNode);

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createDelayNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);

        if (renderedNativeDelayNode !== undefined) {
          return Promise.resolve(renderedNativeDelayNode);
        }

        return createDelayNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js ***!
  \************************************************************************************************************************/
/*! exports provided: createDeleteActiveInputConnectionToAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDeleteActiveInputConnectionToAudioNode", function() { return createDeleteActiveInputConnectionToAudioNode; });
var createDeleteActiveInputConnectionToAudioNode = function createDeleteActiveInputConnectionToAudioNode(pickElementFromSet) {
  return function (activeInputs, source, output, input) {
    return pickElementFromSet(activeInputs[input], function (activeInputConnection) {
      return activeInputConnection[0] === source && activeInputConnection[1] === output;
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js ***!
  \****************************************************************************************************************/
/*! exports provided: createDeleteUnrenderedAudioWorkletNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDeleteUnrenderedAudioWorkletNode", function() { return createDeleteUnrenderedAudioWorkletNode; });
var createDeleteUnrenderedAudioWorkletNode = function createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes) {
  return function (nativeContext, audioWorkletNode) {
    getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js ***!
  \*****************************************************************************************/
/*! exports provided: createDetectCycles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDetectCycles", function() { return createDetectCycles; });
/* harmony import */ var _guards_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");
/* harmony import */ var _guards_delay_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/delay-node */ "./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var createDetectCycles = function createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) {
  return function detectCycles(chain, nextLink) {
    var audioNode = Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);

    if (Object(_guards_delay_node__WEBPACK_IMPORTED_MODULE_1__["isDelayNode"])(audioNode)) {
      return [];
    }

    if (chain[0] === audioNode) {
      return [chain];
    }

    if (chain.includes(audioNode)) {
      return [];
    }

    var _getAudioNodeConnecti = getAudioNodeConnections(audioNode),
        outputs = _getAudioNodeConnecti.outputs;

    return Array.from(outputs).map(function (outputConnection) {
      return detectCycles([].concat(_toConsumableArray(chain), [audioNode]), outputConnection[0]);
    }).reduce(function (mergedCycles, nestedCycles) {
      return mergedCycles.concat(nestedCycles);
    }, []);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js ***!
  \*******************************************************************************************************/
/*! exports provided: createDisconnectMultipleOutputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDisconnectMultipleOutputs", function() { return createDisconnectMultipleOutputs; });
/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");


var getOutputAudioNodeAtIndex = function getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output) {
  var outputAudioNode = outputAudioNodes[output];

  if (outputAudioNode === undefined) {
    throw createIndexSizeError();
  }

  return outputAudioNode;
};

var createDisconnectMultipleOutputs = function createDisconnectMultipleOutputs(createIndexSizeError) {
  return function (outputAudioNodes) {
    var destinationOrOutput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
    var input = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

    if (destinationOrOutput === undefined) {
      return outputAudioNodes.forEach(function (outputAudioNode) {
        return outputAudioNode.disconnect();
      });
    }

    if (typeof destinationOrOutput === 'number') {
      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();
    }

    if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destinationOrOutput)) {
      if (output === undefined) {
        return outputAudioNodes.forEach(function (outputAudioNode) {
          return outputAudioNode.disconnect(destinationOrOutput);
        });
      }

      if (input === undefined) {
        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
      }

      return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);
    }

    if (output === undefined) {
      return outputAudioNodes.forEach(function (outputAudioNode) {
        return outputAudioNode.disconnect(destinationOrOutput);
      });
    }

    return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js ***!
  \****************************************************************************************************************/
/*! exports provided: createDynamicsCompressorNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDynamicsCompressorNodeConstructor", function() { return createDynamicsCompressorNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  attack: 0.003,
  channelCount: 2,
  channelCountMode: 'clamped-max',
  channelInterpretation: 'speakers',
  knee: 30,
  ratio: 12,
  release: 0.25,
  threshold: -24
};
var createDynamicsCompressorNodeConstructor = function createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(DynamicsCompressorNode, _audioNodeConstructor);

    var _super = _createSuper(DynamicsCompressorNode);

    function DynamicsCompressorNode(context, options) {
      var _this;

      _classCallCheck(this, DynamicsCompressorNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var dynamicsCompressorNodeRenderer = isOffline ? createDynamicsCompressorNodeRenderer() : null;
      _this = _super.call(this, context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);
      _this._attack = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDynamicsCompressorNode.attack);
      _this._knee = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDynamicsCompressorNode.knee);
      _this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;
      _this._ratio = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDynamicsCompressorNode.ratio);
      _this._release = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDynamicsCompressorNode.release);
      _this._threshold = createAudioParam(_assertThisInitialized(_this), isOffline, nativeDynamicsCompressorNode.threshold);
      setAudioNodeTailTime(_assertThisInitialized(_this), 0.006);
      return _this;
    }

    _createClass(DynamicsCompressorNode, [{
      key: "attack",
      get: function get() {
        return this._attack;
      } // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.

    }, {
      key: "channelCount",
      get: function get() {
        return this._nativeDynamicsCompressorNode.channelCount;
      },
      set: function set(value) {
        var previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;
        this._nativeDynamicsCompressorNode.channelCount = value;

        if (value > 2) {
          this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;
          throw createNotSupportedError();
        }
      }
      /*
       * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be
       * overwritten here.
       */

    }, {
      key: "channelCountMode",
      get: function get() {
        return this._nativeDynamicsCompressorNode.channelCountMode;
      },
      set: function set(value) {
        var previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;
        this._nativeDynamicsCompressorNode.channelCountMode = value;

        if (value === 'max') {
          this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;
          throw createNotSupportedError();
        }
      }
    }, {
      key: "knee",
      get: function get() {
        return this._knee;
      }
    }, {
      key: "ratio",
      get: function get() {
        return this._ratio;
      }
    }, {
      key: "reduction",
      get: function get() {
        // Bug #111: Safari returns an AudioParam instead of a number.
        if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {
          return this._nativeDynamicsCompressorNode.reduction.value;
        }

        return this._nativeDynamicsCompressorNode.reduction;
      }
    }, {
      key: "release",
      get: function get() {
        return this._release;
      }
    }, {
      key: "threshold",
      get: function get() {
        return this._threshold;
      }
    }]);

    return DynamicsCompressorNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createDynamicsCompressorNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createDynamicsCompressorNodeRendererFactory", function() { return createDynamicsCompressorNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createDynamicsCompressorNodeRendererFactory = function createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeDynamicsCompressorNodes = new WeakMap();

    var createDynamicsCompressorNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeDynamicsCompressorNode, nativeDynamicsCompressorNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeDynamicsCompressorNode = getNativeAudioNode(proxy);
                /*
                 * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be
                 * created again.
                 */

                nativeDynamicsCompressorNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeDynamicsCompressorNode, nativeOfflineAudioContext);

                if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
                  options = {
                    attack: nativeDynamicsCompressorNode.attack.value,
                    channelCount: nativeDynamicsCompressorNode.channelCount,
                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,
                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,
                    knee: nativeDynamicsCompressorNode.knee.value,
                    ratio: nativeDynamicsCompressorNode.ratio.value,
                    release: nativeDynamicsCompressorNode.release.value,
                    threshold: nativeDynamicsCompressorNode.threshold.value
                  };
                  nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);
                }

                renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);

                if (nativeDynamicsCompressorNodeIsOwnedByContext) {
                  _context.next = 17;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);

              case 7:
                _context.next = 9;
                return renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);

              case 9:
                _context.next = 11;
                return renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);

              case 11:
                _context.next = 13;
                return renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);

              case 13:
                _context.next = 15;
                return renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);

              case 15:
                _context.next = 27;
                break;

              case 17:
                _context.next = 19;
                return connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);

              case 19:
                _context.next = 21;
                return connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);

              case 21:
                _context.next = 23;
                return connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);

              case 23:
                _context.next = 25;
                return connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);

              case 25:
                _context.next = 27;
                return connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);

              case 27:
                _context.next = 29;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);

              case 29:
                return _context.abrupt("return", nativeDynamicsCompressorNode);

              case 30:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createDynamicsCompressorNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);

        if (renderedNativeDynamicsCompressorNode !== undefined) {
          return Promise.resolve(renderedNativeDynamicsCompressorNode);
        }

        return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js ***!
  \******************************************************************************************/
/*! exports provided: createEncodingError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEncodingError", function() { return createEncodingError; });
var createEncodingError = function createEncodingError() {
  return new DOMException('', 'EncodingError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js ***!
  \*******************************************************************************************/
/*! exports provided: createEvaluateSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEvaluateSource", function() { return createEvaluateSource; });
var createEvaluateSource = function createEvaluateSource(window) {
  return function (source) {
    return new Promise(function (resolve, reject) {
      if (window === null) {
        // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.
        reject(new SyntaxError());
        return;
      }

      var head = window.document.head;

      if (head === null) {
        // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.
        reject(new SyntaxError());
      } else {
        var script = window.document.createElement('script'); // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.

        var blob = new Blob([source], {
          type: 'application/javascript'
        });
        var url = URL.createObjectURL(blob);
        var originalOnErrorHandler = window.onerror;

        var removeErrorEventListenerAndRevokeUrl = function removeErrorEventListenerAndRevokeUrl() {
          window.onerror = originalOnErrorHandler;
          URL.revokeObjectURL(url);
        };

        window.onerror = function (message, src, lineno, colno, error) {
          // @todo Edge thinks the source is the one of the html document.
          if (src === url || src === window.location.href && lineno === 1 && colno === 1) {
            removeErrorEventListenerAndRevokeUrl();
            reject(error);
            return false;
          }

          if (originalOnErrorHandler !== null) {
            return originalOnErrorHandler(message, src, lineno, colno, error);
          }
        };

        script.onerror = function () {
          removeErrorEventListenerAndRevokeUrl(); // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.

          reject(new SyntaxError());
        };

        script.onload = function () {
          removeErrorEventListenerAndRevokeUrl();
          resolve();
        };

        script.src = url;
        script.type = 'module';
        head.appendChild(script);
      }
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js ***!
  \****************************************************************************************************/
/*! exports provided: createEventTargetConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEventTargetConstructor", function() { return createEventTargetConstructor; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var createEventTargetConstructor = function createEventTargetConstructor(wrapEventListener) {
  return /*#__PURE__*/function () {
    function EventTarget(_nativeEventTarget) {
      _classCallCheck(this, EventTarget);

      this._nativeEventTarget = _nativeEventTarget;
      this._listeners = new WeakMap();
    }

    _createClass(EventTarget, [{
      key: "addEventListener",
      value: function addEventListener(type, listener, options) {
        if (listener !== null) {
          var wrappedEventListener = this._listeners.get(listener);

          if (wrappedEventListener === undefined) {
            wrappedEventListener = wrapEventListener(this, listener);

            if (typeof listener === 'function') {
              this._listeners.set(listener, wrappedEventListener);
            }
          }

          this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);
        }
      }
    }, {
      key: "dispatchEvent",
      value: function dispatchEvent(event) {
        return this._nativeEventTarget.dispatchEvent(event);
      }
    }, {
      key: "removeEventListener",
      value: function removeEventListener(type, listener, options) {
        var wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);

        this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);
      }
    }]);

    return EventTarget;
  }();
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createExposeCurrentFrameAndCurrentTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createExposeCurrentFrameAndCurrentTime", function() { return createExposeCurrentFrameAndCurrentTime; });
var createExposeCurrentFrameAndCurrentTime = function createExposeCurrentFrameAndCurrentTime(window) {
  return function (currentTime, sampleRate, fn) {
    Object.defineProperties(window, {
      currentFrame: {
        configurable: true,
        get: function get() {
          return Math.round(currentTime * sampleRate);
        }
      },
      currentTime: {
        configurable: true,
        get: function get() {
          return currentTime;
        }
      }
    });

    try {
      return fn();
    } finally {
      if (window !== null) {
        delete window.currentFrame;
        delete window.currentTime;
      }
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js ***!
  \****************************************************************************************/
/*! exports provided: createFetchSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFetchSource", function() { return createFetchSource; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var createFetchSource = function createFetchSource(createAbortError) {
  return /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(url) {
      var response;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return fetch(url);

            case 3:
              response = _context.sent;

              if (!response.ok) {
                _context.next = 10;
                break;
              }

              _context.next = 7;
              return response.text();

            case 7:
              _context.t0 = _context.sent;
              _context.t1 = response.url;
              return _context.abrupt("return", [_context.t0, _context.t1]);

            case 10:
              _context.next = 14;
              break;

            case 12:
              _context.prev = 12;
              _context.t2 = _context["catch"](0);

            case 14:
              throw createAbortError();

            case 15:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[0, 12]]);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }();
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js ***!
  \*************************************************************************************************/
/*! exports provided: createGainNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGainNodeConstructor", function() { return createGainNodeConstructor; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  gain: 1
};
var createGainNodeConstructor = function createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(GainNode, _audioNodeConstructor);

    var _super = _createSuper(GainNode);

    function GainNode(context, options) {
      var _this;

      _classCallCheck(this, GainNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;
      _this = _super.call(this, context, false, nativeGainNode, gainNodeRenderer); // Bug #74: Safari does not export the correct values for maxValue and minValue.

      _this._gain = createAudioParam(_assertThisInitialized(_this), isOffline, nativeGainNode.gain, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      return _this;
    }

    _createClass(GainNode, [{
      key: "gain",
      get: function get() {
        return this._gain;
      }
    }]);

    return GainNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js ***!
  \******************************************************************************************************/
/*! exports provided: createGainNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGainNodeRendererFactory", function() { return createGainNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createGainNodeRendererFactory = function createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeGainNodes = new WeakMap();

    var createGainNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeGainNode, nativeGainNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeGainNode = getNativeAudioNode(proxy); // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeGainNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeGainNode, nativeOfflineAudioContext);

                if (!nativeGainNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeGainNode.channelCount,
                    channelCountMode: nativeGainNode.channelCountMode,
                    channelInterpretation: nativeGainNode.channelInterpretation,
                    gain: nativeGainNode.gain.value
                  };
                  nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);
                }

                renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);

                if (nativeGainNodeIsOwnedByContext) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);

              case 7:
                _context.next = 11;
                break;

              case 9:
                _context.next = 11;
                return connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);

              case 11:
                _context.next = 13;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);

              case 13:
                return _context.abrupt("return", nativeGainNode);

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createGainNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);

        if (renderedNativeGainNode !== undefined) {
          return Promise.resolve(renderedNativeGainNode);
        }

        return createGainNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js ***!
  \****************************************************************************************************************/
/*! exports provided: createGetActiveAudioWorkletNodeInputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetActiveAudioWorkletNodeInputs", function() { return createGetActiveAudioWorkletNodeInputs; });
var createGetActiveAudioWorkletNodeInputs = function createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey) {
  return function (nativeAudioWorkletNode) {
    return getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js ***!
  \***************************************************************************************************/
/*! exports provided: createGetAudioNodeRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetAudioNodeRenderer", function() { return createGetAudioNodeRenderer; });
var createGetAudioNodeRenderer = function createGetAudioNodeRenderer(getAudioNodeConnections) {
  return function (audioNode) {
    var audioNodeConnections = getAudioNodeConnections(audioNode);

    if (audioNodeConnections.renderer === null) {
      throw new Error('Missing the renderer of the given AudioNode in the audio graph.');
    }

    return audioNodeConnections.renderer;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js ***!
  \****************************************************************************************************/
/*! exports provided: createGetAudioNodeTailTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetAudioNodeTailTime", function() { return createGetAudioNodeTailTime; });
var createGetAudioNodeTailTime = function createGetAudioNodeTailTime(audioNodeTailTimeStore) {
  return function (audioNode) {
    var _a;

    return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js ***!
  \****************************************************************************************************/
/*! exports provided: createGetAudioParamRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetAudioParamRenderer", function() { return createGetAudioParamRenderer; });
var createGetAudioParamRenderer = function createGetAudioParamRenderer(getAudioParamConnections) {
  return function (audioParam) {
    var audioParamConnections = getAudioParamConnections(audioParam);

    if (audioParamConnections.renderer === null) {
      throw new Error('Missing the renderer of the given AudioParam in the audio graph.');
    }

    return audioParamConnections.renderer;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js ***!
  \************************************************************************************************************/
/*! exports provided: createGetBackupOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetBackupOfflineAudioContext", function() { return createGetBackupOfflineAudioContext; });
var createGetBackupOfflineAudioContext = function createGetBackupOfflineAudioContext(backupOfflineAudioContextStore) {
  return function (nativeContext) {
    return backupOfflineAudioContextStore.get(nativeContext);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js ***!
  \**********************************************************************************************/
/*! exports provided: createGetNativeContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetNativeContext", function() { return createGetNativeContext; });
/* harmony import */ var _invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");

var createGetNativeContext = function createGetNativeContext(contextStore) {
  return function (context) {
    var nativeContext = contextStore.get(context);

    if (nativeContext === undefined) {
      throw Object(_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
    }

    return nativeContext;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js ***!
  \**********************************************************************************************************************/
/*! exports provided: createGetOrCreateBackupOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetOrCreateBackupOfflineAudioContext", function() { return createGetOrCreateBackupOfflineAudioContext; });
var createGetOrCreateBackupOfflineAudioContext = function createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) {
  return function (nativeContext) {
    var backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);

    if (backupOfflineAudioContext !== undefined) {
      return backupOfflineAudioContext;
    }

    if (nativeOfflineAudioContextConstructor === null) {
      throw new Error('Missing the native OfflineAudioContext constructor.');
    }

    backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 8000);
    backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);
    return backupOfflineAudioContext;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js ***!
  \**************************************************************************************************************/
/*! exports provided: createGetUnrenderedAudioWorkletNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGetUnrenderedAudioWorkletNodes", function() { return createGetUnrenderedAudioWorkletNodes; });
var createGetUnrenderedAudioWorkletNodes = function createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore) {
  return function (nativeContext) {
    var unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);

    if (unrenderedAudioWorkletNodes === undefined) {
      throw new Error('The context has no set of AudioWorkletNodes.');
    }

    return unrenderedAudioWorkletNodes;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js ***!
  \*******************************************************************************************************/
/*! exports provided: createIIRFilterNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIIRFilterNodeConstructor", function() { return createIIRFilterNodeConstructor; });
/* harmony import */ var _helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/wrap-iir-filter-node-get-frequency-response-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers'
};
var createIIRFilterNodeConstructor = function createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(IIRFilterNode, _audioNodeConstructor);

    var _super = _createSuper(IIRFilterNode);

    function IIRFilterNode(context, options) {
      var _this;

      _classCallCheck(this, IIRFilterNode);

      var nativeContext = getNativeContext(context);
      var isOffline = isNativeOfflineAudioContext(nativeContext);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);
      var iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;
      _this = _super.call(this, context, false, nativeIIRFilterNode, iirFilterNodeRenderer); // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.
      // @todo Write a test which allows other browsers to remain unpatched.

      Object(_helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_0__["wrapIIRFilterNodeGetFrequencyResponseMethod"])(nativeIIRFilterNode);
      _this._nativeIIRFilterNode = nativeIIRFilterNode; // @todo Determine a meaningful tail-time instead of just using one second.

      setAudioNodeTailTime(_assertThisInitialized(_this), 1);
      return _this;
    }

    _createClass(IIRFilterNode, [{
      key: "getFrequencyResponse",
      value: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
        return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
      }
    }]);

    return IIRFilterNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! exports provided: createIIRFilterNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIIRFilterNodeRendererFactory", function() { return createIIRFilterNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/filter-buffer */ "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }




var filterFullBuffer = function filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) {
  var convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
  var convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
  var feedbackLength = convertedFeedback.length;
  var feedforwardLength = convertedFeedforward.length;
  var minLength = Math.min(feedbackLength, feedforwardLength);

  if (convertedFeedback[0] !== 1) {
    for (var i = 0; i < feedbackLength; i += 1) {
      convertedFeedforward[i] /= convertedFeedback[0];
    }

    for (var _i = 1; _i < feedforwardLength; _i += 1) {
      convertedFeedback[_i] /= convertedFeedback[0];
    }
  }

  var bufferLength = 32;
  var xBuffer = new Float32Array(bufferLength);
  var yBuffer = new Float32Array(bufferLength);
  var filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);
  var numberOfChannels = renderedBuffer.numberOfChannels;

  for (var _i2 = 0; _i2 < numberOfChannels; _i2 += 1) {
    var input = renderedBuffer.getChannelData(_i2);
    var output = filteredBuffer.getChannelData(_i2);
    xBuffer.fill(0);
    yBuffer.fill(0);
    Object(_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__["filterBuffer"])(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);
  }

  return filteredBuffer;
};

var createIIRFilterNodeRendererFactory = function createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) {
  return function (feedback, feedforward) {
    var renderedNativeAudioNodes = new WeakMap();
    var filteredBufferPromise = null;

    var createAudioNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(proxy, nativeOfflineAudioContext, trace) {
        var nativeAudioBufferSourceNode, nativeIIRFilterNode, nativeIIRFilterNodeIsOwnedByContext, partialOfflineAudioContext, filteredBuffer;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                nativeAudioBufferSourceNode = null;
                nativeIIRFilterNode = getNativeAudioNode(proxy); // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeIIRFilterNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__["isOwnedByContext"])(nativeIIRFilterNode, nativeOfflineAudioContext); // Bug #9: Safari does not support IIRFilterNodes.

                if (nativeOfflineAudioContext.createIIRFilter === undefined) {
                  nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                    buffer: null,
                    channelCount: 2,
                    channelCountMode: 'max',
                    channelInterpretation: 'speakers',
                    loop: false,
                    loopEnd: 0,
                    loopStart: 0,
                    playbackRate: 1
                  });
                } else if (!nativeIIRFilterNodeIsOwnedByContext) {
                  // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.
                  nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);
                }

                renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);

                if (!(nativeAudioBufferSourceNode !== null)) {
                  _context2.next = 17;
                  break;
                }

                if (!(filteredBufferPromise === null)) {
                  _context2.next = 11;
                  break;
                }

                if (!(nativeOfflineAudioContextConstructor === null)) {
                  _context2.next = 9;
                  break;
                }

                throw new Error('Missing the native OfflineAudioContext constructor.');

              case 9:
                partialOfflineAudioContext = new nativeOfflineAudioContextConstructor( // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.
                proxy.context.destination.channelCount, // Bug #17: Safari does not yet expose the length.
                proxy.context.length, nativeOfflineAudioContext.sampleRate);
                filteredBufferPromise = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
                  var renderedBuffer;
                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _context.next = 2;
                          return renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);

                        case 2:
                          _context.next = 4;
                          return renderNativeOfflineAudioContext(partialOfflineAudioContext);

                        case 4:
                          renderedBuffer = _context.sent;
                          return _context.abrupt("return", filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward));

                        case 6:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }))();

              case 11:
                _context2.next = 13;
                return filteredBufferPromise;

              case 13:
                filteredBuffer = _context2.sent;
                nativeAudioBufferSourceNode.buffer = filteredBuffer;
                nativeAudioBufferSourceNode.start(0);
                return _context2.abrupt("return", nativeAudioBufferSourceNode);

              case 17:
                _context2.next = 19;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);

              case 19:
                return _context2.abrupt("return", nativeIIRFilterNode);

              case 20:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      return function createAudioNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

        if (renderedNativeAudioNode !== undefined) {
          return Promise.resolve(renderedNativeAudioNode);
        }

        return createAudioNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js ***!
  \***********************************************************************************************************/
/*! exports provided: createIncrementCycleCounterFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIncrementCycleCounterFactory", function() { return createIncrementCycleCounterFactory; });
/* harmony import */ var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


var createIncrementCycleCounterFactory = function createIncrementCycleCounterFactory(cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) {
  return function (isOffline) {
    return function (audioNode, count) {
      var cycleCounter = cycleCounters.get(audioNode);

      if (cycleCounter === undefined) {
        if (!isOffline && isActiveAudioNode(audioNode)) {
          var nativeSourceAudioNode = getNativeAudioNode(audioNode);

          var _getAudioNodeConnecti = getAudioNodeConnections(audioNode),
              outputs = _getAudioNodeConnecti.outputs;

          var _iterator = _createForOfIteratorHelper(outputs),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var output = _step.value;

              if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__["isAudioNodeOutputConnection"])(output)) {
                var nativeDestinationAudioNode = getNativeAudioNode(output[0]);
                disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
              } else {
                var nativeDestinationAudioParam = getNativeAudioParam(output[0]);
                nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        }

        cycleCounters.set(audioNode, count);
      } else {
        cycleCounters.set(audioNode, cycleCounter + count);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js ***!
  \********************************************************************************************/
/*! exports provided: createIndexSizeError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIndexSizeError", function() { return createIndexSizeError; });
var createIndexSizeError = function createIndexSizeError() {
  return new DOMException('', 'IndexSizeError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js ***!
  \************************************************************************************************/
/*! exports provided: createInvalidAccessError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInvalidAccessError", function() { return createInvalidAccessError; });
var createInvalidAccessError = function createInvalidAccessError() {
  return new DOMException('', 'InvalidAccessError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js ***!
  \***********************************************************************************************/
/*! exports provided: createInvalidStateError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createInvalidStateError", function() { return createInvalidStateError; });
var createInvalidStateError = function createInvalidStateError() {
  return new DOMException('', 'InvalidStateError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js ***!
  \************************************************************************************************/
/*! exports provided: createIsAnyAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsAnyAudioContext", function() { return createIsAnyAudioContext; });
var createIsAnyAudioContext = function createIsAnyAudioContext(contextStore, isNativeAudioContext) {
  return function (anything) {
    var nativeContext = contextStore.get(anything);
    return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js ***!
  \*********************************************************************************************/
/*! exports provided: createIsAnyAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsAnyAudioNode", function() { return createIsAnyAudioNode; });
var createIsAnyAudioNode = function createIsAnyAudioNode(audioNodeStore, isNativeAudioNode) {
  return function (anything) {
    return audioNodeStore.has(anything) || isNativeAudioNode(anything);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js ***!
  \**********************************************************************************************/
/*! exports provided: createIsAnyAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsAnyAudioParam", function() { return createIsAnyAudioParam; });
var createIsAnyAudioParam = function createIsAnyAudioParam(audioParamStore, isNativeAudioParam) {
  return function (anything) {
    return audioParamStore.has(anything) || isNativeAudioParam(anything);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js ***!
  \********************************************************************************************************/
/*! exports provided: createIsAnyOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsAnyOfflineAudioContext", function() { return createIsAnyOfflineAudioContext; });
var createIsAnyOfflineAudioContext = function createIsAnyOfflineAudioContext(contextStore, isNativeOfflineAudioContext) {
  return function (anything) {
    var nativeContext = contextStore.get(anything);
    return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js ***!
  \***************************************************************************************************/
/*! exports provided: createIsNativeAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNativeAudioContext", function() { return createIsNativeAudioContext; });
var createIsNativeAudioContext = function createIsNativeAudioContext(nativeAudioContextConstructor) {
  return function (anything) {
    return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js ***!
  \************************************************************************************************/
/*! exports provided: createIsNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNativeAudioNode", function() { return createIsNativeAudioNode; });
var createIsNativeAudioNode = function createIsNativeAudioNode(window) {
  return function (anything) {
    return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js ***!
  \*************************************************************************************************/
/*! exports provided: createIsNativeAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNativeAudioParam", function() { return createIsNativeAudioParam; });
var createIsNativeAudioParam = function createIsNativeAudioParam(window) {
  return function (anything) {
    return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js ***!
  \*********************************************************************************************/
/*! exports provided: createIsNativeContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNativeContext", function() { return createIsNativeContext; });
var createIsNativeContext = function createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext) {
  return function (anything) {
    return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js ***!
  \***********************************************************************************************************/
/*! exports provided: createIsNativeOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsNativeOfflineAudioContext", function() { return createIsNativeOfflineAudioContext; });
var createIsNativeOfflineAudioContext = function createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor) {
  return function (anything) {
    return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js ***!
  \*********************************************************************************************/
/*! exports provided: createIsSecureContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsSecureContext", function() { return createIsSecureContext; });
var createIsSecureContext = function createIsSecureContext(window) {
  return window !== null && window.isSecureContext;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js ***!
  \************************************************************************************************/
/*! exports provided: createIsSupportedPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIsSupportedPromise", function() { return createIsSupportedPromise; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var createIsSupportedPromise = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) {
    var results;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) && cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport))) {
              _context.next = 5;
              break;
            }

            _context.next = 3;
            return Promise.all([cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport), cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport), cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport), cacheTestResult(testTransferablesSupport, testTransferablesSupport)]);

          case 3:
            results = _context.sent;
            return _context.abrupt("return", results.every(function (result) {
              return result;
            }));

          case 5:
            return _context.abrupt("return", false);

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function createIsSupportedPromise(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16) {
    return _ref.apply(this, arguments);
  };
}();

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js ***!
  \***********************************************************************************************************************/
/*! exports provided: createMediaElementAudioSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMediaElementAudioSourceNodeConstructor", function() { return createMediaElementAudioSourceNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var createMediaElementAudioSourceNodeConstructor = function createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(MediaElementAudioSourceNode, _audioNodeConstructor);

    var _super = _createSuper(MediaElementAudioSourceNode);

    function MediaElementAudioSourceNode(context, options) {
      var _this;

      _classCallCheck(this, MediaElementAudioSourceNode);

      var nativeContext = getNativeContext(context);
      var nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options); // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.

      if (isNativeOfflineAudioContext(nativeContext)) {
        throw TypeError();
      }

      _this = _super.call(this, context, true, nativeMediaElementAudioSourceNode, null);
      _this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;
      return _this;
    }

    _createClass(MediaElementAudioSourceNode, [{
      key: "mediaElement",
      get: function get() {
        return this._nativeMediaElementAudioSourceNode.mediaElement;
      }
    }]);

    return MediaElementAudioSourceNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js ***!
  \***************************************************************************************************************************/
/*! exports provided: createMediaStreamAudioDestinationNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMediaStreamAudioDestinationNodeConstructor", function() { return createMediaStreamAudioDestinationNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'explicit',
  channelInterpretation: 'speakers'
};
var createMediaStreamAudioDestinationNodeConstructor = function createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(MediaStreamAudioDestinationNode, _audioNodeConstructor);

    var _super = _createSuper(MediaStreamAudioDestinationNode);

    function MediaStreamAudioDestinationNode(context, options) {
      var _this;

      _classCallCheck(this, MediaStreamAudioDestinationNode);

      var nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.

      if (isNativeOfflineAudioContext(nativeContext)) {
        throw new TypeError();
      }

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);
      _this = _super.call(this, context, false, nativeMediaStreamAudioDestinationNode, null);
      _this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;
      return _this;
    }

    _createClass(MediaStreamAudioDestinationNode, [{
      key: "stream",
      get: function get() {
        return this._nativeMediaStreamAudioDestinationNode.stream;
      }
    }]);

    return MediaStreamAudioDestinationNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js ***!
  \**********************************************************************************************************************/
/*! exports provided: createMediaStreamAudioSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMediaStreamAudioSourceNodeConstructor", function() { return createMediaStreamAudioSourceNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var createMediaStreamAudioSourceNodeConstructor = function createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(MediaStreamAudioSourceNode, _audioNodeConstructor);

    var _super = _createSuper(MediaStreamAudioSourceNode);

    function MediaStreamAudioSourceNode(context, options) {
      var _this;

      _classCallCheck(this, MediaStreamAudioSourceNode);

      var nativeContext = getNativeContext(context);
      var nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options); // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.

      if (isNativeOfflineAudioContext(nativeContext)) {
        throw new TypeError();
      }

      _this = _super.call(this, context, true, nativeMediaStreamAudioSourceNode, null);
      _this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;
      return _this;
    }

    _createClass(MediaStreamAudioSourceNode, [{
      key: "mediaStream",
      get: function get() {
        return this._nativeMediaStreamAudioSourceNode.mediaStream;
      }
    }]);

    return MediaStreamAudioSourceNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js ***!
  \****************************************************************************************************************************/
/*! exports provided: createMediaStreamTrackAudioSourceNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMediaStreamTrackAudioSourceNodeConstructor", function() { return createMediaStreamTrackAudioSourceNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var createMediaStreamTrackAudioSourceNodeConstructor = function createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(MediaStreamTrackAudioSourceNode, _audioNodeConstructor);

    var _super = _createSuper(MediaStreamTrackAudioSourceNode);

    function MediaStreamTrackAudioSourceNode(context, options) {
      _classCallCheck(this, MediaStreamTrackAudioSourceNode);

      var nativeContext = getNativeContext(context);
      var nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);
      return _super.call(this, context, true, nativeMediaStreamTrackAudioSourceNode, null);
    }

    return MediaStreamTrackAudioSourceNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js ***!
  \*************************************************************************************************************/
/*! exports provided: createMinimalAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMinimalAudioContextConstructor", function() { return createMinimalAudioContextConstructor; });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-valid-latency-hint */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var createMinimalAudioContextConstructor = function createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) {
  return /*#__PURE__*/function (_minimalBaseAudioCont) {
    _inherits(MinimalAudioContext, _minimalBaseAudioCont);

    var _super = _createSuper(MinimalAudioContext);

    function MinimalAudioContext() {
      var _this;

      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      _classCallCheck(this, MinimalAudioContext);

      if (nativeAudioContextConstructor === null) {
        throw new Error('Missing the native AudioContext constructor.');
      }

      var nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.

      if (nativeAudioContext === null) {
        throw createUnknownError();
      } // Bug #51 Only Chrome Edge, and Opera throw an error if the given latencyHint is invalid.


      if (!Object(_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_1__["isValidLatencyHint"])(options.latencyHint)) {
        throw new TypeError("The provided value '".concat(options.latencyHint, "' is not a valid enum value of type AudioContextLatencyCategory."));
      } // Bug #150 Safari does not support setting the sampleRate.


      if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
        throw createNotSupportedError();
      }

      _this = _super.call(this, nativeAudioContext, 2);
      var latencyHint = options.latencyHint;
      var sampleRate = nativeAudioContext.sampleRate; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.

      _this._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :
      /*
       * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
       * ScriptProcessorNode.
       */
      Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
      _this._nativeAudioContext = nativeAudioContext; // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.

      if (nativeAudioContextConstructor.name === 'webkitAudioContext') {
        _this._nativeGainNode = nativeAudioContext.createGain();
        _this._nativeOscillatorNode = nativeAudioContext.createOscillator();
        _this._nativeGainNode.gain.value = 1e-37;

        _this._nativeOscillatorNode.connect(_this._nativeGainNode).connect(nativeAudioContext.destination);

        _this._nativeOscillatorNode.start();
      } else {
        _this._nativeGainNode = null;
        _this._nativeOscillatorNode = null;
      }

      _this._state = null;
      /*
       * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually
       * changes to 'running'.
       */

      if (nativeAudioContext.state === 'running') {
        _this._state = 'suspended';

        var revokeState = function revokeState() {
          if (_this._state === 'suspended') {
            _this._state = null;
          }

          nativeAudioContext.removeEventListener('statechange', revokeState);
        };

        nativeAudioContext.addEventListener('statechange', revokeState);
      }

      return _this;
    }

    _createClass(MinimalAudioContext, [{
      key: "baseLatency",
      get: function get() {
        return this._baseLatency;
      }
    }, {
      key: "state",
      get: function get() {
        return this._state !== null ? this._state : this._nativeAudioContext.state;
      }
    }, {
      key: "close",
      value: function close() {
        var _this2 = this;

        // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
        if (this.state === 'closed') {
          return this._nativeAudioContext.close().then(function () {
            throw createInvalidStateError();
          });
        } // Bug #34: If the state was set to suspended before it should be revoked now.


        if (this._state === 'suspended') {
          this._state = null;
        }

        return this._nativeAudioContext.close().then(function () {
          if (_this2._nativeGainNode !== null && _this2._nativeOscillatorNode !== null) {
            _this2._nativeOscillatorNode.stop();

            _this2._nativeGainNode.disconnect();

            _this2._nativeOscillatorNode.disconnect();
          }

          Object(_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__["deactivateAudioGraph"])(_this2);
        });
      }
    }, {
      key: "resume",
      value: function resume() {
        var _this3 = this;

        if (this._state === 'suspended') {
          return new Promise(function (resolve, reject) {
            var resolvePromise = function resolvePromise() {
              _this3._nativeAudioContext.removeEventListener('statechange', resolvePromise);

              if (_this3._nativeAudioContext.state === 'running') {
                resolve();
              } else {
                _this3.resume().then(resolve, reject);
              }
            };

            _this3._nativeAudioContext.addEventListener('statechange', resolvePromise);
          });
        }

        return this._nativeAudioContext.resume().catch(function (err) {
          // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.
          // Bug #56: Safari invokes the catch handler but without an error.
          if (err === undefined || err.code === 15) {
            throw createInvalidStateError();
          }

          throw err;
        });
      }
    }, {
      key: "suspend",
      value: function suspend() {
        return this._nativeAudioContext.suspend().catch(function (err) {
          // Bug #56: Safari invokes the catch handler but without an error.
          if (err === undefined) {
            throw createInvalidStateError();
          }

          throw err;
        });
      }
    }]);

    return MinimalAudioContext;
  }(minimalBaseAudioContextConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js ***!
  \******************************************************************************************************************/
/*! exports provided: createMinimalBaseAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMinimalBaseAudioContextConstructor", function() { return createMinimalBaseAudioContextConstructor; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var createMinimalBaseAudioContextConstructor = function createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) {
  return /*#__PURE__*/function (_eventTargetConstruct) {
    _inherits(MinimalBaseAudioContext, _eventTargetConstruct);

    var _super = _createSuper(MinimalBaseAudioContext);

    function MinimalBaseAudioContext(_nativeContext, numberOfChannels) {
      var _this;

      _classCallCheck(this, MinimalBaseAudioContext);

      _this = _super.call(this, _nativeContext);
      _this._nativeContext = _nativeContext;
      _globals__WEBPACK_IMPORTED_MODULE_0__["CONTEXT_STORE"].set(_assertThisInitialized(_this), _nativeContext);

      if (isNativeOfflineAudioContext(_nativeContext)) {
        unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());
      }

      _this._destination = new audioDestinationNodeConstructor(_assertThisInitialized(_this), numberOfChannels);
      _this._listener = createAudioListener(_assertThisInitialized(_this), _nativeContext);
      _this._onstatechange = null;
      return _this;
    }

    _createClass(MinimalBaseAudioContext, [{
      key: "currentTime",
      get: function get() {
        return this._nativeContext.currentTime;
      }
    }, {
      key: "destination",
      get: function get() {
        return this._destination;
      }
    }, {
      key: "listener",
      get: function get() {
        return this._listener;
      }
    }, {
      key: "onstatechange",
      get: function get() {
        return this._onstatechange;
      },
      set: function set(value) {
        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
        this._nativeContext.onstatechange = wrappedListener;
        var nativeOnStateChange = this._nativeContext.onstatechange;
        this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;
      }
    }, {
      key: "sampleRate",
      get: function get() {
        return this._nativeContext.sampleRate;
      }
    }, {
      key: "state",
      get: function get() {
        return this._nativeContext.state;
      }
    }]);

    return MinimalBaseAudioContext;
  }(eventTargetConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createMinimalOfflineAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMinimalOfflineAudioContextConstructor", function() { return createMinimalOfflineAudioContextConstructor; });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var DEFAULT_OPTIONS = {
  numberOfChannels: 1
};
var createMinimalOfflineAudioContextConstructor = function createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, _startRendering) {
  return /*#__PURE__*/function (_minimalBaseAudioCont) {
    _inherits(MinimalOfflineAudioContext, _minimalBaseAudioCont);

    var _super = _createSuper(MinimalOfflineAudioContext);

    function MinimalOfflineAudioContext(options) {
      var _this;

      _classCallCheck(this, MinimalOfflineAudioContext);

      var _DEFAULT_OPTIONS$opti = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options),
          length = _DEFAULT_OPTIONS$opti.length,
          numberOfChannels = _DEFAULT_OPTIONS$opti.numberOfChannels,
          sampleRate = _DEFAULT_OPTIONS$opti.sampleRate;

      var nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.

      if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__["testPromiseSupport"], function () {
        return Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__["testPromiseSupport"])(nativeOfflineAudioContext);
      })) {
        nativeOfflineAudioContext.addEventListener('statechange', function () {
          var i = 0;

          var delayStateChangeEvent = function delayStateChangeEvent(event) {
            if (_this._state === 'running') {
              if (i > 0) {
                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);
                event.stopImmediatePropagation();

                _this._waitForThePromiseToSettle(event);
              } else {
                i += 1;
              }
            }
          };

          return delayStateChangeEvent;
        }());
      }

      _this = _super.call(this, nativeOfflineAudioContext, numberOfChannels);
      _this._length = length;
      _this._nativeOfflineAudioContext = nativeOfflineAudioContext;
      _this._state = null;
      return _this;
    }

    _createClass(MinimalOfflineAudioContext, [{
      key: "length",
      get: function get() {
        // Bug #17: Safari does not yet expose the length.
        if (this._nativeOfflineAudioContext.length === undefined) {
          return this._length;
        }

        return this._nativeOfflineAudioContext.length;
      }
    }, {
      key: "state",
      get: function get() {
        return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
      }
    }, {
      key: "startRendering",
      value: function startRendering() {
        var _this2 = this;

        /*
         * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
         * the state of the nativeOfflineAudioContext might no transition to running immediately.
         */
        if (this._state === 'running') {
          return Promise.reject(createInvalidStateError());
        }

        this._state = 'running';
        return _startRendering(this.destination, this._nativeOfflineAudioContext).finally(function () {
          _this2._state = null;
          Object(_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__["deactivateAudioGraph"])(_this2);
        });
      }
    }, {
      key: "_waitForThePromiseToSettle",
      value: function _waitForThePromiseToSettle(event) {
        var _this3 = this;

        if (this._state === null) {
          this._nativeOfflineAudioContext.dispatchEvent(event);
        } else {
          setTimeout(function () {
            return _this3._waitForThePromiseToSettle(event);
          });
        }
      }
    }]);

    return MinimalOfflineAudioContext;
  }(minimalBaseAudioContextConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js ***!
  \***********************************************************************************************/
/*! exports provided: createMonitorConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createMonitorConnections", function() { return createMonitorConnections; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var createMonitorConnections = function createMonitorConnections(insertElementInSet, isNativeAudioNode) {
  return function (nativeAudioNode, whenConnected, whenDisconnected) {
    var connections = new Set();

    nativeAudioNode.connect = function (connect) {
      // tslint:disable-next-line:invalid-void
      return function (destination) {
        var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var wasDisconnected = connections.size === 0;

        if (isNativeAudioNode(destination)) {
          // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
          connect.call(nativeAudioNode, destination, output, input);
          insertElementInSet(connections, [destination, output, input], function (connection) {
            return connection[0] === destination && connection[1] === output && connection[2] === input;
          }, true);

          if (wasDisconnected) {
            whenConnected();
          }

          return destination;
        }

        connect.call(nativeAudioNode, destination, output);
        insertElementInSet(connections, [destination, output], function (connection) {
          return connection[0] === destination && connection[1] === output;
        }, true);

        if (wasDisconnected) {
          whenConnected();
        }

        return;
      };
    }(nativeAudioNode.connect);

    nativeAudioNode.disconnect = function (disconnect) {
      return function (destinationOrOutput, output, input) {
        var wasConnected = connections.size > 0;

        if (destinationOrOutput === undefined) {
          disconnect.apply(nativeAudioNode);
          connections.clear();
        } else if (typeof destinationOrOutput === 'number') {
          // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
          disconnect.call(nativeAudioNode, destinationOrOutput);

          var _iterator = _createForOfIteratorHelper(connections),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var connection = _step.value;

              if (connection[1] === destinationOrOutput) {
                connections.delete(connection);
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        } else {
          if (isNativeAudioNode(destinationOrOutput)) {
            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
            disconnect.call(nativeAudioNode, destinationOrOutput, output, input);
          } else {
            // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.
            disconnect.call(nativeAudioNode, destinationOrOutput, output);
          }

          var _iterator2 = _createForOfIteratorHelper(connections),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var _connection = _step2.value;

              if (_connection[0] === destinationOrOutput && (output === undefined || _connection[1] === output) && (input === undefined || _connection[2] === input)) {
                connections.delete(_connection);
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }

        var isDisconnected = connections.size === 0;

        if (wasConnected && isDisconnected) {
          whenDisconnected();
        }
      };
    }(nativeAudioNode.disconnect);

    return nativeAudioNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js ***!
  \********************************************************************************************************/
/*! exports provided: createNativeAnalyserNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAnalyserNodeFactory", function() { return createNativeAnalyserNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/test-analyser-node-get-float-time-domain-data-method-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js");
/* harmony import */ var _helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-analyser-node-get-float-time-domain-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js");




var createNativeAnalyserNodeFactory = function createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError) {
  return function (nativeContext, options) {
    var nativeAnalyserNode = nativeContext.createAnalyser(); // Bug #37: Firefox does not create an AnalyserNode with the default properties.

    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeAnalyserNode, options); // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.

    if (!(options.maxDecibels > options.minDecibels)) {
      throw createIndexSizeError();
    }

    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'fftSize');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'maxDecibels');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'minDecibels');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'smoothingTimeConstant'); // Bug #36: Safari does not support getFloatTimeDomainData() yet.

    if (!cacheTestResult(_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__["testAnalyserNodeGetFloatTimeDomainDataMethodSupport"], function () {
      return Object(_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__["testAnalyserNodeGetFloatTimeDomainDataMethodSupport"])(nativeAnalyserNode);
    })) {
      Object(_helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__["wrapAnalyserNodeGetFloatTimeDomainDataMethod"])(nativeAnalyserNode);
    }

    return nativeAnalyserNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js ***!
  \***********************************************************************************************************/
/*! exports provided: createNativeAudioBufferConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAudioBufferConstructor", function() { return createNativeAudioBufferConstructor; });
var createNativeAudioBufferConstructor = function createNativeAudioBufferConstructor(window) {
  if (window === null) {
    return null;
  }

  if (window.hasOwnProperty('AudioBuffer')) {
    return window.AudioBuffer;
  }

  return null;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeAudioBufferSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAudioBufferSourceNodeFactory", function() { return createNativeAudioBufferSourceNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");






var createNativeAudioBufferSourceNodeFactory = function createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) {
  return function (nativeContext, options) {
    var nativeAudioBufferSourceNode = nativeContext.createBufferSource();
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativeAudioBufferSourceNode, options);
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeAudioBufferSourceNode, options, 'playbackRate');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'buffer'); // Bug #149: Safari does not yet support the detune AudioParam.

    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'loop');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'loopEnd');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'loopStart'); // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.

    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, function () {
      return testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext);
    })) {
      Object(_helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__["wrapAudioBufferSourceNodeStartMethodConsecutiveCalls"])(nativeAudioBufferSourceNode);
    } // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.


    if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, function () {
      return testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext);
    })) {
      wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);
    } // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.


    if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, function () {
      return testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext);
    })) {
      wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);
    } // Bug #44: Safari does not throw a RangeError yet.


    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () {
      return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext);
    })) {
      Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__["wrapAudioScheduledSourceNodeStartMethodNegativeParameters"])(nativeAudioBufferSourceNode);
    } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.


    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, function () {
      return testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext);
    })) {
      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);
    } // Bug #44: Only Firefox does not throw a RangeError yet.


    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () {
      return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext);
    })) {
      Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__["wrapAudioScheduledSourceNodeStopMethodNegativeParameters"])(nativeAudioBufferSourceNode);
    } // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.


    addSilentConnection(nativeContext, nativeAudioBufferSourceNode);
    return nativeAudioBufferSourceNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js ***!
  \************************************************************************************************************/
/*! exports provided: createNativeAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAudioContextConstructor", function() { return createNativeAudioContextConstructor; });
var createNativeAudioContextConstructor = function createNativeAudioContextConstructor(window) {
  if (window === null) {
    return null;
  }

  if (window.hasOwnProperty('AudioContext')) {
    return window.AudioContext;
  }

  return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js ***!
  \*********************************************************************************************************/
/*! exports provided: createNativeAudioDestinationNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAudioDestinationNodeFactory", function() { return createNativeAudioDestinationNodeFactory; });
var createNativeAudioDestinationNodeFactory = function createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors) {
  return function (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) {
    var nativeAudioDestinationNode = nativeContext.destination; // Bug #132: Safari does not have the correct channelCount.

    if (nativeAudioDestinationNode.channelCount !== channelCount) {
      try {
        nativeAudioDestinationNode.channelCount = channelCount;
      } catch (_unused) {// Bug #169: Safari throws an error on each attempt to change the channelCount.
      }
    } // Bug #83: Safari does not have the correct channelCountMode.


    if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {
      nativeAudioDestinationNode.channelCountMode = 'explicit';
    } // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.


    if (nativeAudioDestinationNode.maxChannelCount === 0) {
      Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {
        value: channelCount
      });
    } // Bug #168: No browser does yet have an AudioDestinationNode with an output.


    var gainNode = createNativeGainNode(nativeContext, {
      channelCount: channelCount,
      channelCountMode: nativeAudioDestinationNode.channelCountMode,
      channelInterpretation: nativeAudioDestinationNode.channelInterpretation,
      gain: 1
    });
    overwriteAccessors(gainNode, 'channelCount', function (get) {
      return function () {
        return get.call(gainNode);
      };
    }, function (set) {
      return function (value) {
        set.call(gainNode, value);

        try {
          nativeAudioDestinationNode.channelCount = value;
        } catch (err) {
          // Bug #169: Safari throws an error on each attempt to change the channelCount.
          if (value > nativeAudioDestinationNode.maxChannelCount) {
            throw err;
          }
        }
      };
    });
    overwriteAccessors(gainNode, 'channelCountMode', function (get) {
      return function () {
        return get.call(gainNode);
      };
    }, function (set) {
      return function (value) {
        set.call(gainNode, value);
        nativeAudioDestinationNode.channelCountMode = value;
      };
    });
    overwriteAccessors(gainNode, 'channelInterpretation', function (get) {
      return function () {
        return get.call(gainNode);
      };
    }, function (set) {
      return function (value) {
        set.call(gainNode, value);
        nativeAudioDestinationNode.channelInterpretation = value;
      };
    });
    Object.defineProperty(gainNode, 'maxChannelCount', {
      get: function get() {
        return nativeAudioDestinationNode.maxChannelCount;
      }
    }); // @todo This should be disconnected when the context is closed.

    gainNode.connect(nativeAudioDestinationNode);
    return gainNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createNativeAudioWorkletNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAudioWorkletNodeConstructor", function() { return createNativeAudioWorkletNodeConstructor; });
var createNativeAudioWorkletNodeConstructor = function createNativeAudioWorkletNodeConstructor(window) {
  if (window === null) {
    return null;
  }

  return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js ***!
  \*************************************************************************************************************/
/*! exports provided: createNativeAudioWorkletNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAudioWorkletNodeFactory", function() { return createNativeAudioWorkletNodeFactory; });
/* harmony import */ var _helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-clonability-of-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }


var createNativeAudioWorkletNodeFactory = function createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) {
  return function (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) {
    if (nativeAudioWorkletNodeConstructor !== null) {
      try {
        var nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);
        var patchedEventListeners = new Map();
        var onprocessorerror = null;
        Object.defineProperties(nativeAudioWorkletNode, {
          /*
           * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some
           * browsers have no native implementation to achieve a consistent behavior.
           */
          channelCount: {
            get: function get() {
              return options.channelCount;
            },
            set: function set() {
              throw createInvalidStateError();
            }
          },
          channelCountMode: {
            get: function get() {
              return 'explicit';
            },
            set: function set() {
              throw createInvalidStateError();
            }
          },
          // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.
          onprocessorerror: {
            get: function get() {
              return onprocessorerror;
            },
            set: function set(value) {
              if (typeof onprocessorerror === 'function') {
                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);
              }

              onprocessorerror = typeof value === 'function' ? value : null;

              if (typeof onprocessorerror === 'function') {
                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);
              }
            }
          }
        });

        nativeAudioWorkletNode.addEventListener = function (addEventListener) {
          return function () {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            if (args[0] === 'processorerror') {
              var unpatchedEventListener = typeof args[1] === 'function' ? args[1] : _typeof(args[1]) === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;

              if (unpatchedEventListener !== null) {
                var patchedEventListener = patchedEventListeners.get(args[1]);

                if (patchedEventListener !== undefined) {
                  args[1] = patchedEventListener;
                } else {
                  args[1] = function (event) {
                    // Bug #178: Chrome, Edge and Opera do fire an event of type error.
                    if (event.type === 'error') {
                      Object.defineProperties(event, {
                        type: {
                          value: 'processorerror'
                        }
                      });
                      unpatchedEventListener(event);
                    } else {
                      unpatchedEventListener(new ErrorEvent(args[0], _objectSpread({}, event)));
                    }
                  };

                  patchedEventListeners.set(unpatchedEventListener, args[1]);
                }
              }
            } // Bug #178: Chrome, Edge and Opera do fire an event of type error.


            addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);
            return addEventListener.call.apply(addEventListener, [nativeAudioWorkletNode].concat(args));
          };
        }(nativeAudioWorkletNode.addEventListener);

        nativeAudioWorkletNode.removeEventListener = function (removeEventListener) {
          return function () {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            if (args[0] === 'processorerror') {
              var patchedEventListener = patchedEventListeners.get(args[1]);

              if (patchedEventListener !== undefined) {
                patchedEventListeners.delete(args[1]);
                args[1] = patchedEventListener;
              }
            } // Bug #178: Chrome, Edge and Opera do fire an event of type error.


            removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);
            return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);
          };
        }(nativeAudioWorkletNode.removeEventListener);
        /*
         * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but
         * has an output.
         */


        if (options.numberOfOutputs !== 0) {
          var nativeGainNode = createNativeGainNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0
          });
          nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);

          var whenConnected = function whenConnected() {
            return nativeGainNode.disconnect();
          };

          var whenDisconnected = function whenDisconnected() {
            return nativeGainNode.connect(nativeContext.destination);
          }; // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.


          return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);
        }

        return nativeAudioWorkletNode;
      } catch (err) {
        // Bug #60: Chrome, Edge & Opera throw an InvalidStateError instead of a NotSupportedError.
        if (err.code === 11) {
          throw createNotSupportedError();
        }

        throw err;
      }
    } // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.


    if (processorConstructor === undefined) {
      throw createNotSupportedError();
    }

    Object(_helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__["testClonabilityOfAudioWorkletNodeOptions"])(options);
    return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeAudioWorkletNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeAudioWorkletNodeFakerFactory", function() { return createNativeAudioWorkletNodeFakerFactory; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
/* harmony import */ var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/compute-buffer-size */ "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js");
/* harmony import */ var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/copy-from-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js");
/* harmony import */ var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/copy-to-channel */ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js");
/* harmony import */ var _helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/create-audio-worklet-processor */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js");
/* harmony import */ var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/create-nested-arrays */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js");
/* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../read-only-map */ "./node_modules/standardized-audio-context/build/es2019/read-only-map.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }








var createNativeAudioWorkletNodeFakerFactory = function createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) {
  return function (nativeContext, baseLatency, processorConstructor, options) {
    if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {
      throw createNotSupportedError();
    }

    var outputChannelCount = Array.isArray(options.outputChannelCount) ? options.outputChannelCount : Array.from(options.outputChannelCount); // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.

    if (outputChannelCount.some(function (channelCount) {
      return channelCount < 1;
    })) {
      throw createNotSupportedError();
    }

    if (outputChannelCount.length !== options.numberOfOutputs) {
      throw createIndexSizeError();
    } // Bug #61: This is not part of the standard but required for the faker to work.


    if (options.channelCountMode !== 'explicit') {
      throw createNotSupportedError();
    }

    var numberOfInputChannels = options.channelCount * options.numberOfInputs;
    var numberOfOutputChannels = outputChannelCount.reduce(function (sum, value) {
      return sum + value;
    }, 0);
    var numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length; // Bug #61: This is not part of the standard but required for the faker to work.

    if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {
      throw createNotSupportedError();
    }

    var messageChannel = new MessageChannel();
    var gainNodes = [];
    var inputChannelSplitterNodes = [];

    for (var i = 0; i < options.numberOfInputs; i += 1) {
      gainNodes.push(createNativeGainNode(nativeContext, {
        channelCount: options.channelCount,
        channelCountMode: options.channelCountMode,
        channelInterpretation: options.channelInterpretation,
        gain: 1
      }));
      inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {
        channelCount: options.channelCount,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        numberOfOutputs: options.channelCount
      }));
    }

    var constantSourceNodes = [];

    if (processorConstructor.parameterDescriptors !== undefined) {
      var _iterator = _createForOfIteratorHelper(processorConstructor.parameterDescriptors),
          _step;

      try {
        var _loop = function _loop() {
          var _ref = _step.value;
          var defaultValue = _ref.defaultValue;
          var maxValue = _ref.maxValue;
          var minValue = _ref.minValue;
          var name = _ref.name;
          var constantSourceNode = createNativeConstantSourceNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            offset: options.parameterData[name] !== undefined ? options.parameterData[name] : defaultValue === undefined ? 0 : defaultValue
          });
          Object.defineProperties(constantSourceNode.offset, {
            defaultValue: {
              get: function get() {
                return defaultValue === undefined ? 0 : defaultValue;
              }
            },
            maxValue: {
              get: function get() {
                return maxValue === undefined ? _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"] : maxValue;
              }
            },
            minValue: {
              get: function get() {
                return minValue === undefined ? _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"] : minValue;
              }
            }
          });
          constantSourceNodes.push(constantSourceNode);
        };

        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }

    var inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'speakers',
      numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
    });
    var bufferSize = Object(_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_1__["computeBufferSize"])(baseLatency, nativeContext.sampleRate);
    var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.
    Math.max(1, numberOfOutputChannels));
    var outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
      channelCount: Math.max(1, numberOfOutputChannels),
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      numberOfOutputs: Math.max(1, numberOfOutputChannels)
    });
    var outputChannelMergerNodes = [];

    for (var _i = 0; _i < options.numberOfOutputs; _i += 1) {
      outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'speakers',
        numberOfInputs: outputChannelCount[_i]
      }));
    }

    for (var _i2 = 0; _i2 < options.numberOfInputs; _i2 += 1) {
      gainNodes[_i2].connect(inputChannelSplitterNodes[_i2]);

      for (var j = 0; j < options.channelCount; j += 1) {
        inputChannelSplitterNodes[_i2].connect(inputChannelMergerNode, j, _i2 * options.channelCount + j);
      }
    }

    var parameterMap = new _read_only_map__WEBPACK_IMPORTED_MODULE_6__["ReadOnlyMap"](processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.map(function (_ref2, index) {
      var name = _ref2.name;
      var constantSourceNode = constantSourceNodes[index];
      constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
      constantSourceNode.start(0);
      return [name, constantSourceNode.offset];
    }));
    inputChannelMergerNode.connect(scriptProcessorNode);
    var channelInterpretation = options.channelInterpretation;
    var onprocessorerror = null; // Bug #87: Expose at least one output to make this node connectable.

    var outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;
    var nativeAudioWorkletNodeFaker = {
      get bufferSize() {
        return bufferSize;
      },

      get channelCount() {
        return options.channelCount;
      },

      set channelCount(_) {
        // Bug #61: This is not part of the standard but required for the faker to work.
        throw createInvalidStateError();
      },

      get channelCountMode() {
        return options.channelCountMode;
      },

      set channelCountMode(_) {
        // Bug #61: This is not part of the standard but required for the faker to work.
        throw createInvalidStateError();
      },

      get channelInterpretation() {
        return channelInterpretation;
      },

      set channelInterpretation(value) {
        var _iterator2 = _createForOfIteratorHelper(gainNodes),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var gainNode = _step2.value;
            gainNode.channelInterpretation = value;
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        channelInterpretation = value;
      },

      get context() {
        return scriptProcessorNode.context;
      },

      get inputs() {
        return gainNodes;
      },

      get numberOfInputs() {
        return options.numberOfInputs;
      },

      get numberOfOutputs() {
        return options.numberOfOutputs;
      },

      get onprocessorerror() {
        return onprocessorerror;
      },

      set onprocessorerror(value) {
        if (typeof onprocessorerror === 'function') {
          nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);
        }

        onprocessorerror = typeof value === 'function' ? value : null;

        if (typeof onprocessorerror === 'function') {
          nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);
        }
      },

      get parameters() {
        return parameterMap;
      },

      get port() {
        return messageChannel.port2;
      },

      addEventListener: function addEventListener() {
        return scriptProcessorNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      },
      connect: connectMultipleOutputs.bind(null, outputAudioNodes),
      disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),
      dispatchEvent: function dispatchEvent() {
        return scriptProcessorNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
      },
      removeEventListener: function removeEventListener() {
        return scriptProcessorNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      }
    };
    var patchedEventListeners = new Map();

    messageChannel.port1.addEventListener = function (addEventListener) {
      return function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        if (args[0] === 'message') {
          var unpatchedEventListener = typeof args[1] === 'function' ? args[1] : _typeof(args[1]) === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;

          if (unpatchedEventListener !== null) {
            var patchedEventListener = patchedEventListeners.get(args[1]);

            if (patchedEventListener !== undefined) {
              args[1] = patchedEventListener;
            } else {
              args[1] = function (event) {
                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, function () {
                  return unpatchedEventListener(event);
                });
              };

              patchedEventListeners.set(unpatchedEventListener, args[1]);
            }
          }
        }

        return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
      };
    }(messageChannel.port1.addEventListener);

    messageChannel.port1.removeEventListener = function (removeEventListener) {
      return function () {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        if (args[0] === 'message') {
          var patchedEventListener = patchedEventListeners.get(args[1]);

          if (patchedEventListener !== undefined) {
            patchedEventListeners.delete(args[1]);
            args[1] = patchedEventListener;
          }
        }

        return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
      };
    }(messageChannel.port1.removeEventListener);

    var onmessage = null;
    Object.defineProperty(messageChannel.port1, 'onmessage', {
      get: function get() {
        return onmessage;
      },
      set: function set(value) {
        if (typeof onmessage === 'function') {
          messageChannel.port1.removeEventListener('message', onmessage);
        }

        onmessage = typeof value === 'function' ? value : null;

        if (typeof onmessage === 'function') {
          messageChannel.port1.addEventListener('message', onmessage);
          messageChannel.port1.start();
        }
      }
    });
    processorConstructor.prototype.port = messageChannel.port1;
    var audioWorkletProcessor = null;
    var audioWorkletProcessorPromise = Object(_helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__["createAudioWorkletProcessor"])(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);
    audioWorkletProcessorPromise.then(function (dWrkltPrcssr) {
      return audioWorkletProcessor = dWrkltPrcssr;
    });
    var inputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__["createNestedArrays"])(options.numberOfInputs, options.channelCount);
    var outputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__["createNestedArrays"])(options.numberOfOutputs, outputChannelCount);
    var parameters = processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.reduce(function (prmtrs, _ref3) {
      var name = _ref3.name;
      return _objectSpread(_objectSpread({}, prmtrs), {}, _defineProperty({}, name, new Float32Array(128)));
    }, {});
    var isActive = true;

    var disconnectOutputsGraph = function disconnectOutputsGraph() {
      if (options.numberOfOutputs > 0) {
        scriptProcessorNode.disconnect(outputChannelSplitterNode);
      }

      for (var _i3 = 0, outputChannelSplitterNodeOutput = 0; _i3 < options.numberOfOutputs; _i3 += 1) {
        var outputChannelMergerNode = outputChannelMergerNodes[_i3];

        for (var _j = 0; _j < outputChannelCount[_i3]; _j += 1) {
          outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + _j, _j);
        }

        outputChannelSplitterNodeOutput += outputChannelCount[_i3];
      }
    };

    var activeInputIndexes = new Map(); // tslint:disable-next-line:deprecation

    scriptProcessorNode.onaudioprocess = function (_ref4) {
      var inputBuffer = _ref4.inputBuffer,
          outputBuffer = _ref4.outputBuffer;

      if (audioWorkletProcessor !== null) {
        (function () {
          var activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);

          var _loop2 = function _loop2(_i4) {
            for (var _j2 = 0; _j2 < options.numberOfInputs; _j2 += 1) {
              for (var k = 0; k < options.channelCount; k += 1) {
                Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__["copyFromChannel"])(inputBuffer, inputs[_j2], k, k, _i4);
              }
            }

            if (processorConstructor.parameterDescriptors !== undefined) {
              processorConstructor.parameterDescriptors.forEach(function (_ref5, index) {
                var name = _ref5.name;
                Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__["copyFromChannel"])(inputBuffer, parameters, name, numberOfInputChannels + index, _i4);
              });
            }

            for (var _j3 = 0; _j3 < options.numberOfInputs; _j3 += 1) {
              for (var _k = 0; _k < outputChannelCount[_j3]; _k += 1) {
                // The byteLength will be 0 when the ArrayBuffer was transferred.
                if (outputs[_j3][_k].byteLength === 0) {
                  outputs[_j3][_k] = new Float32Array(128);
                }
              }
            }

            try {
              var potentiallyEmptyInputs = inputs.map(function (input, index) {
                var activeInput = activeInputs[index];

                if (activeInput.size > 0) {
                  activeInputIndexes.set(index, bufferSize / 128);
                  return input;
                }

                var count = activeInputIndexes.get(index);

                if (count === undefined) {
                  return [];
                }

                if (input.every(function (channelData) {
                  return channelData.every(function (sample) {
                    return sample === 0;
                  });
                })) {
                  if (count === 1) {
                    activeInputIndexes.delete(index);
                  } else {
                    activeInputIndexes.set(index, count - 1);
                  }
                }

                return input;
              });
              var activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + _i4 / nativeContext.sampleRate, nativeContext.sampleRate, function () {
                return audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters);
              });
              isActive = activeSourceFlag;

              for (var _j4 = 0, outputChannelSplitterNodeOutput = 0; _j4 < options.numberOfOutputs; _j4 += 1) {
                for (var _k2 = 0; _k2 < outputChannelCount[_j4]; _k2 += 1) {
                  Object(_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_3__["copyToChannel"])(outputBuffer, outputs[_j4], _k2, outputChannelSplitterNodeOutput + _k2, _i4);
                }

                outputChannelSplitterNodeOutput += outputChannelCount[_j4];
              }
            } catch (error) {
              isActive = false;
              nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {
                colno: error.colno,
                filename: error.filename,
                lineno: error.lineno,
                message: error.message
              }));
            }

            if (!isActive) {
              for (var _j5 = 0; _j5 < options.numberOfInputs; _j5 += 1) {
                gainNodes[_j5].disconnect(inputChannelSplitterNodes[_j5]);

                for (var _k3 = 0; _k3 < options.channelCount; _k3 += 1) {
                  inputChannelSplitterNodes[_i4].disconnect(inputChannelMergerNode, _k3, _j5 * options.channelCount + _k3);
                }
              }

              if (processorConstructor.parameterDescriptors !== undefined) {
                var length = processorConstructor.parameterDescriptors.length;

                for (var _j6 = 0; _j6 < length; _j6 += 1) {
                  var constantSourceNode = constantSourceNodes[_j6];
                  constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + _j6);
                  constantSourceNode.stop();
                }
              }

              inputChannelMergerNode.disconnect(scriptProcessorNode);
              scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation

              if (isConnected) {
                disconnectOutputsGraph();
              } else {
                disconnectFakeGraph();
              }

              return "break";
            }
          };

          for (var _i4 = 0; _i4 < bufferSize; _i4 += 128) {
            var _ret = _loop2(_i4);

            if (_ret === "break") break;
          }
        })();
      }
    };

    var isConnected = false; // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.

    var nativeGainNode = createNativeGainNode(nativeContext, {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      gain: 0
    });

    var connectFakeGraph = function connectFakeGraph() {
      return scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);
    };

    var disconnectFakeGraph = function disconnectFakeGraph() {
      scriptProcessorNode.disconnect(nativeGainNode);
      nativeGainNode.disconnect();
    };

    var whenConnected = function whenConnected() {
      if (isActive) {
        disconnectFakeGraph();

        if (options.numberOfOutputs > 0) {
          scriptProcessorNode.connect(outputChannelSplitterNode);
        }

        for (var _i5 = 0, outputChannelSplitterNodeOutput = 0; _i5 < options.numberOfOutputs; _i5 += 1) {
          var outputChannelMergerNode = outputChannelMergerNodes[_i5];

          for (var _j7 = 0; _j7 < outputChannelCount[_i5]; _j7 += 1) {
            outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + _j7, _j7);
          }

          outputChannelSplitterNodeOutput += outputChannelCount[_i5];
        }
      }

      isConnected = true;
    };

    var whenDisconnected = function whenDisconnected() {
      if (isActive) {
        connectFakeGraph();
        disconnectOutputsGraph();
      }

      isConnected = false;
    };

    connectFakeGraph();
    return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js ***!
  \*****************************************************************************************************/
/*! exports provided: createNativeBiquadFilterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeBiquadFilterNode", function() { return createNativeBiquadFilterNode; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");



var createNativeBiquadFilterNode = function createNativeBiquadFilterNode(nativeContext, options) {
  var nativeBiquadFilterNode = nativeContext.createBiquadFilter();
  Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativeBiquadFilterNode, options);
  Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'Q');
  Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'detune');
  Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'frequency');
  Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'gain');
  Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeBiquadFilterNode, options, 'type');
  return nativeBiquadFilterNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js ***!
  \**************************************************************************************************************/
/*! exports provided: createNativeChannelMergerNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeChannelMergerNodeFactory", function() { return createNativeChannelMergerNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

var createNativeChannelMergerNodeFactory = function createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode) {
  return function (nativeContext, options) {
    var nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);
    /*
     * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.
     * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of
     * the webkitAudioContext is used as a workaround here.
     */

    if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {
      wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);
    }

    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeChannelMergerNode, options);
    return nativeChannelMergerNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js ***!
  \********************************************************************************************************/
/*! exports provided: createNativeChannelSplitterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeChannelSplitterNode", function() { return createNativeChannelSplitterNode; });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/wrap-channel-splitter-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js");


var createNativeChannelSplitterNode = function createNativeChannelSplitterNode(nativeContext, options) {
  var nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs); // Bug #96: Safari does not have the correct channelCount.
  // Bug #29: Safari does not have the correct channelCountMode.
  // Bug #31: Safari does not have the correct channelInterpretation.

  Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeChannelSplitterNode, options); // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge, Firefox & Opera partially support the spec yet.

  Object(_helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__["wrapChannelSplitterNode"])(nativeChannelSplitterNode);
  return nativeChannelSplitterNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createNativeConstantSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeConstantSourceNodeFactory", function() { return createNativeConstantSourceNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");




var createNativeConstantSourceNodeFactory = function createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) {
  return function (nativeContext, options) {
    // Bug #62: Safari does not support ConstantSourceNodes.
    if (nativeContext.createConstantSource === undefined) {
      return createNativeConstantSourceNodeFaker(nativeContext, options);
    }

    var nativeConstantSourceNode = nativeContext.createConstantSource();
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeConstantSourceNode, options);
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeConstantSourceNode, options, 'offset'); // Bug #44: Safari does not throw a RangeError yet.

    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () {
      return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext);
    })) {
      Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__["wrapAudioScheduledSourceNodeStartMethodNegativeParameters"])(nativeConstantSourceNode);
    } // Bug #44: Only Firefox does not throw a RangeError yet.


    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () {
      return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext);
    })) {
      Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__["wrapAudioScheduledSourceNodeStopMethodNegativeParameters"])(nativeConstantSourceNode);
    } // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.


    addSilentConnection(nativeContext, nativeConstantSourceNode);
    return nativeConstantSourceNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createNativeConstantSourceNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeConstantSourceNodeFakerFactory", function() { return createNativeConstantSourceNodeFakerFactory; });
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }


var createNativeConstantSourceNodeFakerFactory = function createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) {
  return function (nativeContext, _ref) {
    var offset = _ref.offset,
        audioNodeOptions = _objectWithoutProperties(_ref, ["offset"]);

    var audioBuffer = nativeContext.createBuffer(1, 2, 44100);
    var audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
      buffer: null,
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      loop: false,
      loopEnd: 0,
      loopStart: 0,
      playbackRate: 1
    });
    var gainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      gain: offset
    })); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().

    var channelData = audioBuffer.getChannelData(0); // Bug #95: Safari does not play or loop one sample buffers.

    channelData[0] = 1;
    channelData[1] = 1;
    audioBufferSourceNode.buffer = audioBuffer;
    audioBufferSourceNode.loop = true;
    var nativeConstantSourceNodeFaker = {
      get bufferSize() {
        return undefined;
      },

      get channelCount() {
        return gainNode.channelCount;
      },

      set channelCount(value) {
        gainNode.channelCount = value;
      },

      get channelCountMode() {
        return gainNode.channelCountMode;
      },

      set channelCountMode(value) {
        gainNode.channelCountMode = value;
      },

      get channelInterpretation() {
        return gainNode.channelInterpretation;
      },

      set channelInterpretation(value) {
        gainNode.channelInterpretation = value;
      },

      get context() {
        return gainNode.context;
      },

      get inputs() {
        return [];
      },

      get numberOfInputs() {
        return audioBufferSourceNode.numberOfInputs;
      },

      get numberOfOutputs() {
        return gainNode.numberOfOutputs;
      },

      get offset() {
        return gainNode.gain;
      },

      get onended() {
        return audioBufferSourceNode.onended;
      },

      set onended(value) {
        audioBufferSourceNode.onended = value;
      },

      addEventListener: function addEventListener() {
        return audioBufferSourceNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      },
      dispatchEvent: function dispatchEvent() {
        return audioBufferSourceNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
      },
      removeEventListener: function removeEventListener() {
        return audioBufferSourceNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      },
      start: function start() {
        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        audioBufferSourceNode.start.call(audioBufferSourceNode, when);
      },
      stop: function stop() {
        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        audioBufferSourceNode.stop.call(audioBufferSourceNode, when);
      }
    };

    var whenConnected = function whenConnected() {
      return audioBufferSourceNode.connect(gainNode);
    };

    var whenDisconnected = function whenDisconnected() {
      return audioBufferSourceNode.disconnect(gainNode);
    }; // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.


    addSilentConnection(nativeContext, audioBufferSourceNode);
    return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__["interceptConnections"])(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js ***!
  \*********************************************************************************************************/
/*! exports provided: createNativeConvolverNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeConvolverNodeFactory", function() { return createNativeConvolverNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");


var createNativeConvolverNodeFactory = function createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors) {
  return function (nativeContext, options) {
    var nativeConvolverNode = nativeContext.createConvolver();
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeConvolverNode, options); // The normalize property needs to be set before setting the buffer.

    if (options.disableNormalization === nativeConvolverNode.normalize) {
      nativeConvolverNode.normalize = !options.disableNormalization;
    }

    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeConvolverNode, options, 'buffer'); // Bug #113: Safari does allow to set the channelCount to a value larger than 2.

    if (options.channelCount > 2) {
      throw createNotSupportedError();
    }

    overwriteAccessors(nativeConvolverNode, 'channelCount', function (get) {
      return function () {
        return get.call(nativeConvolverNode);
      };
    }, function (set) {
      return function (value) {
        if (value > 2) {
          throw createNotSupportedError();
        }

        return set.call(nativeConvolverNode, value);
      };
    }); // Bug #114: Safari allows to set the channelCountMode to 'max'.

    if (options.channelCountMode === 'max') {
      throw createNotSupportedError();
    }

    overwriteAccessors(nativeConvolverNode, 'channelCountMode', function (get) {
      return function () {
        return get.call(nativeConvolverNode);
      };
    }, function (set) {
      return function (value) {
        if (value === 'max') {
          throw createNotSupportedError();
        }

        return set.call(nativeConvolverNode, value);
      };
    });
    return nativeConvolverNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js ***!
  \*********************************************************************************************/
/*! exports provided: createNativeDelayNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeDelayNode", function() { return createNativeDelayNode; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");


var createNativeDelayNode = function createNativeDelayNode(nativeContext, options) {
  var nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);
  Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeDelayNode, options);
  Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDelayNode, options, 'delayTime');
  return nativeDelayNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeDynamicsCompressorNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeDynamicsCompressorNodeFactory", function() { return createNativeDynamicsCompressorNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");


var createNativeDynamicsCompressorNodeFactory = function createNativeDynamicsCompressorNodeFactory(createNotSupportedError) {
  return function (nativeContext, options) {
    var nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeDynamicsCompressorNode, options); // Bug #108: Safari allows a channelCount of three and above.

    if (options.channelCount > 2) {
      throw createNotSupportedError();
    } // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.


    if (options.channelCountMode === 'max') {
      throw createNotSupportedError();
    }

    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'attack');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'knee');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'ratio');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'release');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'threshold');
    return nativeDynamicsCompressorNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js ***!
  \********************************************************************************************/
/*! exports provided: createNativeGainNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeGainNode", function() { return createNativeGainNode; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");


var createNativeGainNode = function createNativeGainNode(nativeContext, options) {
  var nativeGainNode = nativeContext.createGain();
  Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeGainNode, options);
  Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeGainNode, options, 'gain');
  return nativeGainNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js ***!
  \**********************************************************************************************************/
/*! exports provided: createNativeIIRFilterNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeIIRFilterNodeFactory", function() { return createNativeIIRFilterNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

var createNativeIIRFilterNodeFactory = function createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker) {
  return function (nativeContext, baseLatency, options) {
    // Bug #9: Safari does not support IIRFilterNodes.
    if (nativeContext.createIIRFilter === undefined) {
      return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);
    } // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.


    var nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeIIRFilterNode, options);
    return nativeIIRFilterNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js ***!
  \****************************************************************************************************************/
/*! exports provided: createNativeIIRFilterNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeIIRFilterNodeFakerFactory", function() { return createNativeIIRFilterNodeFakerFactory; });
/* harmony import */ var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/compute-buffer-size */ "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js");
/* harmony import */ var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/filter-buffer */ "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js");
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");




function divide(a, b) {
  var denominator = b[0] * b[0] + b[1] * b[1];
  return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];
}

function multiply(a, b) {
  return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];
}

function evaluatePolynomial(coefficient, z) {
  var result = [0, 0];

  for (var i = coefficient.length - 1; i >= 0; i -= 1) {
    result = multiply(result, z);
    result[0] += coefficient[i];
  }

  return result;
}

var createNativeIIRFilterNodeFakerFactory = function createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) {
  return function (nativeContext, baseLatency, _ref) {
    var channelCount = _ref.channelCount,
        channelCountMode = _ref.channelCountMode,
        channelInterpretation = _ref.channelInterpretation,
        feedback = _ref.feedback,
        feedforward = _ref.feedforward;
    var bufferSize = Object(_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__["computeBufferSize"])(baseLatency, nativeContext.sampleRate);
    var convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);
    var convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);
    var feedbackLength = convertedFeedback.length;
    var feedforwardLength = convertedFeedforward.length;
    var minLength = Math.min(feedbackLength, feedforwardLength);

    if (feedbackLength === 0 || feedbackLength > 20) {
      throw createNotSupportedError();
    }

    if (convertedFeedback[0] === 0) {
      throw createInvalidStateError();
    }

    if (feedforwardLength === 0 || feedforwardLength > 20) {
      throw createNotSupportedError();
    }

    if (convertedFeedforward[0] === 0) {
      throw createInvalidStateError();
    }

    if (convertedFeedback[0] !== 1) {
      for (var i = 0; i < feedforwardLength; i += 1) {
        convertedFeedforward[i] /= convertedFeedback[0];
      }

      for (var _i = 1; _i < feedbackLength; _i += 1) {
        convertedFeedback[_i] /= convertedFeedback[0];
      }
    }

    var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);
    scriptProcessorNode.channelCount = channelCount;
    scriptProcessorNode.channelCountMode = channelCountMode;
    scriptProcessorNode.channelInterpretation = channelInterpretation;
    var bufferLength = 32;
    var bufferIndexes = [];
    var xBuffers = [];
    var yBuffers = [];

    for (var _i2 = 0; _i2 < channelCount; _i2 += 1) {
      bufferIndexes.push(0);
      var xBuffer = new Float32Array(bufferLength);
      var yBuffer = new Float32Array(bufferLength);
      xBuffer.fill(0);
      yBuffer.fill(0);
      xBuffers.push(xBuffer);
      yBuffers.push(yBuffer);
    } // tslint:disable-next-line:deprecation


    scriptProcessorNode.onaudioprocess = function (event) {
      var inputBuffer = event.inputBuffer;
      var outputBuffer = event.outputBuffer;
      var numberOfChannels = inputBuffer.numberOfChannels;

      for (var _i3 = 0; _i3 < numberOfChannels; _i3 += 1) {
        var input = inputBuffer.getChannelData(_i3);
        var output = outputBuffer.getChannelData(_i3);
        bufferIndexes[_i3] = Object(_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__["filterBuffer"])(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[_i3], yBuffers[_i3], bufferIndexes[_i3], bufferLength, input, output);
      }
    };

    var nyquist = nativeContext.sampleRate / 2;
    var nativeIIRFilterNodeFaker = {
      get bufferSize() {
        return bufferSize;
      },

      get channelCount() {
        return scriptProcessorNode.channelCount;
      },

      set channelCount(value) {
        scriptProcessorNode.channelCount = value;
      },

      get channelCountMode() {
        return scriptProcessorNode.channelCountMode;
      },

      set channelCountMode(value) {
        scriptProcessorNode.channelCountMode = value;
      },

      get channelInterpretation() {
        return scriptProcessorNode.channelInterpretation;
      },

      set channelInterpretation(value) {
        scriptProcessorNode.channelInterpretation = value;
      },

      get context() {
        return scriptProcessorNode.context;
      },

      get inputs() {
        return [scriptProcessorNode];
      },

      get numberOfInputs() {
        return scriptProcessorNode.numberOfInputs;
      },

      get numberOfOutputs() {
        return scriptProcessorNode.numberOfOutputs;
      },

      addEventListener: function addEventListener() {
        // @todo Dissallow adding an audioprocess listener.
        return scriptProcessorNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      },
      dispatchEvent: function dispatchEvent() {
        return scriptProcessorNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
      },
      getFrequencyResponse: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
        if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
          throw createInvalidAccessError();
        }

        var length = frequencyHz.length;

        for (var _i4 = 0; _i4 < length; _i4 += 1) {
          var omega = -Math.PI * (frequencyHz[_i4] / nyquist);
          var z = [Math.cos(omega), Math.sin(omega)];
          var numerator = evaluatePolynomial(convertedFeedforward, z);
          var denominator = evaluatePolynomial(convertedFeedback, z);
          var response = divide(numerator, denominator);
          magResponse[_i4] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);
          phaseResponse[_i4] = Math.atan2(response[1], response[0]);
        }
      },
      removeEventListener: function removeEventListener() {
        return scriptProcessorNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      }
    };
    return Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__["interceptConnections"])(nativeIIRFilterNodeFaker, scriptProcessorNode);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js ***!
  \******************************************************************************************************************/
/*! exports provided: createNativeMediaElementAudioSourceNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeMediaElementAudioSourceNode", function() { return createNativeMediaElementAudioSourceNode; });
var createNativeMediaElementAudioSourceNode = function createNativeMediaElementAudioSourceNode(nativeAudioContext, options) {
  return nativeAudioContext.createMediaElementSource(options.mediaElement);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js ***!
  \**********************************************************************************************************************/
/*! exports provided: createNativeMediaStreamAudioDestinationNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeMediaStreamAudioDestinationNode", function() { return createNativeMediaStreamAudioDestinationNode; });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

var createNativeMediaStreamAudioDestinationNode = function createNativeMediaStreamAudioDestinationNode(nativeAudioContext, options) {
  var nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();
  Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeMediaStreamAudioDestinationNode, options); // Bug #174: Safari does expose a wrong numberOfOutputs.

  if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {
    Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', {
      get: function get() {
        return 0;
      }
    });
  }

  return nativeMediaStreamAudioDestinationNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createNativeMediaStreamAudioSourceNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeMediaStreamAudioSourceNode", function() { return createNativeMediaStreamAudioSourceNode; });
var createNativeMediaStreamAudioSourceNode = function createNativeMediaStreamAudioSourceNode(nativeAudioContext, _ref) {
  var mediaStream = _ref.mediaStream;
  var audioStreamTracks = mediaStream.getAudioTracks();
  /*
   * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.
   * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.
   */

  audioStreamTracks.sort(function (a, b) {
    return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;
  });
  var filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);
  var nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));
  /*
   * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs
   * to be overwritten as it would otherwise expose the reconstructed version.
   */

  Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', {
    value: mediaStream
  });
  return nativeMediaStreamAudioSourceNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js ***!
  \*******************************************************************************************************************************/
/*! exports provided: createNativeMediaStreamTrackAudioSourceNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeMediaStreamTrackAudioSourceNodeFactory", function() { return createNativeMediaStreamTrackAudioSourceNodeFactory; });
var createNativeMediaStreamTrackAudioSourceNodeFactory = function createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext) {
  return function (nativeAudioContext, _ref) {
    var mediaStreamTrack = _ref.mediaStreamTrack;

    // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.
    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {
      return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);
    }

    var mediaStream = new MediaStream([mediaStreamTrack]);
    var nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream); // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.

    if (mediaStreamTrack.kind !== 'audio') {
      throw createInvalidStateError();
    } // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.


    if (isNativeOfflineAudioContext(nativeAudioContext)) {
      throw new TypeError();
    }

    return nativeMediaStreamAudioSourceNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js ***!
  \********************************************************************************************************************/
/*! exports provided: createNativeOfflineAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeOfflineAudioContextConstructor", function() { return createNativeOfflineAudioContextConstructor; });
var createNativeOfflineAudioContextConstructor = function createNativeOfflineAudioContextConstructor(window) {
  if (window === null) {
    return null;
  }

  if (window.hasOwnProperty('OfflineAudioContext')) {
    return window.OfflineAudioContext;
  }

  return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js ***!
  \**********************************************************************************************************/
/*! exports provided: createNativeOscillatorNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeOscillatorNodeFactory", function() { return createNativeOscillatorNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");





var createNativeOscillatorNodeFactory = function createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) {
  return function (nativeContext, options) {
    var nativeOscillatorNode = nativeContext.createOscillator();
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativeOscillatorNode, options);
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeOscillatorNode, options, 'detune');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeOscillatorNode, options, 'frequency');

    if (options.periodicWave !== undefined) {
      nativeOscillatorNode.setPeriodicWave(options.periodicWave);
    } else {
      Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeOscillatorNode, options, 'type');
    } // Bug #44: Only Chrome, Edge & Opera throw a RangeError yet.


    if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () {
      return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext);
    })) {
      Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__["wrapAudioScheduledSourceNodeStartMethodNegativeParameters"])(nativeOscillatorNode);
    } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.


    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, function () {
      return testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext);
    })) {
      wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);
    } // Bug #44: Only Firefox does not throw a RangeError yet.


    if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () {
      return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext);
    })) {
      Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__["wrapAudioScheduledSourceNodeStopMethodNegativeParameters"])(nativeOscillatorNode);
    } // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.


    addSilentConnection(nativeContext, nativeOscillatorNode);
    return nativeOscillatorNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js ***!
  \******************************************************************************************************/
/*! exports provided: createNativePannerNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativePannerNodeFactory", function() { return createNativePannerNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");



var createNativePannerNodeFactory = function createNativePannerNodeFactory(createNativePannerNodeFaker) {
  return function (nativeContext, options) {
    var nativePannerNode = nativeContext.createPanner(); // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.

    if (nativePannerNode.orientationX === undefined) {
      return createNativePannerNodeFaker(nativeContext, options);
    }

    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativePannerNode, options);
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'orientationX');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'orientationY');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'orientationZ');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'positionX');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'positionY');
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'positionZ');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'coneInnerAngle');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'coneOuterAngle');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'coneOuterGain');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'distanceModel');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'maxDistance');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'panningModel');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'refDistance');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'rolloffFactor');
    return nativePannerNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js ***!
  \************************************************************************************************************/
/*! exports provided: createNativePannerNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativePannerNodeFakerFactory", function() { return createNativePannerNodeFakerFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



var createNativePannerNodeFakerFactory = function createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) {
  return function (nativeContext, _ref) {
    var coneInnerAngle = _ref.coneInnerAngle,
        coneOuterAngle = _ref.coneOuterAngle,
        coneOuterGain = _ref.coneOuterGain,
        distanceModel = _ref.distanceModel,
        maxDistance = _ref.maxDistance,
        orientationX = _ref.orientationX,
        orientationY = _ref.orientationY,
        orientationZ = _ref.orientationZ,
        panningModel = _ref.panningModel,
        positionX = _ref.positionX,
        positionY = _ref.positionY,
        positionZ = _ref.positionZ,
        refDistance = _ref.refDistance,
        rolloffFactor = _ref.rolloffFactor,
        audioNodeOptions = _objectWithoutProperties(_ref, ["coneInnerAngle", "coneOuterAngle", "coneOuterGain", "distanceModel", "maxDistance", "orientationX", "orientationY", "orientationZ", "panningModel", "positionX", "positionY", "positionZ", "refDistance", "rolloffFactor"]);

    var pannerNode = nativeContext.createPanner(); // Bug #125: Safari does not throw an error yet.

    if (audioNodeOptions.channelCount > 2) {
      throw createNotSupportedError();
    } // Bug #126: Safari does not throw an error yet.


    if (audioNodeOptions.channelCountMode === 'max') {
      throw createNotSupportedError();
    }

    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(pannerNode, audioNodeOptions);
    var SINGLE_CHANNEL_OPTIONS = {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete'
    };
    var channelMergerNode = createNativeChannelMergerNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      channelInterpretation: 'speakers',
      numberOfInputs: 6
    }));
    var inputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      gain: 1
    }));
    var orientationXGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 1
    }));
    var orientationYGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    }));
    var orientationZGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    }));
    var positionXGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    }));
    var positionYGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    }));
    var positionZGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    }));
    var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);
    var waveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      curve: new Float32Array([1, 1]),
      oversample: 'none'
    }));
    var lastOrientation = [orientationX, orientationY, orientationZ];
    var lastPosition = [positionX, positionY, positionZ]; // tslint:disable-next-line:deprecation

    scriptProcessorNode.onaudioprocess = function (_ref2) {
      var inputBuffer = _ref2.inputBuffer;
      var orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0]];

      if (orientation.some(function (value, index) {
        return value !== lastOrientation[index];
      })) {
        pannerNode.setOrientation.apply(pannerNode, orientation); // tslint:disable-line:deprecation

        lastOrientation = orientation;
      }

      var positon = [inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];

      if (positon.some(function (value, index) {
        return value !== lastPosition[index];
      })) {
        pannerNode.setPosition.apply(pannerNode, positon); // tslint:disable-line:deprecation

        lastPosition = positon;
      }
    };

    Object.defineProperty(orientationYGainNode.gain, 'defaultValue', {
      get: function get() {
        return 0;
      }
    });
    Object.defineProperty(orientationZGainNode.gain, 'defaultValue', {
      get: function get() {
        return 0;
      }
    });
    Object.defineProperty(positionXGainNode.gain, 'defaultValue', {
      get: function get() {
        return 0;
      }
    });
    Object.defineProperty(positionYGainNode.gain, 'defaultValue', {
      get: function get() {
        return 0;
      }
    });
    Object.defineProperty(positionZGainNode.gain, 'defaultValue', {
      get: function get() {
        return 0;
      }
    });
    var nativePannerNodeFaker = {
      get bufferSize() {
        return undefined;
      },

      get channelCount() {
        return pannerNode.channelCount;
      },

      set channelCount(value) {
        // Bug #125: Safari does not throw an error yet.
        if (value > 2) {
          throw createNotSupportedError();
        }

        inputGainNode.channelCount = value;
        pannerNode.channelCount = value;
      },

      get channelCountMode() {
        return pannerNode.channelCountMode;
      },

      set channelCountMode(value) {
        // Bug #126: Safari does not throw an error yet.
        if (value === 'max') {
          throw createNotSupportedError();
        }

        inputGainNode.channelCountMode = value;
        pannerNode.channelCountMode = value;
      },

      get channelInterpretation() {
        return pannerNode.channelInterpretation;
      },

      set channelInterpretation(value) {
        inputGainNode.channelInterpretation = value;
        pannerNode.channelInterpretation = value;
      },

      get coneInnerAngle() {
        return pannerNode.coneInnerAngle;
      },

      set coneInnerAngle(value) {
        pannerNode.coneInnerAngle = value;
      },

      get coneOuterAngle() {
        return pannerNode.coneOuterAngle;
      },

      set coneOuterAngle(value) {
        pannerNode.coneOuterAngle = value;
      },

      get coneOuterGain() {
        return pannerNode.coneOuterGain;
      },

      set coneOuterGain(value) {
        // Bug #127: Safari does not throw an InvalidStateError yet.
        if (value < 0 || value > 1) {
          throw createInvalidStateError();
        }

        pannerNode.coneOuterGain = value;
      },

      get context() {
        return pannerNode.context;
      },

      get distanceModel() {
        return pannerNode.distanceModel;
      },

      set distanceModel(value) {
        pannerNode.distanceModel = value;
      },

      get inputs() {
        return [inputGainNode];
      },

      get maxDistance() {
        return pannerNode.maxDistance;
      },

      set maxDistance(value) {
        // Bug #128: Safari does not throw an error yet.
        if (value < 0) {
          throw new RangeError();
        }

        pannerNode.maxDistance = value;
      },

      get numberOfInputs() {
        return pannerNode.numberOfInputs;
      },

      get numberOfOutputs() {
        return pannerNode.numberOfOutputs;
      },

      get orientationX() {
        return orientationXGainNode.gain;
      },

      get orientationY() {
        return orientationYGainNode.gain;
      },

      get orientationZ() {
        return orientationZGainNode.gain;
      },

      get panningModel() {
        return pannerNode.panningModel;
      },

      set panningModel(value) {
        pannerNode.panningModel = value;
      },

      get positionX() {
        return positionXGainNode.gain;
      },

      get positionY() {
        return positionYGainNode.gain;
      },

      get positionZ() {
        return positionZGainNode.gain;
      },

      get refDistance() {
        return pannerNode.refDistance;
      },

      set refDistance(value) {
        // Bug #129: Safari does not throw an error yet.
        if (value < 0) {
          throw new RangeError();
        }

        pannerNode.refDistance = value;
      },

      get rolloffFactor() {
        return pannerNode.rolloffFactor;
      },

      set rolloffFactor(value) {
        // Bug #130: Safari does not throw an error yet.
        if (value < 0) {
          throw new RangeError();
        }

        pannerNode.rolloffFactor = value;
      },

      addEventListener: function addEventListener() {
        return inputGainNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      },
      dispatchEvent: function dispatchEvent() {
        return inputGainNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
      },
      removeEventListener: function removeEventListener() {
        return inputGainNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      }
    };

    if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {
      nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;
    }

    if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {
      nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;
    }

    if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {
      nativePannerNodeFaker.coneOuterGain = coneOuterGain;
    }

    if (distanceModel !== nativePannerNodeFaker.distanceModel) {
      nativePannerNodeFaker.distanceModel = distanceModel;
    }

    if (maxDistance !== nativePannerNodeFaker.maxDistance) {
      nativePannerNodeFaker.maxDistance = maxDistance;
    }

    if (orientationX !== nativePannerNodeFaker.orientationX.value) {
      nativePannerNodeFaker.orientationX.value = orientationX;
    }

    if (orientationY !== nativePannerNodeFaker.orientationY.value) {
      nativePannerNodeFaker.orientationY.value = orientationY;
    }

    if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {
      nativePannerNodeFaker.orientationZ.value = orientationZ;
    }

    if (panningModel !== nativePannerNodeFaker.panningModel) {
      nativePannerNodeFaker.panningModel = panningModel;
    }

    if (positionX !== nativePannerNodeFaker.positionX.value) {
      nativePannerNodeFaker.positionX.value = positionX;
    }

    if (positionY !== nativePannerNodeFaker.positionY.value) {
      nativePannerNodeFaker.positionY.value = positionY;
    }

    if (positionZ !== nativePannerNodeFaker.positionZ.value) {
      nativePannerNodeFaker.positionZ.value = positionZ;
    }

    if (refDistance !== nativePannerNodeFaker.refDistance) {
      nativePannerNodeFaker.refDistance = refDistance;
    }

    if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {
      nativePannerNodeFaker.rolloffFactor = rolloffFactor;
    }

    if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {
      pannerNode.setOrientation.apply(pannerNode, _toConsumableArray(lastOrientation)); // tslint:disable-line:deprecation
    }

    if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {
      pannerNode.setPosition.apply(pannerNode, _toConsumableArray(lastPosition)); // tslint:disable-line:deprecation
    }

    var whenConnected = function whenConnected() {
      inputGainNode.connect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.

      connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
      waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);
      waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);
      waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);
      waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);
      waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);
      waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);
      channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);
    };

    var whenDisconnected = function whenDisconnected() {
      inputGainNode.disconnect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.

      disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
      waveShaperNode.disconnect(orientationXGainNode);
      orientationXGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(orientationYGainNode);
      orientationYGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(orientationZGainNode);
      orientationZGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(positionXGainNode);
      positionXGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(positionYGainNode);
      positionYGainNode.disconnect(channelMergerNode);
      waveShaperNode.disconnect(positionZGainNode);
      positionZGainNode.disconnect(channelMergerNode);
      channelMergerNode.disconnect(scriptProcessorNode);
      scriptProcessorNode.disconnect(nativeContext.destination);
    };

    return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__["interceptConnections"])(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js ***!
  \********************************************************************************************************/
/*! exports provided: createNativePeriodicWaveFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativePeriodicWaveFactory", function() { return createNativePeriodicWaveFactory; });
var createNativePeriodicWaveFactory = function createNativePeriodicWaveFactory(createIndexSizeError) {
  return function (nativeContext, _ref) {
    var disableNormalization = _ref.disableNormalization,
        imag = _ref.imag,
        real = _ref.real;
    // Bug #180: Safari does not allow to use ordinary arrays.
    var convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);
    var convertedReal = real instanceof Float32Array ? real : new Float32Array(real);
    var nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, {
      disableNormalization: disableNormalization
    }); // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.

    if (Array.from(imag).length < 2) {
      throw createIndexSizeError();
    }

    return nativePeriodicWave;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js ***!
  \********************************************************************************************************/
/*! exports provided: createNativeScriptProcessorNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeScriptProcessorNode", function() { return createNativeScriptProcessorNode; });
var createNativeScriptProcessorNode = function createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) {
  return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js ***!
  \*************************************************************************************************************/
/*! exports provided: createNativeStereoPannerNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeStereoPannerNodeFactory", function() { return createNativeStereoPannerNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-audio-param-value */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");


var createNativeStereoPannerNodeFactory = function createNativeStereoPannerNodeFactory(createNativeStereoPannerNodeFaker, createNotSupportedError) {
  return function (nativeContext, options) {
    var channelCountMode = options.channelCountMode;
    /*
     * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
     * which supports it and therefore it can't be supported at all.
     */

    if (channelCountMode === 'clamped-max') {
      throw createNotSupportedError();
    } // Bug #105: Safari does not support the StereoPannerNode.


    if (nativeContext.createStereoPanner === undefined) {
      return createNativeStereoPannerNodeFaker(nativeContext, options);
    }

    var nativeStereoPannerNode = nativeContext.createStereoPanner();
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeStereoPannerNode, options);
    Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeStereoPannerNode, options, 'pan');
    /*
     * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
     * which supports it and therefore it can't be supported at all.
     */

    Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {
      get: function get() {
        return channelCountMode;
      },
      set: function set(value) {
        if (value !== channelCountMode) {
          throw createNotSupportedError();
        }
      }
    });
    return nativeStereoPannerNode;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createNativeStereoPannerNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeStereoPannerNodeFakerFactory", function() { return createNativeStereoPannerNodeFakerFactory; });
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var createNativeStereoPannerNodeFakerFactory = function createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) {
  // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.
  var CURVE_SIZE = 16385;
  var DC_CURVE = new Float32Array([1, 1]);
  var HALF_PI = Math.PI / 2;
  var SINGLE_CHANNEL_OPTIONS = {
    channelCount: 1,
    channelCountMode: 'explicit',
    channelInterpretation: 'discrete'
  };

  var SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
    oversample: 'none'
  });

  var buildInternalGraphForMono = function buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode) {
    var leftWaveShaperCurve = new Float32Array(CURVE_SIZE);
    var rightWaveShaperCurve = new Float32Array(CURVE_SIZE);

    for (var i = 0; i < CURVE_SIZE; i += 1) {
      var x = i / (CURVE_SIZE - 1) * HALF_PI;
      leftWaveShaperCurve[i] = Math.cos(x);
      rightWaveShaperCurve[i] = Math.sin(x);
    }

    var leftGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: leftWaveShaperCurve
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var panWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: DC_CURVE
    }));
    var rightGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: rightWaveShaperCurve
    }));
    return {
      connectGraph: function connectGraph() {
        inputGainNode.connect(leftGainNode);
        inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        inputGainNode.connect(rightGainNode);
        panWaveShaperNode.connect(panGainNode);
        panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);
        panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);
        leftWaveShaperNode.connect(leftGainNode.gain);
        rightWaveShaperNode.connect(rightGainNode.gain);
        leftGainNode.connect(channelMergerNode, 0, 0);
        rightGainNode.connect(channelMergerNode, 0, 1);
      },
      disconnectGraph: function disconnectGraph() {
        inputGainNode.disconnect(leftGainNode);
        inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        inputGainNode.disconnect(rightGainNode);
        panWaveShaperNode.disconnect(panGainNode);
        panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);
        panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);
        leftWaveShaperNode.disconnect(leftGainNode.gain);
        rightWaveShaperNode.disconnect(rightGainNode.gain);
        leftGainNode.disconnect(channelMergerNode, 0, 0);
        rightGainNode.disconnect(channelMergerNode, 0, 1);
      }
    };
  };

  var buildInternalGraphForStereo = function buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode) {
    var leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    var leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    var rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    var rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
    var centerIndex = Math.floor(CURVE_SIZE / 2);

    for (var i = 0; i < CURVE_SIZE; i += 1) {
      if (i > centerIndex) {
        var x = (i - centerIndex) / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;
        leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
        leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
        rightInputForLeftOutputWaveShaperCurve[i] = 0;
        rightInputForRightOutputWaveShaperCurve[i] = 1;
      } else {
        var _x = i / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;

        leftInputForLeftOutputWaveShaperCurve[i] = 1;
        leftInputForRightOutputWaveShaperCurve[i] = 0;
        rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(_x);
        rightInputForRightOutputWaveShaperCurve[i] = Math.sin(_x);
      }
    }

    var channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
      channelCount: 2,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      numberOfOutputs: 2
    });
    var leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: leftInputForLeftOutputWaveShaperCurve
    }));
    var leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: leftInputForRightOutputWaveShaperCurve
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var panWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: DC_CURVE
    }));
    var rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: rightInputForLeftOutputWaveShaperCurve
    }));
    var rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
      gain: 0
    })); // Bug #119: Safari does not fully support the WaveShaperNode.

    var rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
      curve: rightInputForRightOutputWaveShaperCurve
    }));
    return {
      connectGraph: function connectGraph() {
        inputGainNode.connect(channelSplitterNode);
        inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);
        channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);
        channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);
        channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);
        panWaveShaperNode.connect(panGainNode);
        panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);
        panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);
        leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);
        leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);
        rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);
        rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);
        leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
        rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
        leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
        rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
      },
      disconnectGraph: function disconnectGraph() {
        inputGainNode.disconnect(channelSplitterNode);
        inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);
        channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);
        channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);
        channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);
        channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);
        panWaveShaperNode.disconnect(panGainNode);
        panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined ? leftInputForLeftOutputWaveShaperNode : leftInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined ? leftInputForRightOutputWaveShaperNode : leftInputForRightOutputWaveShaperNode.inputs[0]);
        panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined ? rightInputForLeftOutputWaveShaperNode : rightInputForLeftOutputWaveShaperNode.inputs[0]);
        panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined ? rightInputForRightOutputWaveShaperNode : rightInputForRightOutputWaveShaperNode.inputs[0]);
        leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);
        leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);
        rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);
        rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);
        leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
        rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
        leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
        rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
      }
    };
  };

  var buildInternalGraph = function buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) {
    if (channelCount === 1) {
      return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);
    }

    if (channelCount === 2) {
      return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);
    }

    throw createNotSupportedError();
  };

  return function (nativeContext, _ref) {
    var channelCount = _ref.channelCount,
        channelCountMode = _ref.channelCountMode,
        pan = _ref.pan,
        audioNodeOptions = _objectWithoutProperties(_ref, ["channelCount", "channelCountMode", "pan"]);

    if (channelCountMode === 'max') {
      throw createNotSupportedError();
    }

    var channelMergerNode = createNativeChannelMergerNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      channelCount: 1,
      channelCountMode: channelCountMode,
      numberOfInputs: 2
    }));
    var inputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      channelCount: channelCount,
      channelCountMode: channelCountMode,
      gain: 1
    }));
    var panGainNode = createNativeGainNode(nativeContext, {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      gain: pan
    });

    var _buildInternalGraph = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode),
        connectGraph = _buildInternalGraph.connectGraph,
        disconnectGraph = _buildInternalGraph.disconnectGraph;

    Object.defineProperty(panGainNode.gain, 'defaultValue', {
      get: function get() {
        return 0;
      }
    });
    Object.defineProperty(panGainNode.gain, 'maxValue', {
      get: function get() {
        return 1;
      }
    });
    Object.defineProperty(panGainNode.gain, 'minValue', {
      get: function get() {
        return -1;
      }
    });
    var nativeStereoPannerNodeFakerFactory = {
      get bufferSize() {
        return undefined;
      },

      get channelCount() {
        return inputGainNode.channelCount;
      },

      set channelCount(value) {
        if (inputGainNode.channelCount !== value) {
          if (isConnected) {
            disconnectGraph();
          }

          var _buildInternalGraph2 = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode);

          connectGraph = _buildInternalGraph2.connectGraph;
          disconnectGraph = _buildInternalGraph2.disconnectGraph;

          if (isConnected) {
            connectGraph();
          }
        }

        inputGainNode.channelCount = value;
      },

      get channelCountMode() {
        return inputGainNode.channelCountMode;
      },

      set channelCountMode(value) {
        if (value === 'clamped-max' || value === 'max') {
          throw createNotSupportedError();
        }

        inputGainNode.channelCountMode = value;
      },

      get channelInterpretation() {
        return inputGainNode.channelInterpretation;
      },

      set channelInterpretation(value) {
        inputGainNode.channelInterpretation = value;
      },

      get context() {
        return inputGainNode.context;
      },

      get inputs() {
        return [inputGainNode];
      },

      get numberOfInputs() {
        return inputGainNode.numberOfInputs;
      },

      get numberOfOutputs() {
        return inputGainNode.numberOfOutputs;
      },

      get pan() {
        return panGainNode.gain;
      },

      addEventListener: function addEventListener() {
        return inputGainNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      },
      dispatchEvent: function dispatchEvent() {
        return inputGainNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
      },
      removeEventListener: function removeEventListener() {
        return inputGainNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      }
    };
    var isConnected = false;

    var whenConnected = function whenConnected() {
      connectGraph();
      isConnected = true;
    };

    var whenDisconnected = function whenDisconnected() {
      disconnectGraph();
      isConnected = false;
    };

    return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__["interceptConnections"])(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js ***!
  \***********************************************************************************************************/
/*! exports provided: createNativeWaveShaperNodeFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeWaveShaperNodeFactory", function() { return createNativeWaveShaperNodeFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");


var createNativeWaveShaperNodeFactory = function createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) {
  return function (nativeContext, options) {
    var nativeWaveShaperNode = nativeContext.createWaveShaper();
    /*
     * Bug #119: Safari does not correctly map the values.
     * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of
     * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround
     * isn't necessary anymore since v14.0.2 of Safari.
     */

    if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext' && nativeContext.createGain().gain.automationRate === undefined) {
      return createNativeWaveShaperNodeFaker(nativeContext, options);
    }

    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeWaveShaperNode, options);
    var curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve); // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.

    if (curve !== null && curve.length < 2) {
      throw createInvalidStateError();
    } // Only values of type Float32Array can be assigned to the curve property.


    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeWaveShaperNode, {
      curve: curve
    }, 'curve');
    Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeWaveShaperNode, options, 'oversample');
    var disconnectNativeAudioBufferSourceNode = null;
    var isConnected = false;
    overwriteAccessors(nativeWaveShaperNode, 'curve', function (get) {
      return function () {
        return get.call(nativeWaveShaperNode);
      };
    }, function (set) {
      return function (value) {
        set.call(nativeWaveShaperNode, value);

        if (isConnected) {
          if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {
            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
          } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {
            disconnectNativeAudioBufferSourceNode();
            disconnectNativeAudioBufferSourceNode = null;
          }
        }

        return value;
      };
    });

    var whenConnected = function whenConnected() {
      isConnected = true;

      if (isDCCurve(nativeWaveShaperNode.curve)) {
        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
      }
    };

    var whenDisconnected = function whenDisconnected() {
      isConnected = false;

      if (disconnectNativeAudioBufferSourceNode !== null) {
        disconnectNativeAudioBufferSourceNode();
        disconnectNativeAudioBufferSourceNode = null;
      }
    };

    return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createNativeWaveShaperNodeFakerFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeWaveShaperNodeFakerFactory", function() { return createNativeWaveShaperNodeFakerFactory; });
/* harmony import */ var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/assign-native-audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
/* harmony import */ var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



var createNativeWaveShaperNodeFakerFactory = function createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) {
  return function (nativeContext, _ref) {
    var curve = _ref.curve,
        oversample = _ref.oversample,
        audioNodeOptions = _objectWithoutProperties(_ref, ["curve", "oversample"]);

    var negativeWaveShaperNode = nativeContext.createWaveShaper();
    var positiveWaveShaperNode = nativeContext.createWaveShaper();
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(negativeWaveShaperNode, audioNodeOptions);
    Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(positiveWaveShaperNode, audioNodeOptions);
    var inputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      gain: 1
    }));
    var invertGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      gain: -1
    }));
    var outputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      gain: 1
    }));
    var revertGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
      gain: -1
    }));
    var disconnectNativeAudioBufferSourceNode = null;
    var isConnected = false;
    var unmodifiedCurve = null;
    var nativeWaveShaperNodeFaker = {
      get bufferSize() {
        return undefined;
      },

      get channelCount() {
        return negativeWaveShaperNode.channelCount;
      },

      set channelCount(value) {
        inputGainNode.channelCount = value;
        invertGainNode.channelCount = value;
        negativeWaveShaperNode.channelCount = value;
        outputGainNode.channelCount = value;
        positiveWaveShaperNode.channelCount = value;
        revertGainNode.channelCount = value;
      },

      get channelCountMode() {
        return negativeWaveShaperNode.channelCountMode;
      },

      set channelCountMode(value) {
        inputGainNode.channelCountMode = value;
        invertGainNode.channelCountMode = value;
        negativeWaveShaperNode.channelCountMode = value;
        outputGainNode.channelCountMode = value;
        positiveWaveShaperNode.channelCountMode = value;
        revertGainNode.channelCountMode = value;
      },

      get channelInterpretation() {
        return negativeWaveShaperNode.channelInterpretation;
      },

      set channelInterpretation(value) {
        inputGainNode.channelInterpretation = value;
        invertGainNode.channelInterpretation = value;
        negativeWaveShaperNode.channelInterpretation = value;
        outputGainNode.channelInterpretation = value;
        positiveWaveShaperNode.channelInterpretation = value;
        revertGainNode.channelInterpretation = value;
      },

      get context() {
        return negativeWaveShaperNode.context;
      },

      get curve() {
        return unmodifiedCurve;
      },

      set curve(value) {
        // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
        if (value !== null && value.length < 2) {
          throw createInvalidStateError();
        }

        if (value === null) {
          negativeWaveShaperNode.curve = value;
          positiveWaveShaperNode.curve = value;
        } else {
          var curveLength = value.length;
          var negativeCurve = new Float32Array(curveLength + 2 - curveLength % 2);
          var positiveCurve = new Float32Array(curveLength + 2 - curveLength % 2);
          negativeCurve[0] = value[0];
          positiveCurve[0] = -value[curveLength - 1];
          var length = Math.ceil((curveLength + 1) / 2);
          var centerIndex = (curveLength + 1) / 2 - 1;

          for (var i = 1; i < length; i += 1) {
            var theoreticIndex = i / length * centerIndex;
            var lowerIndex = Math.floor(theoreticIndex);
            var upperIndex = Math.ceil(theoreticIndex);
            negativeCurve[i] = lowerIndex === upperIndex ? value[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * value[upperIndex];
            positiveCurve[i] = lowerIndex === upperIndex ? -value[curveLength - 1 - lowerIndex] : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) - (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];
          }

          negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;
          negativeWaveShaperNode.curve = negativeCurve;
          positiveWaveShaperNode.curve = positiveCurve;
        }

        unmodifiedCurve = value;

        if (isConnected) {
          if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {
            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
          } else if (disconnectNativeAudioBufferSourceNode !== null) {
            disconnectNativeAudioBufferSourceNode();
            disconnectNativeAudioBufferSourceNode = null;
          }
        }
      },

      get inputs() {
        return [inputGainNode];
      },

      get numberOfInputs() {
        return negativeWaveShaperNode.numberOfInputs;
      },

      get numberOfOutputs() {
        return negativeWaveShaperNode.numberOfOutputs;
      },

      get oversample() {
        return negativeWaveShaperNode.oversample;
      },

      set oversample(value) {
        negativeWaveShaperNode.oversample = value;
        positiveWaveShaperNode.oversample = value;
      },

      addEventListener: function addEventListener() {
        return inputGainNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      },
      dispatchEvent: function dispatchEvent() {
        return inputGainNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
      },
      removeEventListener: function removeEventListener() {
        return inputGainNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
      }
    };

    if (curve !== null) {
      // Only values of type Float32Array can be assigned to the curve property.
      nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);
    }

    if (oversample !== nativeWaveShaperNodeFaker.oversample) {
      nativeWaveShaperNodeFaker.oversample = oversample;
    }

    var whenConnected = function whenConnected() {
      inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);
      inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);
      isConnected = true;

      if (isDCCurve(unmodifiedCurve)) {
        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
      }
    };

    var whenDisconnected = function whenDisconnected() {
      inputGainNode.disconnect(negativeWaveShaperNode);
      negativeWaveShaperNode.disconnect(outputGainNode);
      inputGainNode.disconnect(invertGainNode);
      invertGainNode.disconnect(positiveWaveShaperNode);
      positiveWaveShaperNode.disconnect(revertGainNode);
      revertGainNode.disconnect(outputGainNode);
      isConnected = false;

      if (disconnectNativeAudioBufferSourceNode !== null) {
        disconnectNativeAudioBufferSourceNode();
        disconnectNativeAudioBufferSourceNode = null;
      }
    };

    return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__["interceptConnections"])(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js ***!
  \***********************************************************************************************/
/*! exports provided: createNotSupportedError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNotSupportedError", function() { return createNotSupportedError; });
var createNotSupportedError = function createNotSupportedError() {
  return new DOMException('', 'NotSupportedError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js ***!
  \*************************************************************************************************************/
/*! exports provided: createOfflineAudioContextConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOfflineAudioContextConstructor", function() { return createOfflineAudioContextConstructor; });
/* harmony import */ var _helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/deactivate-audio-graph */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js");
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var DEFAULT_OPTIONS = {
  numberOfChannels: 1
};
var createOfflineAudioContextConstructor = function createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, _startRendering) {
  return /*#__PURE__*/function (_baseAudioContextCons) {
    _inherits(OfflineAudioContext, _baseAudioContextCons);

    var _super = _createSuper(OfflineAudioContext);

    function OfflineAudioContext(a, b, c) {
      var _this;

      _classCallCheck(this, OfflineAudioContext);

      var options;

      if (typeof a === 'number' && b !== undefined && c !== undefined) {
        options = {
          length: b,
          numberOfChannels: a,
          sampleRate: c
        };
      } else if (_typeof(a) === 'object') {
        options = a;
      } else {
        throw new Error('The given parameters are not valid.');
      }

      var _DEFAULT_OPTIONS$opti = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options),
          length = _DEFAULT_OPTIONS$opti.length,
          numberOfChannels = _DEFAULT_OPTIONS$opti.numberOfChannels,
          sampleRate = _DEFAULT_OPTIONS$opti.sampleRate;

      var nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.

      if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__["testPromiseSupport"], function () {
        return Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_1__["testPromiseSupport"])(nativeOfflineAudioContext);
      })) {
        nativeOfflineAudioContext.addEventListener('statechange', function () {
          var i = 0;

          var delayStateChangeEvent = function delayStateChangeEvent(event) {
            if (_this._state === 'running') {
              if (i > 0) {
                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);
                event.stopImmediatePropagation();

                _this._waitForThePromiseToSettle(event);
              } else {
                i += 1;
              }
            }
          };

          return delayStateChangeEvent;
        }());
      }

      _this = _super.call(this, nativeOfflineAudioContext, numberOfChannels);
      _this._length = length;
      _this._nativeOfflineAudioContext = nativeOfflineAudioContext;
      _this._state = null;
      return _this;
    }

    _createClass(OfflineAudioContext, [{
      key: "length",
      get: function get() {
        // Bug #17: Safari does not yet expose the length.
        if (this._nativeOfflineAudioContext.length === undefined) {
          return this._length;
        }

        return this._nativeOfflineAudioContext.length;
      }
    }, {
      key: "state",
      get: function get() {
        return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
      }
    }, {
      key: "startRendering",
      value: function startRendering() {
        var _this2 = this;

        /*
         * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
         * the state of the nativeOfflineAudioContext might no transition to running immediately.
         */
        if (this._state === 'running') {
          return Promise.reject(createInvalidStateError());
        }

        this._state = 'running';
        return _startRendering(this.destination, this._nativeOfflineAudioContext).finally(function () {
          _this2._state = null;
          Object(_helpers_deactivate_audio_graph__WEBPACK_IMPORTED_MODULE_0__["deactivateAudioGraph"])(_this2);
        });
      }
    }, {
      key: "_waitForThePromiseToSettle",
      value: function _waitForThePromiseToSettle(event) {
        var _this3 = this;

        if (this._state === null) {
          this._nativeOfflineAudioContext.dispatchEvent(event);
        } else {
          setTimeout(function () {
            return _this3._waitForThePromiseToSettle(event);
          });
        }
      }
    }]);

    return OfflineAudioContext;
  }(baseAudioContextConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js ***!
  \*******************************************************************************************************/
/*! exports provided: createOscillatorNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOscillatorNodeConstructor", function() { return createOscillatorNodeConstructor; });
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/set-internal-state-to-active */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
/* harmony import */ var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  detune: 0,
  frequency: 440,
  periodicWave: undefined,
  type: 'sine'
};
var createOscillatorNodeConstructor = function createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(OscillatorNode, _audioNodeConstructor);

    var _super = _createSuper(OscillatorNode);

    function OscillatorNode(context, options) {
      var _this;

      _classCallCheck(this, OscillatorNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;
      var nyquist = context.sampleRate / 2;
      _this = _super.call(this, context, false, nativeOscillatorNode, oscillatorNodeRenderer); // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.

      _this._detune = createAudioParam(_assertThisInitialized(_this), isOffline, nativeOscillatorNode.detune, 153600, -153600); // Bug #76: Safari does not export the correct values for maxValue and minValue.

      _this._frequency = createAudioParam(_assertThisInitialized(_this), isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);
      _this._nativeOscillatorNode = nativeOscillatorNode;
      _this._onended = null;
      _this._oscillatorNodeRenderer = oscillatorNodeRenderer;

      if (_this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {
        _this._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;
      }

      return _this;
    }

    _createClass(OscillatorNode, [{
      key: "detune",
      get: function get() {
        return this._detune;
      }
    }, {
      key: "frequency",
      get: function get() {
        return this._frequency;
      }
    }, {
      key: "onended",
      get: function get() {
        return this._onended;
      },
      set: function set(value) {
        var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
        this._nativeOscillatorNode.onended = wrappedListener;
        var nativeOnEnded = this._nativeOscillatorNode.onended;
        this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
      }
    }, {
      key: "type",
      get: function get() {
        return this._nativeOscillatorNode.type;
      },
      set: function set(value) {
        this._nativeOscillatorNode.type = value;

        if (this._oscillatorNodeRenderer !== null) {
          this._oscillatorNodeRenderer.periodicWave = null;
        }
      }
    }, {
      key: "setPeriodicWave",
      value: function setPeriodicWave(periodicWave) {
        this._nativeOscillatorNode.setPeriodicWave(periodicWave);

        if (this._oscillatorNodeRenderer !== null) {
          this._oscillatorNodeRenderer.periodicWave = periodicWave;
        }
      }
    }, {
      key: "start",
      value: function start() {
        var _this2 = this;

        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

        this._nativeOscillatorNode.start(when);

        if (this._oscillatorNodeRenderer !== null) {
          this._oscillatorNodeRenderer.start = when;
        }

        if (this.context.state !== 'closed') {
          Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__["setInternalStateToActive"])(this);

          var resetInternalStateToPassive = function resetInternalStateToPassive() {
            _this2._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);

            if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_0__["isActiveAudioNode"])(_this2)) {
              Object(_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__["setInternalStateToPassive"])(_this2);
            }
          };

          this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);
        }
      }
    }, {
      key: "stop",
      value: function stop() {
        var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

        this._nativeOscillatorNode.stop(when);

        if (this._oscillatorNodeRenderer !== null) {
          this._oscillatorNodeRenderer.stop = when;
        }
      }
    }]);

    return OscillatorNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! exports provided: createOscillatorNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOscillatorNodeRendererFactory", function() { return createOscillatorNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createOscillatorNodeRendererFactory = function createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeOscillatorNodes = new WeakMap();
    var periodicWave = null;
    var start = null;
    var stop = null;

    var createOscillatorNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeOscillatorNode, nativeOscillatorNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeOscillatorNode = getNativeAudioNode(proxy); // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeOscillatorNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeOscillatorNode, nativeOfflineAudioContext);

                if (!nativeOscillatorNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeOscillatorNode.channelCount,
                    channelCountMode: nativeOscillatorNode.channelCountMode,
                    channelInterpretation: nativeOscillatorNode.channelInterpretation,
                    detune: nativeOscillatorNode.detune.value,
                    frequency: nativeOscillatorNode.frequency.value,
                    periodicWave: periodicWave === null ? undefined : periodicWave,
                    type: nativeOscillatorNode.type
                  };
                  nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);

                  if (start !== null) {
                    nativeOscillatorNode.start(start);
                  }

                  if (stop !== null) {
                    nativeOscillatorNode.stop(stop);
                  }
                }

                renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);

                if (nativeOscillatorNodeIsOwnedByContext) {
                  _context.next = 11;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);

              case 7:
                _context.next = 9;
                return renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);

              case 9:
                _context.next = 15;
                break;

              case 11:
                _context.next = 13;
                return connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);

              case 13:
                _context.next = 15;
                return connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);

              case 15:
                _context.next = 17;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);

              case 17:
                return _context.abrupt("return", nativeOscillatorNode);

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createOscillatorNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      set periodicWave(value) {
        periodicWave = value;
      },

      set start(value) {
        start = value;
      },

      set stop(value) {
        stop = value;
      },

      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);

        if (renderedNativeOscillatorNode !== undefined) {
          return Promise.resolve(renderedNativeOscillatorNode);
        }

        return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js ***!
  \***************************************************************************************************/
/*! exports provided: createPannerNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPannerNodeConstructor", function() { return createPannerNodeConstructor; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ "./node_modules/standardized-audio-context/build/es2019/constants.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'clamped-max',
  channelInterpretation: 'speakers',
  coneInnerAngle: 360,
  coneOuterAngle: 360,
  coneOuterGain: 0,
  distanceModel: 'inverse',
  maxDistance: 10000,
  orientationX: 1,
  orientationY: 0,
  orientationZ: 0,
  panningModel: 'equalpower',
  positionX: 0,
  positionY: 0,
  positionZ: 0,
  refDistance: 1,
  rolloffFactor: 1
};
var createPannerNodeConstructor = function createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(PannerNode, _audioNodeConstructor);

    var _super = _createSuper(PannerNode);

    function PannerNode(context, options) {
      var _this;

      _classCallCheck(this, PannerNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;
      _this = _super.call(this, context, false, nativePannerNode, pannerNodeRenderer);
      _this._nativePannerNode = nativePannerNode; // Bug #74: Safari does not export the correct values for maxValue and minValue.

      _this._orientationX = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.orientationX, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      _this._orientationY = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.orientationY, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      _this._orientationZ = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.orientationZ, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      _this._positionX = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.positionX, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      _this._positionY = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.positionY, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
      _this._positionZ = createAudioParam(_assertThisInitialized(_this), isOffline, nativePannerNode.positionZ, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]); // @todo Determine a meaningful tail-time instead of just using one second.

      setAudioNodeTailTime(_assertThisInitialized(_this), 1);
      return _this;
    }

    _createClass(PannerNode, [{
      key: "coneInnerAngle",
      get: function get() {
        return this._nativePannerNode.coneInnerAngle;
      },
      set: function set(value) {
        this._nativePannerNode.coneInnerAngle = value;
      }
    }, {
      key: "coneOuterAngle",
      get: function get() {
        return this._nativePannerNode.coneOuterAngle;
      },
      set: function set(value) {
        this._nativePannerNode.coneOuterAngle = value;
      }
    }, {
      key: "coneOuterGain",
      get: function get() {
        return this._nativePannerNode.coneOuterGain;
      },
      set: function set(value) {
        this._nativePannerNode.coneOuterGain = value;
      }
    }, {
      key: "distanceModel",
      get: function get() {
        return this._nativePannerNode.distanceModel;
      },
      set: function set(value) {
        this._nativePannerNode.distanceModel = value;
      }
    }, {
      key: "maxDistance",
      get: function get() {
        return this._nativePannerNode.maxDistance;
      },
      set: function set(value) {
        this._nativePannerNode.maxDistance = value;
      }
    }, {
      key: "orientationX",
      get: function get() {
        return this._orientationX;
      }
    }, {
      key: "orientationY",
      get: function get() {
        return this._orientationY;
      }
    }, {
      key: "orientationZ",
      get: function get() {
        return this._orientationZ;
      }
    }, {
      key: "panningModel",
      get: function get() {
        return this._nativePannerNode.panningModel;
      },
      set: function set(value) {
        this._nativePannerNode.panningModel = value;
      }
    }, {
      key: "positionX",
      get: function get() {
        return this._positionX;
      }
    }, {
      key: "positionY",
      get: function get() {
        return this._positionY;
      }
    }, {
      key: "positionZ",
      get: function get() {
        return this._positionZ;
      }
    }, {
      key: "refDistance",
      get: function get() {
        return this._nativePannerNode.refDistance;
      },
      set: function set(value) {
        this._nativePannerNode.refDistance = value;
      }
    }, {
      key: "rolloffFactor",
      get: function get() {
        return this._nativePannerNode.rolloffFactor;
      },
      set: function set(value) {
        this._nativePannerNode.rolloffFactor = value;
      }
    }]);

    return PannerNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js ***!
  \********************************************************************************************************/
/*! exports provided: createPannerNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPannerNodeRendererFactory", function() { return createPannerNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



var createPannerNodeRendererFactory = function createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) {
  return function () {
    var renderedNativeAudioNodes = new WeakMap();
    var renderedBufferPromise = null;

    var createAudioNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(proxy, nativeOfflineAudioContext, trace) {
        var nativeGainNode, nativePannerNode, commonAudioNodeOptions, commonNativePannerNodeOptions, nativePannerNodeIsOwnedByContext, options, _ret;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                nativeGainNode = null;
                nativePannerNode = getNativeAudioNode(proxy);
                commonAudioNodeOptions = {
                  channelCount: nativePannerNode.channelCount,
                  channelCountMode: nativePannerNode.channelCountMode,
                  channelInterpretation: nativePannerNode.channelInterpretation
                };
                commonNativePannerNodeOptions = _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                  coneInnerAngle: nativePannerNode.coneInnerAngle,
                  coneOuterAngle: nativePannerNode.coneOuterAngle,
                  coneOuterGain: nativePannerNode.coneOuterGain,
                  distanceModel: nativePannerNode.distanceModel,
                  maxDistance: nativePannerNode.maxDistance,
                  panningModel: nativePannerNode.panningModel,
                  refDistance: nativePannerNode.refDistance,
                  rolloffFactor: nativePannerNode.rolloffFactor
                }); // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativePannerNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__["isOwnedByContext"])(nativePannerNode, nativeOfflineAudioContext); // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.

                if ('bufferSize' in nativePannerNode) {
                  nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                    gain: 1
                  }));
                } else if (!nativePannerNodeIsOwnedByContext) {
                  options = _objectSpread(_objectSpread({}, commonNativePannerNodeOptions), {}, {
                    orientationX: nativePannerNode.orientationX.value,
                    orientationY: nativePannerNode.orientationY.value,
                    orientationZ: nativePannerNode.orientationZ.value,
                    positionX: nativePannerNode.positionX.value,
                    positionY: nativePannerNode.positionY.value,
                    positionZ: nativePannerNode.positionZ.value
                  });
                  nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);
                }

                renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);

                if (!(nativeGainNode !== null)) {
                  _context4.next = 12;
                  break;
                }

                return _context4.delegateYield( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
                  var partialOfflineAudioContext, nativeChannelMergerNode, renderedBuffer, inputGainNode, channelDatas, i, lastOrientation, lastPosition, gateGainNode, partialPannerNode, _i, orientation, positon, currentTime;

                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          if (!(renderedBufferPromise === null)) {
                            _context3.next = 7;
                            break;
                          }

                          if (!(nativeOfflineAudioContextConstructor === null)) {
                            _context3.next = 3;
                            break;
                          }

                          throw new Error('Missing the native OfflineAudioContext constructor.');

                        case 3:
                          partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, // Bug #17: Safari does not yet expose the length.
                          proxy.context.length, nativeOfflineAudioContext.sampleRate);
                          nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                            channelCount: 1,
                            channelCountMode: 'explicit',
                            channelInterpretation: 'speakers',
                            numberOfInputs: 6
                          });
                          nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);
                          renderedBufferPromise = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
                            var nativeConstantSourceNodes, i;
                            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
                              while (1) {
                                switch (_context2.prev = _context2.next) {
                                  case 0:
                                    _context2.next = 2;
                                    return Promise.all([proxy.orientationX, proxy.orientationY, proxy.orientationZ, proxy.positionX, proxy.positionY, proxy.positionZ].map( /*#__PURE__*/function () {
                                      var _ref3 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(audioParam, index) {
                                        var nativeConstantSourceNode;
                                        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
                                          while (1) {
                                            switch (_context.prev = _context.next) {
                                              case 0:
                                                nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                                  channelCount: 1,
                                                  channelCountMode: 'explicit',
                                                  channelInterpretation: 'discrete',
                                                  offset: index === 0 ? 1 : 0
                                                });
                                                _context.next = 3;
                                                return renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);

                                              case 3:
                                                return _context.abrupt("return", nativeConstantSourceNode);

                                              case 4:
                                              case "end":
                                                return _context.stop();
                                            }
                                          }
                                        }, _callee);
                                      }));

                                      return function (_x4, _x5) {
                                        return _ref3.apply(this, arguments);
                                      };
                                    }()));

                                  case 2:
                                    nativeConstantSourceNodes = _context2.sent;

                                    for (i = 0; i < 6; i += 1) {
                                      nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);
                                      nativeConstantSourceNodes[i].start(0);
                                    }

                                    return _context2.abrupt("return", renderNativeOfflineAudioContext(partialOfflineAudioContext));

                                  case 5:
                                  case "end":
                                    return _context2.stop();
                                }
                              }
                            }, _callee2);
                          }))();

                        case 7:
                          _context3.next = 9;
                          return renderedBufferPromise;

                        case 9:
                          renderedBuffer = _context3.sent;
                          inputGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                            gain: 1
                          }));
                          _context3.next = 13;
                          return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);

                        case 13:
                          channelDatas = [];

                          for (i = 0; i < renderedBuffer.numberOfChannels; i += 1) {
                            channelDatas.push(renderedBuffer.getChannelData(i));
                          }

                          lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];
                          lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];
                          gateGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                            gain: 1
                          }));
                          partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonNativePannerNodeOptions), {}, {
                            orientationX: lastOrientation[0],
                            orientationY: lastOrientation[1],
                            orientationZ: lastOrientation[2],
                            positionX: lastPosition[0],
                            positionY: lastPosition[1],
                            positionZ: lastPosition[2]
                          }));
                          inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                          partialPannerNode.connect(nativeGainNode);

                          for (_i = 128; _i < renderedBuffer.length; _i += 128) {
                            orientation = [channelDatas[0][_i], channelDatas[1][_i], channelDatas[2][_i]];
                            positon = [channelDatas[3][_i], channelDatas[4][_i], channelDatas[5][_i]];

                            if (orientation.some(function (value, index) {
                              return value !== lastOrientation[index];
                            }) || positon.some(function (value, index) {
                              return value !== lastPosition[index];
                            })) {
                              lastOrientation = orientation;
                              lastPosition = positon;
                              currentTime = _i / nativeOfflineAudioContext.sampleRate;
                              gateGainNode.gain.setValueAtTime(0, currentTime);
                              gateGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                                gain: 0
                              }));
                              partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonNativePannerNodeOptions), {}, {
                                orientationX: lastOrientation[0],
                                orientationY: lastOrientation[1],
                                orientationZ: lastOrientation[2],
                                positionX: lastPosition[0],
                                positionY: lastPosition[1],
                                positionZ: lastPosition[2]
                              }));
                              gateGainNode.gain.setValueAtTime(1, currentTime);
                              inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                              partialPannerNode.connect(nativeGainNode);
                            }
                          }

                          return _context3.abrupt("return", {
                            v: nativeGainNode
                          });

                        case 23:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3);
                })(), "t0", 9);

              case 9:
                _ret = _context4.t0;

                if (!(_typeof(_ret) === "object")) {
                  _context4.next = 12;
                  break;
                }

                return _context4.abrupt("return", _ret.v);

              case 12:
                if (nativePannerNodeIsOwnedByContext) {
                  _context4.next = 27;
                  break;
                }

                _context4.next = 15;
                return renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);

              case 15:
                _context4.next = 17;
                return renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);

              case 17:
                _context4.next = 19;
                return renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);

              case 19:
                _context4.next = 21;
                return renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);

              case 21:
                _context4.next = 23;
                return renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);

              case 23:
                _context4.next = 25;
                return renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);

              case 25:
                _context4.next = 39;
                break;

              case 27:
                _context4.next = 29;
                return connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);

              case 29:
                _context4.next = 31;
                return connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);

              case 31:
                _context4.next = 33;
                return connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);

              case 33:
                _context4.next = 35;
                return connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);

              case 35:
                _context4.next = 37;
                return connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);

              case 37:
                _context4.next = 39;
                return connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);

              case 39:
                if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__["isNativeAudioNodeFaker"])(nativePannerNode)) {
                  _context4.next = 44;
                  break;
                }

                _context4.next = 42;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);

              case 42:
                _context4.next = 46;
                break;

              case 44:
                _context4.next = 46;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);

              case 46:
                return _context4.abrupt("return", nativePannerNode);

              case 47:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      return function createAudioNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

        if (renderedNativeGainNodeOrNativePannerNode !== undefined) {
          return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);
        }

        return createAudioNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js ***!
  \*****************************************************************************************************/
/*! exports provided: createPeriodicWaveConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createPeriodicWaveConstructor", function() { return createPeriodicWaveConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var DEFAULT_OPTIONS = {
  disableNormalization: false
};
var createPeriodicWaveConstructor = function createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) {
  return /*#__PURE__*/function () {
    function PeriodicWave(context, options) {
      _classCallCheck(this, PeriodicWave);

      var nativeContext = getNativeContext(context);
      var mergedOptions = sanitizePeriodicWaveOptions(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));
      var periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);
      periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.

      return periodicWave;
    }

    _createClass(PeriodicWave, null, [{
      key: Symbol.hasInstance,
      value: function value(instance) {
        return instance !== null && _typeof(instance) === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);
      }
    }]);

    return PeriodicWave;
  }();
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js ***!
  \*********************************************************************************************/
/*! exports provided: createRenderAutomation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRenderAutomation", function() { return createRenderAutomation; });
var createRenderAutomation = function createRenderAutomation(getAudioParamRenderer, renderInputsOfAudioParam) {
  return function (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) {
    var audioParamRenderer = getAudioParamRenderer(audioParam);
    audioParamRenderer.replay(nativeAudioParam);
    return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js ***!
  \*******************************************************************************************************/
/*! exports provided: createRenderInputsOfAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRenderInputsOfAudioNode", function() { return createRenderInputsOfAudioNode; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var createRenderInputsOfAudioNode = function createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) {
  return /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) {
      var audioNodeConnections, nextTrace;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              audioNodeConnections = getAudioNodeConnections(audioNode);
              nextTrace = [].concat(_toConsumableArray(trace), [audioNode]);
              _context2.next = 4;
              return Promise.all(audioNodeConnections.activeInputs.map(function (connections, input) {
                return Array.from(connections).filter(function (_ref2) {
                  var _ref3 = _slicedToArray(_ref2, 1),
                      source = _ref3[0];

                  return !nextTrace.includes(source);
                }).map( /*#__PURE__*/function () {
                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(_ref4) {
                    var _ref6, source, output, audioNodeRenderer, renderedNativeAudioNode, destination;

                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            _ref6 = _slicedToArray(_ref4, 2), source = _ref6[0], output = _ref6[1];
                            audioNodeRenderer = getAudioNodeRenderer(source);
                            _context.next = 4;
                            return audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);

                          case 4:
                            renderedNativeAudioNode = _context.sent;
                            destination = audioNode.context.destination;

                            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {
                              renderedNativeAudioNode.connect(nativeAudioNode, output, input);
                            }

                          case 7:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee);
                  }));

                  return function (_x5) {
                    return _ref5.apply(this, arguments);
                  };
                }());
              }).reduce(function (allRenderingPromises, renderingPromises) {
                return [].concat(_toConsumableArray(allRenderingPromises), _toConsumableArray(renderingPromises));
              }, []));

            case 4:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }();
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js ***!
  \********************************************************************************************************/
/*! exports provided: createRenderInputsOfAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRenderInputsOfAudioParam", function() { return createRenderInputsOfAudioParam; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var createRenderInputsOfAudioParam = function createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) {
  return /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) {
      var audioParamConnections;
      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              audioParamConnections = getAudioParamConnections(audioParam);
              _context2.next = 3;
              return Promise.all(Array.from(audioParamConnections.activeInputs).map( /*#__PURE__*/function () {
                var _ref3 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(_ref2) {
                  var _ref4, source, output, audioNodeRenderer, renderedNativeAudioNode;

                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _ref4 = _slicedToArray(_ref2, 2), source = _ref4[0], output = _ref4[1];
                          audioNodeRenderer = getAudioNodeRenderer(source);
                          _context.next = 4;
                          return audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);

                        case 4:
                          renderedNativeAudioNode = _context.sent;

                          if (!isPartOfACycle(source)) {
                            renderedNativeAudioNode.connect(nativeAudioParam, output);
                          }

                        case 6:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function (_x5) {
                  return _ref3.apply(this, arguments);
                };
              }()));

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function (_x, _x2, _x3, _x4) {
      return _ref.apply(this, arguments);
    };
  }();
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js ***!
  \***************************************************************************************************************/
/*! exports provided: createRenderNativeOfflineAudioContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRenderNativeOfflineAudioContext", function() { return createRenderNativeOfflineAudioContext; });
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");

var createRenderNativeOfflineAudioContext = function createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) {
  return function (nativeOfflineAudioContext) {
    // Bug #21: Safari does not support promises yet.
    if (cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"], function () {
      return Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"])(nativeOfflineAudioContext);
    })) {
      // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.
      return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then(function (isOfflineAudioContextCurrentTimeSupported) {
        if (!isOfflineAudioContextCurrentTimeSupported) {
          var scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);

          nativeOfflineAudioContext.oncomplete = function () {
            scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation

            scriptProcessorNode.disconnect();
          };

          scriptProcessorNode.onaudioprocess = function () {
            return nativeOfflineAudioContext.currentTime;
          }; // tslint:disable-line:deprecation


          scriptProcessorNode.connect(nativeOfflineAudioContext.destination);
        }

        return nativeOfflineAudioContext.startRendering();
      });
    }

    return new Promise(function (resolve) {
      // Bug #48: Safari does not render an OfflineAudioContext without any connected node.
      var gainNode = createNativeGainNode(nativeOfflineAudioContext, {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete',
        gain: 0
      });

      nativeOfflineAudioContext.oncomplete = function (event) {
        gainNode.disconnect();
        resolve(event.renderedBuffer);
      };

      gainNode.connect(nativeOfflineAudioContext.destination);
      nativeOfflineAudioContext.startRendering();
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js ***!
  \****************************************************************************************************************/
/*! exports provided: createSetActiveAudioWorkletNodeInputs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetActiveAudioWorkletNodeInputs", function() { return createSetActiveAudioWorkletNodeInputs; });
var createSetActiveAudioWorkletNodeInputs = function createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore) {
  return function (nativeAudioWorkletNode, activeInputs) {
    activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js ***!
  \****************************************************************************************************/
/*! exports provided: createSetAudioNodeTailTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSetAudioNodeTailTime", function() { return createSetAudioNodeTailTime; });
var createSetAudioNodeTailTime = function createSetAudioNodeTailTime(audioNodeTailTimeStore) {
  return function (audioNode, tailTime) {
    return audioNodeTailTimeStore.set(audioNode, tailTime);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js ***!
  \*******************************************************************************************/
/*! exports provided: createStartRendering */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStartRendering", function() { return createStartRendering; });
/* harmony import */ var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/wrap-audio-buffer-get-channel-data-method */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");

var createStartRendering = function createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) {
  var trace = [];
  return function (destination, nativeOfflineAudioContext) {
    return getAudioNodeRenderer(destination).render(destination, nativeOfflineAudioContext, trace)
    /*
     * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the
     * destination.
     */
    .then(function () {
      return Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map(function (audioWorkletNode) {
        return getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace);
      }));
    }).then(function () {
      return renderNativeOfflineAudioContext(nativeOfflineAudioContext);
    }).then(function (audioBuffer) {
      // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
      // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
      if (typeof audioBuffer.copyFromChannel !== 'function') {
        wrapAudioBufferCopyChannelMethods(audioBuffer);
        Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_0__["wrapAudioBufferGetChannelDataMethod"])(audioBuffer); // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.
      } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, function () {
        return testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer);
      })) {
        wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
      }

      audioBufferStore.add(audioBuffer);
      return audioBuffer;
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js ***!
  \**********************************************************************************************************/
/*! exports provided: createStereoPannerNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStereoPannerNodeConstructor", function() { return createStereoPannerNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  channelCount: 2,

  /*
   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent
   * behavior.
   */
  channelCountMode: 'explicit',
  channelInterpretation: 'speakers',
  pan: 0
};
var createStereoPannerNodeConstructor = function createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(StereoPannerNode, _audioNodeConstructor);

    var _super = _createSuper(StereoPannerNode);

    function StereoPannerNode(context, options) {
      var _this;

      _classCallCheck(this, StereoPannerNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;
      _this = _super.call(this, context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);
      _this._pan = createAudioParam(_assertThisInitialized(_this), isOffline, nativeStereoPannerNode.pan);
      return _this;
    }

    _createClass(StereoPannerNode, [{
      key: "pan",
      get: function get() {
        return this._pan;
      }
    }]);

    return StereoPannerNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! exports provided: createStereoPannerNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStereoPannerNodeRendererFactory", function() { return createStereoPannerNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



var createStereoPannerNodeRendererFactory = function createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeStereoPannerNodes = new WeakMap();

    var createStereoPannerNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeStereoPannerNode, nativeStereoPannerNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeStereoPannerNode = getNativeAudioNode(proxy);
                /*
                 * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created
                 * again.
                 */

                nativeStereoPannerNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__["isOwnedByContext"])(nativeStereoPannerNode, nativeOfflineAudioContext);

                if (!nativeStereoPannerNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeStereoPannerNode.channelCount,
                    channelCountMode: nativeStereoPannerNode.channelCountMode,
                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,
                    pan: nativeStereoPannerNode.pan.value
                  };
                  nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);
                }

                renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);

                if (nativeStereoPannerNodeIsOwnedByContext) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);

              case 7:
                _context.next = 11;
                break;

              case 9:
                _context.next = 11;
                return connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);

              case 11:
                if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__["isNativeAudioNodeFaker"])(nativeStereoPannerNode)) {
                  _context.next = 16;
                  break;
                }

                _context.next = 14;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);

              case 14:
                _context.next = 18;
                break;

              case 16:
                _context.next = 18;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);

              case 18:
                return _context.abrupt("return", nativeStereoPannerNode);

              case 19:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createStereoPannerNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);

        if (renderedNativeStereoPannerNode !== undefined) {
          return Promise.resolve(renderedNativeStereoPannerNode);
        }

        return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js ***!
  \*****************************************************************************************************************/
/*! exports provided: createTestAudioBufferConstructorSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioBufferConstructorSupport", function() { return createTestAudioBufferConstructorSupport; });
// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.
var createTestAudioBufferConstructorSupport = function createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor) {
  return function () {
    if (nativeAudioBufferConstructor === null) {
      return false;
    }

    try {
      new nativeAudioBufferConstructor({
        length: 1,
        sampleRate: 44100
      }); // tslint:disable-line:no-unused-expression
    } catch (_unused) {
      return false;
    }

    return true;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js ***!
  \***********************************************************************************************************************************/
/*! exports provided: createTestAudioBufferCopyChannelMethodsSubarraySupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioBufferCopyChannelMethodsSubarraySupport", function() { return createTestAudioBufferCopyChannelMethodsSubarraySupport; });
/*
 * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods
 * is enough to know if the other one is supported as well.
 */
var createTestAudioBufferCopyChannelMethodsSubarraySupport = function createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return false;
    }

    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    var nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().

    if (nativeAudioBuffer.copyToChannel === undefined) {
      return true;
    }

    var source = new Float32Array(2);

    try {
      nativeAudioBuffer.copyFromChannel(source, 0, 0);
    } catch (_unused) {
      return false;
    }

    return true;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js ***!
  \*******************************************************************************************************************/
/*! exports provided: createTestAudioContextCloseMethodSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioContextCloseMethodSupport", function() { return createTestAudioContextCloseMethodSupport; });
var createTestAudioContextCloseMethodSupport = function createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor) {
  return function () {
    if (nativeAudioContextConstructor === null) {
      return false;
    } // Try to check the prototype before constructing the AudioContext.


    if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {
      return true;
    }

    var audioContext = new nativeAudioContextConstructor();
    var isAudioContextClosable = audioContext.close !== undefined;

    try {
      audioContext.close();
    } catch (_unused) {// Ignore errors.
    }

    return isAudioContextClosable;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js ***!
  \******************************************************************************************************************************************/
/*! exports provided: createTestAudioContextDecodeAudioDataMethodTypeErrorSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioContextDecodeAudioDataMethodTypeErrorSupport", function() { return createTestAudioContextDecodeAudioDataMethodTypeErrorSupport; });
/**
 * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers
 * did not refuse to decode invalid parameters with a TypeError.
 */
var createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = function createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return Promise.resolve(false);
    }

    var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #21: Safari does not support promises yet.

    return new Promise(function (resolve) {
      var isPending = true;

      var resolvePromise = function resolvePromise(err) {
        if (isPending) {
          isPending = false;
          offlineAudioContext.startRendering();
          resolve(err instanceof TypeError);
        }
      };

      var promise; // Bug #26: Safari throws a synchronous error.

      try {
        promise = offlineAudioContext // Bug #1: Safari requires a successCallback.
        .decodeAudioData(null, function () {// Ignore the success callback.
        }, resolvePromise);
      } catch (err) {
        resolvePromise(err);
      } // Bug #21: Safari does not support promises yet.


      if (promise !== undefined) {
        // Bug #6: Chrome, Edge, Firefox and Opera do not call the errorCallback.
        promise.catch(resolvePromise);
      }
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js ***!
  \**************************************************************************************************************/
/*! exports provided: createTestAudioContextOptionsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioContextOptionsSupport", function() { return createTestAudioContextOptionsSupport; });
var createTestAudioContextOptionsSupport = function createTestAudioContextOptionsSupport(nativeAudioContextConstructor) {
  return function () {
    if (nativeAudioContextConstructor === null) {
      return false;
    }

    var audioContext;

    try {
      audioContext = new nativeAudioContextConstructor({
        latencyHint: 'balanced'
      });
    } catch (_unused) {
      return false;
    }

    audioContext.close();
    return true;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js ***!
  \******************************************************************************************************************/
/*! exports provided: createTestAudioNodeConnectMethodSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioNodeConnectMethodSupport", function() { return createTestAudioNodeConnectMethodSupport; });
// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.
var createTestAudioNodeConnectMethodSupport = function createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return false;
    }

    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    var nativeGainNode = nativeOfflineAudioContext.createGain();
    var isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;
    nativeGainNode.disconnect(nativeGainNode);
    return isSupported;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js ***!
  \***************************************************************************************************************************/
/*! exports provided: createTestAudioWorkletProcessorNoOutputsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioWorkletProcessorNoOutputsSupport", function() { return createTestAudioWorkletProcessorNoOutputsSupport; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/**
 * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was
 * enabled by default in version 66.
 */
var createTestAudioWorkletProcessorNoOutputsSupport = function createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) {
  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
    var blob, offlineAudioContext, url, isCallingProcess, audioWorkletNode, oscillator;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(nativeAudioWorkletNodeConstructor === null)) {
              _context.next = 2;
              break;
            }

            return _context.abrupt("return", true);

          case 2:
            if (!(nativeOfflineAudioContextConstructor === null)) {
              _context.next = 4;
              break;
            }

            return _context.abrupt("return", false);

          case 4:
            blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor("a",A)'], {
              type: 'application/javascript; charset=utf-8'
            });
            offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);
            url = URL.createObjectURL(blob);
            isCallingProcess = false;
            _context.prev = 8;
            _context.next = 11;
            return offlineAudioContext.audioWorklet.addModule(url);

          case 11:
            audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {
              numberOfOutputs: 0
            });
            oscillator = offlineAudioContext.createOscillator();

            audioWorkletNode.port.onmessage = function () {
              return isCallingProcess = true;
            };

            oscillator.connect(audioWorkletNode);
            oscillator.start(0);
            _context.next = 18;
            return offlineAudioContext.startRendering();

          case 18:
            if (isCallingProcess) {
              _context.next = 21;
              break;
            }

            _context.next = 21;
            return new Promise(function (resolve) {
              return setTimeout(resolve, 5);
            });

          case 21:
            _context.next = 25;
            break;

          case 23:
            _context.prev = 23;
            _context.t0 = _context["catch"](8);

          case 25:
            _context.prev = 25;
            URL.revokeObjectURL(url);
            return _context.finish(25);

          case 28:
            return _context.abrupt("return", isCallingProcess);

          case 29:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[8, 23, 25, 28]]);
  }));
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: createTestAudioWorkletProcessorPostMessageSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestAudioWorkletProcessorPostMessageSupport", function() { return createTestAudioWorkletProcessorPostMessageSupport; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.
var createTestAudioWorkletProcessorPostMessageSupport = function createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) {
  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
    var blob, offlineAudioContext, url, isEmittingMessageEvents, isEmittingProcessorErrorEvents, audioWorkletNode, oscillator;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(nativeAudioWorkletNodeConstructor === null)) {
              _context.next = 2;
              break;
            }

            return _context.abrupt("return", true);

          case 2:
            if (!(nativeOfflineAudioContextConstructor === null)) {
              _context.next = 4;
              break;
            }

            return _context.abrupt("return", false);

          case 4:
            blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'], {
              type: 'application/javascript; charset=utf-8'
            });
            offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);
            url = URL.createObjectURL(blob);
            isEmittingMessageEvents = false;
            isEmittingProcessorErrorEvents = false;
            _context.prev = 9;
            _context.next = 12;
            return offlineAudioContext.audioWorklet.addModule(url);

          case 12:
            audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {
              numberOfOutputs: 0
            });
            oscillator = offlineAudioContext.createOscillator();

            audioWorkletNode.port.onmessage = function () {
              return isEmittingMessageEvents = true;
            };

            audioWorkletNode.onprocessorerror = function () {
              return isEmittingProcessorErrorEvents = true;
            };

            oscillator.connect(audioWorkletNode);
            _context.next = 19;
            return offlineAudioContext.startRendering();

          case 19:
            _context.next = 23;
            break;

          case 21:
            _context.prev = 21;
            _context.t0 = _context["catch"](9);

          case 23:
            _context.prev = 23;
            URL.revokeObjectURL(url);
            return _context.finish(23);

          case 26:
            return _context.abrupt("return", isEmittingMessageEvents && !isEmittingProcessorErrorEvents);

          case 27:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[9, 21, 23, 26]]);
  }));
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js ***!
  \**************************************************************************************************************************/
/*! exports provided: createTestChannelMergerNodeChannelCountSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestChannelMergerNodeChannelCountSupport", function() { return createTestChannelMergerNodeChannelCountSupport; });
/**
 * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.
 */
var createTestChannelMergerNodeChannelCountSupport = function createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return false;
    }

    var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    var nativeChannelMergerNode = offlineAudioContext.createChannelMerger();
    /**
     * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support
     * in other browsers.
     */

    if (nativeChannelMergerNode.channelCountMode === 'max') {
      return true;
    }

    try {
      nativeChannelMergerNode.channelCount = 2;
    } catch (_unused) {
      return true;
    }

    return false;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js ***!
  \*********************************************************************************************************************************/
/*! exports provided: createTestConstantSourceNodeAccurateSchedulingSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestConstantSourceNodeAccurateSchedulingSupport", function() { return createTestConstantSourceNodeAccurateSchedulingSupport; });
var createTestConstantSourceNodeAccurateSchedulingSupport = function createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return false;
    }

    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #62: Safari does not support ConstantSourceNodes.

    if (nativeOfflineAudioContext.createConstantSource === undefined) {
      return true;
    }

    var nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();
    /*
     * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to
     * the implementation of Firefox right now, but it could probably be done in a better way.
     */

    return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js ***!
  \******************************************************************************************************************************/
/*! exports provided: createTestConvolverNodeBufferReassignabilitySupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestConvolverNodeBufferReassignabilitySupport", function() { return createTestConvolverNodeBufferReassignabilitySupport; });
// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.
var createTestConvolverNodeBufferReassignabilitySupport = function createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return false;
    }

    var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    var nativeConvolverNode = offlineAudioContext.createConvolver();
    nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);

    try {
      nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);
    } catch (_unused) {
      return false;
    }

    return true;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js ***!
  \*********************************************************************************************************************/
/*! exports provided: createTestConvolverNodeChannelCountSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestConvolverNodeChannelCountSupport", function() { return createTestConvolverNodeChannelCountSupport; });
// Chrome up to version v80, Edge up to version v80 and Opera up to version v67 did not allow to set the channelCount property of a ConvolverNode to 1. They also did not allow to set the channelCountMode to 'explicit'.
var createTestConvolverNodeChannelCountSupport = function createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return false;
    }

    var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    var nativeConvolverNode = offlineAudioContext.createConvolver();

    try {
      nativeConvolverNode.channelCount = 1;
    } catch (_unused) {
      return false;
    }

    return true;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js ***!
  \**********************************************************************************************************/
/*! exports provided: createTestIsSecureContextSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestIsSecureContextSupport", function() { return createTestIsSecureContextSupport; });
var createTestIsSecureContextSupport = function createTestIsSecureContextSupport(window) {
  return function () {
    return window !== null && window.hasOwnProperty('isSecureContext');
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js ***!
  \********************************************************************************************************************************************************/
/*! exports provided: createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport", function() { return createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport; });
// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.
var createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = function createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor) {
  return function () {
    if (nativeAudioContextConstructor === null) {
      return false;
    }

    var audioContext = new nativeAudioContextConstructor();

    try {
      audioContext.createMediaStreamSource(new MediaStream());
      return false;
    } catch (err) {
      return true;
    }
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js ***!
  \***************************************************************************************************************************/
/*! exports provided: createTestOfflineAudioContextCurrentTimeSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestOfflineAudioContextCurrentTimeSupport", function() { return createTestOfflineAudioContextCurrentTimeSupport; });
var createTestOfflineAudioContextCurrentTimeSupport = function createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return Promise.resolve(false);
    }

    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #48: Safari does not render an OfflineAudioContext without any connected node.

    var gainNode = createNativeGainNode(nativeOfflineAudioContext, {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      gain: 0
    }); // Bug #21: Safari does not support promises yet.

    return new Promise(function (resolve) {
      nativeOfflineAudioContext.oncomplete = function () {
        gainNode.disconnect();
        resolve(nativeOfflineAudioContext.currentTime !== 0);
      };

      nativeOfflineAudioContext.startRendering();
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js ***!
  \*************************************************************************************************************************/
/*! exports provided: createTestStereoPannerNodeDefaultValueSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTestStereoPannerNodeDefaultValueSupport", function() { return createTestStereoPannerNodeDefaultValueSupport; });
/**
 * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.
 */
var createTestStereoPannerNodeDefaultValueSupport = function createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor) {
  return function () {
    if (nativeOfflineAudioContextConstructor === null) {
      return Promise.resolve(false);
    }

    var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
    /*
     * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does
     * support the tested behaviour.
     */

    if (nativeOfflineAudioContext.createStereoPanner === undefined) {
      return Promise.resolve(true);
    } // Bug #62: Safari does not support ConstantSourceNodes.


    if (nativeOfflineAudioContext.createConstantSource === undefined) {
      return Promise.resolve(true);
    }

    var constantSourceNode = nativeOfflineAudioContext.createConstantSource();
    var stereoPanner = nativeOfflineAudioContext.createStereoPanner();
    constantSourceNode.channelCount = 1;
    constantSourceNode.offset.value = 1;
    stereoPanner.channelCount = 1;
    constantSourceNode.start();
    constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);
    return nativeOfflineAudioContext.startRendering().then(function (buffer) {
      return buffer.getChannelData(0)[0] !== 1;
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js ***!
  \*****************************************************************************************/
/*! exports provided: createUnknownError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createUnknownError", function() { return createUnknownError; });
var createUnknownError = function createUnknownError() {
  return new DOMException('', 'UnknownError');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js ***!
  \********************************************************************************************************/
/*! exports provided: createWaveShaperNodeConstructor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWaveShaperNodeConstructor", function() { return createWaveShaperNodeConstructor; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var DEFAULT_OPTIONS = {
  channelCount: 2,
  channelCountMode: 'max',
  channelInterpretation: 'speakers',
  curve: null,
  oversample: 'none'
};
var createWaveShaperNodeConstructor = function createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {
  return /*#__PURE__*/function (_audioNodeConstructor) {
    _inherits(WaveShaperNode, _audioNodeConstructor);

    var _super = _createSuper(WaveShaperNode);

    function WaveShaperNode(context, options) {
      var _this;

      _classCallCheck(this, WaveShaperNode);

      var nativeContext = getNativeContext(context);

      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

      var nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);
      var isOffline = isNativeOfflineAudioContext(nativeContext);
      var waveShaperNodeRenderer = isOffline ? createWaveShaperNodeRenderer() : null; // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.

      _this = _super.call(this, context, true, nativeWaveShaperNode, waveShaperNodeRenderer);
      _this._isCurveNullified = false;
      _this._nativeWaveShaperNode = nativeWaveShaperNode; // @todo Determine a meaningful tail-time instead of just using one second.

      setAudioNodeTailTime(_assertThisInitialized(_this), 1);
      return _this;
    }

    _createClass(WaveShaperNode, [{
      key: "curve",
      get: function get() {
        if (this._isCurveNullified) {
          return null;
        }

        return this._nativeWaveShaperNode.curve;
      },
      set: function set(value) {
        // Bug #103: Safari does not allow to set the curve to null.
        if (value === null) {
          this._isCurveNullified = true;
          this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);
        } else {
          // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
          // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.
          if (value.length < 2) {
            throw createInvalidStateError();
          }

          this._isCurveNullified = false;
          this._nativeWaveShaperNode.curve = value;
        }
      }
    }, {
      key: "oversample",
      get: function get() {
        return this._nativeWaveShaperNode.oversample;
      },
      set: function set(value) {
        this._nativeWaveShaperNode.oversample = value;
      }
    }]);

    return WaveShaperNode;
  }(audioNodeConstructor);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js ***!
  \*************************************************************************************************************/
/*! exports provided: createWaveShaperNodeRendererFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWaveShaperNodeRendererFactory", function() { return createWaveShaperNodeRendererFactory; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
/* harmony import */ var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/is-owned-by-context */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



var createWaveShaperNodeRendererFactory = function createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) {
  return function () {
    var renderedNativeWaveShaperNodes = new WeakMap();

    var createWaveShaperNode = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
        var nativeWaveShaperNode, nativeWaveShaperNodeIsOwnedByContext, options;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                nativeWaveShaperNode = getNativeAudioNode(proxy); // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.

                nativeWaveShaperNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_2__["isOwnedByContext"])(nativeWaveShaperNode, nativeOfflineAudioContext);

                if (!nativeWaveShaperNodeIsOwnedByContext) {
                  options = {
                    channelCount: nativeWaveShaperNode.channelCount,
                    channelCountMode: nativeWaveShaperNode.channelCountMode,
                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,
                    curve: nativeWaveShaperNode.curve,
                    oversample: nativeWaveShaperNode.oversample
                  };
                  nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);
                }

                renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);

                if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_1__["isNativeAudioNodeFaker"])(nativeWaveShaperNode)) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);

              case 7:
                _context.next = 11;
                break;

              case 9:
                _context.next = 11;
                return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);

              case 11:
                return _context.abrupt("return", nativeWaveShaperNode);

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function createWaveShaperNode(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
      };
    }();

    return {
      render: function render(proxy, nativeOfflineAudioContext, trace) {
        var renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);

        if (renderedNativeWaveShaperNode !== undefined) {
          return Promise.resolve(renderedNativeWaveShaperNode);
        }

        return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/window.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/window.js ***!
  \**********************************************************************************/
/*! exports provided: createWindow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWindow", function() { return createWindow; });
var createWindow = function createWindow() {
  return typeof window === 'undefined' ? null : window;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js ***!
  \********************************************************************************************************************************/
/*! exports provided: createWrapAudioBufferCopyChannelMethodsOutOfBounds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWrapAudioBufferCopyChannelMethodsOutOfBounds", function() { return createWrapAudioBufferCopyChannelMethodsOutOfBounds; });
var createWrapAudioBufferCopyChannelMethodsOutOfBounds = function createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong) {
  return function (audioBuffer) {
    audioBuffer.copyFromChannel = function (copyFromChannel) {
      return function (destination, channelNumberAsNumber) {
        var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
        var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

        if (bufferOffset < audioBuffer.length) {
          return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);
        }
      };
    }(audioBuffer.copyFromChannel);

    audioBuffer.copyToChannel = function (copyToChannel) {
      return function (source, channelNumberAsNumber) {
        var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
        var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

        if (bufferOffset < audioBuffer.length) {
          return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);
        }
      };
    }(audioBuffer.copyToChannel);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js ***!
  \******************************************************************************************************************/
/*! exports provided: createWrapAudioBufferCopyChannelMethods */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWrapAudioBufferCopyChannelMethods", function() { return createWrapAudioBufferCopyChannelMethods; });
var createWrapAudioBufferCopyChannelMethods = function createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError) {
  return function (audioBuffer) {
    audioBuffer.copyFromChannel = function (destination, channelNumberAsNumber) {
      var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
      var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

      if (channelNumber >= audioBuffer.numberOfChannels) {
        throw createIndexSizeError();
      }

      var audioBufferLength = audioBuffer.length;
      var channelData = audioBuffer.getChannelData(channelNumber);
      var destinationLength = destination.length;

      for (var i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {
        destination[i] = channelData[i + bufferOffset];
      }
    };

    audioBuffer.copyToChannel = function (source, channelNumberAsNumber) {
      var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
      var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

      if (channelNumber >= audioBuffer.numberOfChannels) {
        throw createIndexSizeError();
      }

      var audioBufferLength = audioBuffer.length;
      var channelData = audioBuffer.getChannelData(channelNumber);
      var sourceLength = source.length;

      for (var i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {
        channelData[i + bufferOffset] = source[i];
      }
    };
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer", function() { return createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer; });
var createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = function createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors) {
  return function (nativeAudioBufferSourceNode, nativeContext) {
    var nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);

    if (nativeAudioBufferSourceNode.buffer === null) {
      nativeAudioBufferSourceNode.buffer = nullifiedBuffer;
    }

    overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', function (get) {
      return function () {
        var value = get.call(nativeAudioBufferSourceNode);
        return value === nullifiedBuffer ? null : value;
      };
    }, function (set) {
      return function (value) {
        return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);
      };
    });
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js ***!
  \****************************************************************************************************/
/*! exports provided: createWrapChannelMergerNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createWrapChannelMergerNode", function() { return createWrapChannelMergerNode; });
var createWrapChannelMergerNode = function createWrapChannelMergerNode(createInvalidStateError, monitorConnections) {
  return function (nativeContext, channelMergerNode) {
    // Bug #15: Safari does not return the default properties.
    channelMergerNode.channelCount = 1;
    channelMergerNode.channelCountMode = 'explicit'; // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.

    Object.defineProperty(channelMergerNode, 'channelCount', {
      get: function get() {
        return 1;
      },
      set: function set() {
        throw createInvalidStateError();
      }
    });
    Object.defineProperty(channelMergerNode, 'channelCountMode', {
      get: function get() {
        return 'explicit';
      },
      set: function set() {
        throw createInvalidStateError();
      }
    }); // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.

    var audioBufferSourceNode = nativeContext.createBufferSource();

    var whenConnected = function whenConnected() {
      var length = channelMergerNode.numberOfInputs;

      for (var i = 0; i < length; i += 1) {
        audioBufferSourceNode.connect(channelMergerNode, 0, i);
      }
    };

    var whenDisconnected = function whenDisconnected() {
      return audioBufferSourceNode.disconnect(channelMergerNode);
    };

    monitorConnections(channelMergerNode, whenConnected, whenDisconnected);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/globals.js":
/*!*************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/globals.js ***!
  \*************************************************************************/
/*! exports provided: ACTIVE_AUDIO_NODE_STORE, AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, EVENT_LISTENERS, CYCLE_COUNTERS, NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS, NODE_TO_PROCESSOR_MAPS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVE_AUDIO_NODE_STORE", function() { return ACTIVE_AUDIO_NODE_STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUDIO_NODE_CONNECTIONS_STORE", function() { return AUDIO_NODE_CONNECTIONS_STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUDIO_NODE_STORE", function() { return AUDIO_NODE_STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUDIO_PARAM_CONNECTIONS_STORE", function() { return AUDIO_PARAM_CONNECTIONS_STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUDIO_PARAM_STORE", function() { return AUDIO_PARAM_STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTEXT_STORE", function() { return CONTEXT_STORE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENT_LISTENERS", function() { return EVENT_LISTENERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CYCLE_COUNTERS", function() { return CYCLE_COUNTERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS", function() { return NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NODE_TO_PROCESSOR_MAPS", function() { return NODE_TO_PROCESSOR_MAPS; });
var ACTIVE_AUDIO_NODE_STORE = new WeakSet();
var AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();
var AUDIO_NODE_STORE = new WeakMap();
var AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();
var AUDIO_PARAM_STORE = new WeakMap();
var CONTEXT_STORE = new WeakMap();
var EVENT_LISTENERS = new WeakMap();
var CYCLE_COUNTERS = new WeakMap(); // This clunky name is borrowed from the spec. :-)

var NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();
var NODE_TO_PROCESSOR_MAPS = new WeakMap();

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js ***!
  \*************************************************************************************************/
/*! exports provided: isAudioBufferSourceNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioBufferSourceNode", function() { return isAudioBufferSourceNode; });
var isAudioBufferSourceNode = function isAudioBufferSourceNode(audioNode) {
  return 'playbackRate' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js ***!
  \*****************************************************************************************************/
/*! exports provided: isAudioNodeOutputConnection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioNodeOutputConnection", function() { return isAudioNodeOutputConnection; });
/* harmony import */ var _audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");

var isAudioNodeOutputConnection = function isAudioNodeOutputConnection(outputConnection) {
  return Object(_audio_node__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(outputConnection[0]);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js ***!
  \***********************************************************************************/
/*! exports provided: isAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioNode", function() { return isAudioNode; });
var isAudioNode = function isAudioNode(audioNodeOrAudioParam) {
  return 'context' in audioNodeOrAudioParam;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js ***!
  \*******************************************************************************************/
/*! exports provided: isAudioWorkletNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioWorkletNode", function() { return isAudioWorkletNode; });
var isAudioWorkletNode = function isAudioWorkletNode(audioNode) {
  return 'port' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js ***!
  \*******************************************************************************************/
/*! exports provided: isBiquadFilterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBiquadFilterNode", function() { return isBiquadFilterNode; });
var isBiquadFilterNode = function isBiquadFilterNode(audioNode) {
  return 'frequency' in audioNode && 'gain' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js ***!
  \*********************************************************************************************/
/*! exports provided: isConstantSourceNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConstantSourceNode", function() { return isConstantSourceNode; });
var isConstantSourceNode = function isConstantSourceNode(audioNode) {
  return 'offset' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js ***!
  \***********************************************************************************/
/*! exports provided: isDelayNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDelayNode", function() { return isDelayNode; });
var isDelayNode = function isDelayNode(audioNode) {
  return 'delayTime' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js ***!
  \**********************************************************************************/
/*! exports provided: isGainNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isGainNode", function() { return isGainNode; });
var isGainNode = function isGainNode(audioNode) {
  return !('frequency' in audioNode) && 'gain' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js ***!
  \************************************************************************************************/
/*! exports provided: isNativeAudioNodeFaker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNativeAudioNodeFaker", function() { return isNativeAudioNodeFaker; });
var isNativeAudioNodeFaker = function isNativeAudioNodeFaker(nativeAudioNodeOrNativeAudioNodeFaker) {
  return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js ***!
  \******************************************************************************************/
/*! exports provided: isNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNativeAudioNode", function() { return isNativeAudioNode; });
var isNativeAudioNode = function isNativeAudioNode(nativeAudioNodeOrAudioParam) {
  return 'context' in nativeAudioNodeOrAudioParam;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js ***!
  \****************************************************************************************/
/*! exports provided: isOscillatorNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOscillatorNode", function() { return isOscillatorNode; });
var isOscillatorNode = function isOscillatorNode(audioNode) {
  return 'detune' in audioNode && 'frequency' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js ***!
  \*******************************************************************************************/
/*! exports provided: isStereoPannerNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isStereoPannerNode", function() { return isStereoPannerNode; });
var isStereoPannerNode = function isStereoPannerNode(audioNode) {
  return 'pan' in audioNode;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js ***!
  \********************************************************************************************************************/
/*! exports provided: addActiveInputConnectionToAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addActiveInputConnectionToAudioParam", function() { return addActiveInputConnectionToAudioParam; });
/* harmony import */ var _insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var addActiveInputConnectionToAudioParam = function addActiveInputConnectionToAudioParam(activeInputs, source, _ref, ignoreDuplicates) {
  var _ref2 = _slicedToArray(_ref, 2),
      output = _ref2[0],
      eventListener = _ref2[1];

  Object(_insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__["insertElementInSet"])(activeInputs, [source, output, eventListener], function (activeInputConnection) {
    return activeInputConnection[0] === source && activeInputConnection[1] === output;
  }, ignoreDuplicates);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js ***!
  \*********************************************************************************************************************/
/*! exports provided: addPassiveInputConnectionToAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPassiveInputConnectionToAudioParam", function() { return addPassiveInputConnectionToAudioParam; });
/* harmony import */ var _insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var addPassiveInputConnectionToAudioParam = function addPassiveInputConnectionToAudioParam(passiveInputs, _ref, ignoreDuplicates) {
  var _ref2 = _slicedToArray(_ref, 3),
      source = _ref2[0],
      output = _ref2[1],
      eventListener = _ref2[2];

  var passiveInputConnections = passiveInputs.get(source);

  if (passiveInputConnections === undefined) {
    passiveInputs.set(source, new Set([[output, eventListener]]));
  } else {
    Object(_insert_element_in_set__WEBPACK_IMPORTED_MODULE_0__["insertElementInSet"])(passiveInputConnections, [output, eventListener], function (passiveInputConnection) {
      return passiveInputConnection[0] === output;
    }, ignoreDuplicates);
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js ***!
  \********************************************************************************************************************/
/*! exports provided: assignNativeAudioNodeAudioParamValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assignNativeAudioNodeAudioParamValue", function() { return assignNativeAudioNodeAudioParamValue; });
var assignNativeAudioNodeAudioParamValue = function assignNativeAudioNodeAudioParamValue(nativeAudioNode, options, audioParam) {
  var value = options[audioParam];

  if (value !== undefined && value !== nativeAudioNode[audioParam].value) {
    nativeAudioNode[audioParam].value = value;
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js ***!
  \*********************************************************************************************************/
/*! exports provided: assignNativeAudioNodeOption */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assignNativeAudioNodeOption", function() { return assignNativeAudioNodeOption; });
var assignNativeAudioNodeOption = function assignNativeAudioNodeOption(nativeAudioNode, options, option) {
  var value = options[option];

  if (value !== undefined && value !== nativeAudioNode[option]) {
    nativeAudioNode[option] = value;
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js ***!
  \**********************************************************************************************************/
/*! exports provided: assignNativeAudioNodeOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assignNativeAudioNodeOptions", function() { return assignNativeAudioNodeOptions; });
/* harmony import */ var _assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assign-native-audio-node-option */ "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");

var assignNativeAudioNodeOptions = function assignNativeAudioNodeOptions(nativeAudioNode, options) {
  Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAudioNode, options, 'channelCount');
  Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAudioNode, options, 'channelCountMode');
  Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAudioNode, options, 'channelInterpretation');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js ***!
  \**********************************************************************************************************/
/*! exports provided: cloneAudioWorkletNodeOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneAudioWorkletNodeOptions", function() { return cloneAudioWorkletNodeOptions; });
var cloneAudioWorkletNodeOptions = function cloneAudioWorkletNodeOptions(audioWorkletNodeOptions) {
  return new Promise(function (resolve, reject) {
    var _MessageChannel = new MessageChannel(),
        port1 = _MessageChannel.port1,
        port2 = _MessageChannel.port2;

    port1.onmessage = function (_ref) {
      var data = _ref.data;
      port1.close();
      port2.close();
      resolve(data);
    };

    port1.onmessageerror = function (_ref2) {
      var data = _ref2.data;
      port1.close();
      port2.close();
      reject(data);
    }; // This will throw an error if the audioWorkletNodeOptions are not clonable.


    port2.postMessage(audioWorkletNodeOptions);
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js ***!
  \*********************************************************************************************/
/*! exports provided: computeBufferSize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "computeBufferSize", function() { return computeBufferSize; });
var computeBufferSize = function computeBufferSize(baseLatency, sampleRate) {
  if (baseLatency === null) {
    return 512;
  }

  return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js ***!
  \************************************************************************************************************************/
/*! exports provided: connectNativeAudioNodeToNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectNativeAudioNodeToNativeAudioNode", function() { return connectNativeAudioNodeToNativeAudioNode; });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");

var connectNativeAudioNodeToNativeAudioNode = function connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input) {
  if (Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativeDestinationAudioNode)) {
    var fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];
    nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);
    return [fakeNativeDestinationAudioNode, output, 0];
  }

  nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);
  return [nativeDestinationAudioNode, output, input];
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js ***!
  \*******************************************************************************************/
/*! exports provided: copyFromChannel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyFromChannel", function() { return copyFromChannel; });
function copyFromChannel(audioBuffer, // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }
parent, key, channelNumber, bufferOffset) {
  if (typeof audioBuffer.copyFromChannel === 'function') {
    // The byteLength will be 0 when the ArrayBuffer was transferred.
    if (parent[key].byteLength === 0) {
      parent[key] = new Float32Array(128);
    }

    audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset); // Bug #5: Safari does not support copyFromChannel().
  } else {
    var channelData = audioBuffer.getChannelData(channelNumber); // The byteLength will be 0 when the ArrayBuffer was transferred.

    if (parent[key].byteLength === 0) {
      parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);
    } else {
      var slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);
      parent[key].set(slicedInput);
    }
  }
}

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js ***!
  \*****************************************************************************************/
/*! exports provided: copyToChannel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "copyToChannel", function() { return copyToChannel; });
var copyToChannel = function copyToChannel(audioBuffer, parent, key, channelNumber, bufferOffset) {
  if (typeof audioBuffer.copyToChannel === 'function') {
    // The byteLength will be 0 when the ArrayBuffer was transferred.
    if (parent[key].byteLength !== 0) {
      audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);
    } // Bug #5: Safari does not support copyToChannel().

  } else {
    // The byteLength will be 0 when the ArrayBuffer was transferred.
    if (parent[key].byteLength !== 0) {
      audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);
    }
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js ***!
  \****************************************************************************************************************/
/*! exports provided: createAudioWorkletProcessorPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioWorkletProcessorPromise", function() { return createAudioWorkletProcessorPromise; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clone-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }


var createAudioWorkletProcessorPromise = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(processorConstructor, audioWorkletNodeOptions) {
    var clonedAudioWorkletNodeOptions;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return Object(_clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_1__["cloneAudioWorkletNodeOptions"])(audioWorkletNodeOptions);

          case 2:
            clonedAudioWorkletNodeOptions = _context.sent;
            return _context.abrupt("return", new processorConstructor(clonedAudioWorkletNodeOptions));

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function createAudioWorkletProcessorPromise(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js ***!
  \********************************************************************************************************/
/*! exports provided: createAudioWorkletProcessor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioWorkletProcessor", function() { return createAudioWorkletProcessor; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-audio-worklet-processor-promise */ "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js");


var createAudioWorkletProcessor = function createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) {
  var nodeToProcessorMap = _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_TO_PROCESSOR_MAPS"].get(nativeContext);

  if (nodeToProcessorMap === undefined) {
    nodeToProcessorMap = new WeakMap();
    _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_TO_PROCESSOR_MAPS"].set(nativeContext, nodeToProcessorMap);
  }

  var audioWorkletProcessorPromise = Object(_create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__["createAudioWorkletProcessorPromise"])(processorConstructor, audioWorkletNodeOptions);
  nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);
  return audioWorkletProcessorPromise;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js ***!
  \**********************************************************************************************/
/*! exports provided: createNestedArrays */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNestedArrays", function() { return createNestedArrays; });
var createNestedArrays = function createNestedArrays(x, y) {
  var arrays = [];

  for (var i = 0; i < x; i += 1) {
    var array = [];
    var length = typeof y === 'number' ? y : y[i];

    for (var j = 0; j < length; j += 1) {
      array.push(new Float32Array(128));
    }

    arrays.push(array);
  }

  return arrays;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js ***!
  \************************************************************************************************************************/
/*! exports provided: deactivateActiveAudioNodeInputConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deactivateActiveAudioNodeInputConnections", function() { return deactivateActiveAudioNodeInputConnections; });
/* harmony import */ var _guards_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-buffer-source-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js");
/* harmony import */ var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../guards/audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js");
/* harmony import */ var _guards_biquad_filter_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../guards/biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js");
/* harmony import */ var _guards_constant_source_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../guards/constant-source-node */ "./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js");
/* harmony import */ var _guards_gain_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../guards/gain-node */ "./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js");
/* harmony import */ var _guards_oscillator_node__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../guards/oscillator-node */ "./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js");
/* harmony import */ var _guards_stereo_panner_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../guards/stereo-panner-node */ "./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js");
/* harmony import */ var _get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./get-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
/* harmony import */ var _is_active_audio_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }












var deactivateActiveAudioNodeInputConnections = function deactivateActiveAudioNodeInputConnections(audioNode, trace) {
  var _getAudioNodeConnecti = Object(_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(audioNode),
      activeInputs = _getAudioNodeConnecti.activeInputs;

  activeInputs.forEach(function (connections) {
    return connections.forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
          source = _ref2[0];

      if (!trace.includes(audioNode)) {
        deactivateActiveAudioNodeInputConnections(source, [].concat(_toConsumableArray(trace), [audioNode]));
      }
    });
  });
  var audioParams = Object(_guards_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_0__["isAudioBufferSourceNode"])(audioNode) ? [// Bug #149: Safari does not yet support the detune AudioParam.
  audioNode.playbackRate] : Object(_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_1__["isAudioWorkletNode"])(audioNode) ? Array.from(audioNode.parameters.values()) : Object(_guards_biquad_filter_node__WEBPACK_IMPORTED_MODULE_2__["isBiquadFilterNode"])(audioNode) ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain] : Object(_guards_constant_source_node__WEBPACK_IMPORTED_MODULE_3__["isConstantSourceNode"])(audioNode) ? [audioNode.offset] : Object(_guards_gain_node__WEBPACK_IMPORTED_MODULE_4__["isGainNode"])(audioNode) ? [audioNode.gain] : Object(_guards_oscillator_node__WEBPACK_IMPORTED_MODULE_5__["isOscillatorNode"])(audioNode) ? [audioNode.detune, audioNode.frequency] : Object(_guards_stereo_panner_node__WEBPACK_IMPORTED_MODULE_6__["isStereoPannerNode"])(audioNode) ? [audioNode.pan] : [];

  var _iterator = _createForOfIteratorHelper(audioParams),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var audioParam = _step.value;
      var audioParamConnections = Object(_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__["getAudioParamConnections"])(audioParam);

      if (audioParamConnections !== undefined) {
        audioParamConnections.activeInputs.forEach(function (_ref3) {
          var _ref4 = _slicedToArray(_ref3, 1),
              source = _ref4[0];

          return deactivateActiveAudioNodeInputConnections(source, trace);
        });
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  if (Object(_is_active_audio_node__WEBPACK_IMPORTED_MODULE_9__["isActiveAudioNode"])(audioNode)) {
    Object(_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_10__["setInternalStateToPassive"])(audioNode);
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js ***!
  \************************************************************************************************/
/*! exports provided: deactivateAudioGraph */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deactivateAudioGraph", function() { return deactivateAudioGraph; });
/* harmony import */ var _deactivate_active_audio_node_input_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deactivate-active-audio-node-input-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js");

var deactivateAudioGraph = function deactivateAudioGraph(context) {
  Object(_deactivate_active_audio_node_input_connections__WEBPACK_IMPORTED_MODULE_0__["deactivateActiveAudioNodeInputConnections"])(context.destination, []);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js ***!
  \***********************************************************************************************************************/
/*! exports provided: deleteActiveInputConnectionToAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteActiveInputConnectionToAudioParam", function() { return deleteActiveInputConnectionToAudioParam; });
/* harmony import */ var _pick_element_from_set__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");

var deleteActiveInputConnectionToAudioParam = function deleteActiveInputConnectionToAudioParam(activeInputs, source, output) {
  return Object(_pick_element_from_set__WEBPACK_IMPORTED_MODULE_0__["pickElementFromSet"])(activeInputs, function (activeInputConnection) {
    return activeInputConnection[0] === source && activeInputConnection[1] === output;
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js ***!
  \********************************************************************************************************/
/*! exports provided: deleteActiveInputConnection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteActiveInputConnection", function() { return deleteActiveInputConnection; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var deleteActiveInputConnection = function deleteActiveInputConnection(activeInputConnections, source, output) {
  var _iterator = _createForOfIteratorHelper(activeInputConnections),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var activeInputConnection = _step.value;

      if (activeInputConnection[0] === source && activeInputConnection[1] === output) {
        activeInputConnections.delete(activeInputConnection);
        return activeInputConnection;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return null;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js ***!
  \**************************************************************************************************************/
/*! exports provided: deleteEventListenerOfAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteEventListenerOfAudioNode", function() { return deleteEventListenerOfAudioNode; });
/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");

var deleteEventListenerOfAudioNode = function deleteEventListenerOfAudioNode(audioNode, eventListener) {
  var eventListeners = Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__["getEventListenersOfAudioNode"])(audioNode);

  if (!eventListeners.delete(eventListener)) {
    throw new Error('Missing the expected event listener.');
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js ***!
  \***********************************************************************************************************************/
/*! exports provided: deletePassiveInputConnectionToAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deletePassiveInputConnectionToAudioNode", function() { return deletePassiveInputConnectionToAudioNode; });
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
/* harmony import */ var _pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");


var deletePassiveInputConnectionToAudioNode = function deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input) {
  var passiveInputConnections = Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_0__["getValueForKey"])(passiveInputs, source);
  var matchingConnection = Object(_pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__["pickElementFromSet"])(passiveInputConnections, function (passiveInputConnection) {
    return passiveInputConnection[0] === output && passiveInputConnection[1] === input;
  });

  if (passiveInputConnections.size === 0) {
    passiveInputs.delete(source);
  }

  return matchingConnection;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js ***!
  \************************************************************************************************************************/
/*! exports provided: deletePassiveInputConnectionToAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deletePassiveInputConnectionToAudioParam", function() { return deletePassiveInputConnectionToAudioParam; });
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
/* harmony import */ var _pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");


var deletePassiveInputConnectionToAudioParam = function deletePassiveInputConnectionToAudioParam(passiveInputs, source, output) {
  var passiveInputConnections = Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_0__["getValueForKey"])(passiveInputs, source);
  var matchingConnection = Object(_pick_element_from_set__WEBPACK_IMPORTED_MODULE_1__["pickElementFromSet"])(passiveInputConnections, function (passiveInputConnection) {
    return passiveInputConnection[0] === output;
  });

  if (passiveInputConnections.size === 0) {
    passiveInputs.delete(source);
  }

  return matchingConnection;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js ***!
  \*********************************************************************************************/
/*! exports provided: detachArrayBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detachArrayBuffer", function() { return detachArrayBuffer; });
var detachArrayBuffer = function detachArrayBuffer(arrayBuffer) {
  var _MessageChannel = new MessageChannel(),
      port1 = _MessageChannel.port1,
      port2 = _MessageChannel.port2;

  return new Promise(function (resolve) {
    port2.onmessage = function () {
      port1.close();
      port2.close();
      resolve();
    };

    port1.postMessage(arrayBuffer, [arrayBuffer]);
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js ***!
  \*****************************************************************************************************************************/
/*! exports provided: disconnectNativeAudioNodeFromNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disconnectNativeAudioNodeFromNativeAudioNode", function() { return disconnectNativeAudioNodeFromNativeAudioNode; });
/* harmony import */ var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");

var disconnectNativeAudioNodeFromNativeAudioNode = function disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input) {
  if (Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativeDestinationAudioNode)) {
    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);
  } else {
    nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js ***!
  \***************************************************************************************/
/*! exports provided: filterBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterBuffer", function() { return filterBuffer; });
// This implementation as shamelessly inspired by source code of
// tslint:disable-next-line:max-line-length
// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.
var filterBuffer = function filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) {
  var inputLength = input.length;
  var i = bufferIndex;

  for (var j = 0; j < inputLength; j += 1) {
    var y = feedforward[0] * input[j];

    for (var k = 1; k < minLength; k += 1) {
      var x = i - k & bufferLength - 1; // tslint:disable-line:no-bitwise

      y += feedforward[k] * xBuffer[x];
      y -= feedback[k] * yBuffer[x];
    }

    for (var _k = minLength; _k < feedforwardLength; _k += 1) {
      y += feedforward[_k] * xBuffer[i - _k & bufferLength - 1]; // tslint:disable-line:no-bitwise
    }

    for (var _k2 = minLength; _k2 < feedbackLength; _k2 += 1) {
      y -= feedback[_k2] * yBuffer[i - _k2 & bufferLength - 1]; // tslint:disable-line:no-bitwise
    }

    xBuffer[i] = input[j];
    yBuffer[i] = y;
    i = i + 1 & bufferLength - 1; // tslint:disable-line:no-bitwise

    output[j] = y;
  }

  return i;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js ***!
  \****************************************************************************************************/
/*! exports provided: getAudioNodeConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAudioNodeConnections", function() { return getAudioNodeConnections; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");


var getAudioNodeConnections = function getAudioNodeConnections(audioNode) {
  return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_NODE_CONNECTIONS_STORE"], audioNode);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js ***!
  \*****************************************************************************************************/
/*! exports provided: getAudioParamConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAudioParamConnections", function() { return getAudioParamConnections; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");


var getAudioParamConnections = function getAudioParamConnections(audioParam) {
  return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_PARAM_CONNECTIONS_STORE"], audioParam);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js ***!
  \*****************************************************************************************************/
/*! exports provided: getAudioWorkletProcessor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getAudioWorkletProcessor", function() { return getAudioWorkletProcessor; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");



var getAudioWorkletProcessor = function getAudioWorkletProcessor(nativeOfflineAudioContext, proxy) {
  var nodeToProcessorMap = Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["NODE_TO_PROCESSOR_MAPS"], nativeOfflineAudioContext);
  var nativeAudioWorkletNode = Object(_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__["getNativeAudioNode"])(proxy);
  return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__["getValueForKey"])(nodeToProcessorMap, nativeAudioWorkletNode);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js ***!
  \***********************************************************************************************************/
/*! exports provided: getEventListenersOfAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getEventListenersOfAudioNode", function() { return getEventListenersOfAudioNode; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");


var getEventListenersOfAudioNode = function getEventListenersOfAudioNode(audioNode) {
  return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["EVENT_LISTENERS"], audioNode);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js ***!
  \***********************************************************************************************/
/*! exports provided: getNativeAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNativeAudioNode", function() { return getNativeAudioNode; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");


var getNativeAudioNode = function getNativeAudioNode(audioNode) {
  return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_NODE_STORE"], audioNode);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js ***!
  \************************************************************************************************/
/*! exports provided: getNativeAudioParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getNativeAudioParam", function() { return getNativeAudioParam; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");


var getNativeAudioParam = function getNativeAudioParam(audioParam) {
  return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_PARAM_STORE"], audioParam);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js ***!
  \*******************************************************************************************/
/*! exports provided: getValueForKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getValueForKey", function() { return getValueForKey; });
var getValueForKey = function getValueForKey(map, key) {
  var value = map.get(key);

  if (value === undefined) {
    throw new Error('A value with the given key could not be found.');
  }

  return value;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js ***!
  \***********************************************************************************************/
/*! exports provided: insertElementInSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insertElementInSet", function() { return insertElementInSet; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var insertElementInSet = function insertElementInSet(set, element, predicate, ignoreDuplicates) {
  var _iterator = _createForOfIteratorHelper(set),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var lmnt = _step.value;

      if (predicate(lmnt)) {
        if (ignoreDuplicates) {
          return false;
        }

        throw Error('The set contains at least one similar element.');
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  set.add(element);
  return true;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js ***!
  \***********************************************************************************************/
/*! exports provided: interceptConnections */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interceptConnections", function() { return interceptConnections; });
var interceptConnections = function interceptConnections(original, interceptor) {
  original.connect = interceptor.connect.bind(interceptor);
  original.disconnect = interceptor.disconnect.bind(interceptor);
  return original;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js ***!
  \**********************************************************************************************/
/*! exports provided: isActiveAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isActiveAudioNode", function() { return isActiveAudioNode; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");

var isActiveAudioNode = function isActiveAudioNode(audioNode) {
  return _globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js ***!
  \******************************************************************************************/
/*! exports provided: isConstructible */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isConstructible", function() { return isConstructible; });
var handler = {
  construct: function construct() {
    return handler;
  }
};
var isConstructible = function isConstructible(constructible) {
  try {
    var proxy = new Proxy(constructible, handler);
    new proxy(); // tslint:disable-line:no-unused-expression
  } catch (_unused) {
    return false;
  }

  return true;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js ***!
  \*************************************************************************************/
/*! exports provided: isDCCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDCCurve", function() { return isDCCurve; });
var isDCCurve = function isDCCurve(curve) {
  if (curve === null) {
    return false;
  }

  var length = curve.length;

  if (length % 2 !== 0) {
    return curve[Math.floor(length / 2)] !== 0;
  }

  return curve[length / 2 - 1] + curve[length / 2] !== 0;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js ***!
  \*********************************************************************************************/
/*! exports provided: isOwnedByContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOwnedByContext", function() { return isOwnedByContext; });
var isOwnedByContext = function isOwnedByContext(nativeAudioNode, nativeContext) {
  return nativeAudioNode.context === nativeContext;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js ***!
  \********************************************************************************************/
/*! exports provided: isPartOfACycle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPartOfACycle", function() { return isPartOfACycle; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");

var isPartOfACycle = function isPartOfACycle(audioNode) {
  return _globals__WEBPACK_IMPORTED_MODULE_0__["CYCLE_COUNTERS"].has(audioNode);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js ***!
  \***********************************************************************************************/
/*! exports provided: isPassiveAudioNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPassiveAudioNode", function() { return isPassiveAudioNode; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");

var isPassiveAudioNode = function isPassiveAudioNode(audioNode) {
  return !_globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js ***!
  \***********************************************************************************************/
/*! exports provided: isValidLatencyHint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidLatencyHint", function() { return isValidLatencyHint; });
var isValidLatencyHint = function isValidLatencyHint(latencyHint) {
  return latencyHint === undefined || typeof latencyHint === 'number' || typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback');
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js ***!
  \*********************************************************************************************/
/*! exports provided: overwriteAccessors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "overwriteAccessors", function() { return overwriteAccessors; });
var overwriteAccessors = function overwriteAccessors(object, property, createGetter, createSetter) {
  var prototype = Object.getPrototypeOf(object);

  while (!prototype.hasOwnProperty(property)) {
    prototype = Object.getPrototypeOf(prototype);
  }

  var _Object$getOwnPropert = Object.getOwnPropertyDescriptor(prototype, property),
      get = _Object$getOwnPropert.get,
      set = _Object$getOwnPropert.set;

  Object.defineProperty(object, property, {
    get: createGetter(get),
    set: createSetter(set)
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js ***!
  \***********************************************************************************************/
/*! exports provided: pickElementFromSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickElementFromSet", function() { return pickElementFromSet; });
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var pickElementFromSet = function pickElementFromSet(set, predicate) {
  var matchingElements = Array.from(set).filter(predicate);

  if (matchingElements.length > 1) {
    throw Error('More than one element was found.');
  }

  if (matchingElements.length === 0) {
    throw Error('No element was found.');
  }

  var _matchingElements = _slicedToArray(matchingElements, 1),
      matchingElement = _matchingElements[0];

  set.delete(matchingElement);
  return matchingElement;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js ***!
  \*************************************************************************************************************/
/*! exports provided: sanitizeAudioWorkletNodeOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sanitizeAudioWorkletNodeOptions", function() { return sanitizeAudioWorkletNodeOptions; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var sanitizeAudioWorkletNodeOptions = function sanitizeAudioWorkletNodeOptions(options) {
  return _objectSpread(_objectSpread({}, options), {}, {
    outputChannelCount: options.outputChannelCount !== undefined ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ?
    /*
     * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why
     * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That
     * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.
     */
    [options.channelCount] : Array.from({
      length: options.numberOfOutputs
    }, function () {
      return 1;
    })
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js ***!
  \***********************************************************************************************************/
/*! exports provided: sanitizeChannelSplitterOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sanitizeChannelSplitterOptions", function() { return sanitizeChannelSplitterOptions; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var sanitizeChannelSplitterOptions = function sanitizeChannelSplitterOptions(options) {
  return _objectSpread(_objectSpread({}, options), {}, {
    channelCount: options.numberOfOutputs
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js ***!
  \********************************************************************************************************/
/*! exports provided: sanitizePeriodicWaveOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sanitizePeriodicWaveOptions", function() { return sanitizePeriodicWaveOptions; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var sanitizePeriodicWaveOptions = function sanitizePeriodicWaveOptions(options) {
  var imag = options.imag,
      real = options.real;

  if (imag === undefined) {
    if (real === undefined) {
      return _objectSpread(_objectSpread({}, options), {}, {
        imag: [0, 0],
        real: [0, 0]
      });
    }

    return _objectSpread(_objectSpread({}, options), {}, {
      imag: Array.from(real, function () {
        return 0;
      }),
      real: real
    });
  }

  if (real === undefined) {
    return _objectSpread(_objectSpread({}, options), {}, {
      imag: imag,
      real: Array.from(imag, function () {
        return 0;
      })
    });
  }

  return _objectSpread(_objectSpread({}, options), {}, {
    imag: imag,
    real: real
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js ***!
  \******************************************************************************************************/
/*! exports provided: setInternalStateToActive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setInternalStateToActive", function() { return setInternalStateToActive; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");


var setInternalStateToActive = function setInternalStateToActive(audioNode) {
  if (_globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode)) {
    throw new Error('The AudioNode is already stored.');
  }

  _globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].add(audioNode);
  Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__["getEventListenersOfAudioNode"])(audioNode).forEach(function (eventListener) {
    return eventListener(true);
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js ***!
  \**********************************************************************************************************************/
/*! exports provided: setInternalStateToPassiveWhenNecessary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setInternalStateToPassiveWhenNecessary", function() { return setInternalStateToPassiveWhenNecessary; });
/* harmony import */ var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js");
/* harmony import */ var _set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./set-internal-state-to-passive */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");

 // Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.

var setInternalStateToPassiveWhenNecessary = function setInternalStateToPassiveWhenNecessary(audioNode, activeInputs) {
  if (!Object(_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__["isAudioWorkletNode"])(audioNode) && activeInputs.every(function (connections) {
    return connections.size === 0;
  })) {
    Object(_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__["setInternalStateToPassive"])(audioNode);
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js ***!
  \*******************************************************************************************************/
/*! exports provided: setInternalStateToPassive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setInternalStateToPassive", function() { return setInternalStateToPassive; });
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");


var setInternalStateToPassive = function setInternalStateToPassive(audioNode) {
  if (!_globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode)) {
    throw new Error('The AudioNode is not stored.');
  }

  _globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].delete(audioNode);
  Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__["getEventListenersOfAudioNode"])(audioNode).forEach(function (eventListener) {
    return eventListener(false);
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js ***!
  \**********************************************************************************************************/
/*! exports provided: setValueAtTimeUntilPossible */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setValueAtTimeUntilPossible", function() { return setValueAtTimeUntilPossible; });
var setValueAtTimeUntilPossible = function setValueAtTimeUntilPossible(audioParam, value, startTime) {
  try {
    audioParam.setValueAtTime(value, startTime);
  } catch (err) {
    if (err.code !== 9) {
      throw err;
    }

    setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js ***!
  \*************************************************************************************************/
/*! exports provided: splitImportStatements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "splitImportStatements", function() { return splitImportStatements; });
/*
 * This massive regex tries to cover all the following cases.
 *
 * import './path';
 * import defaultImport from './path';
 * import { namedImport } from './path';
 * import { namedImport as renamendImport } from './path';
 * import * as namespaceImport from './path';
 * import defaultImport, { namedImport } from './path';
 * import defaultImport, { namedImport as renamendImport } from './path';
 * import defaultImport, * as namespaceImport from './path';
 */
var IMPORT_STATEMENT_REGEX = /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/; // tslint:disable-line:max-line-length

var splitImportStatements = function splitImportStatements(source, url) {
  var importStatements = [];
  var sourceWithoutImportStatements = source.replace(/^[\s]+/, '');
  var result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);

  while (result !== null) {
    var unresolvedUrl = result[1].slice(1, -1);
    var importStatementWithResolvedUrl = result[0].replace(/([\s]+)?;?$/, '').replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());
    importStatements.push(importStatementWithResolvedUrl);
    sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\s]+/, '');
    result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
  }

  return [importStatements.join(';'), sourceWithoutImportStatements];
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: testAnalyserNodeGetFloatTimeDomainDataMethodSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAnalyserNodeGetFloatTimeDomainDataMethodSupport", function() { return testAnalyserNodeGetFloatTimeDomainDataMethodSupport; });
var testAnalyserNodeGetFloatTimeDomainDataMethodSupport = function testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode) {
  return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: testAudioBufferCopyChannelMethodsOutOfBoundsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioBufferCopyChannelMethodsOutOfBoundsSupport", function() { return testAudioBufferCopyChannelMethodsOutOfBoundsSupport; });
var testAudioBufferCopyChannelMethodsOutOfBoundsSupport = function testAudioBufferCopyChannelMethodsOutOfBoundsSupport(nativeAudioBuffer) {
  try {
    nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);
  } catch (_unused) {
    return false;
  }

  return true;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport", function() { return testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport; });
var testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = function testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext) {
  var nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  nativeAudioBufferSourceNode.start();

  try {
    nativeAudioBufferSourceNode.start();
  } catch (_unused) {
    return true;
  }

  return false;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: testAudioBufferSourceNodeStartMethodOffsetClampingSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioBufferSourceNodeStartMethodOffsetClampingSupport", function() { return testAudioBufferSourceNodeStartMethodOffsetClampingSupport; });
var testAudioBufferSourceNodeStartMethodOffsetClampingSupport = function testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext) {
  var nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  var nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
  nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;

  try {
    nativeAudioBufferSourceNode.start(0, 1);
  } catch (_unused) {
    return false;
  }

  return true;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: testAudioBufferSourceNodeStopMethodNullifiedBufferSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioBufferSourceNodeStopMethodNullifiedBufferSupport", function() { return testAudioBufferSourceNodeStopMethodNullifiedBufferSupport; });
var testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = function testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext) {
  var nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  nativeAudioBufferSourceNode.start();

  try {
    nativeAudioBufferSourceNode.stop();
  } catch (_unused) {
    return false;
  }

  return true;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js ***!
  \*******************************************************************************************************************/
/*! exports provided: testAudioNodeDisconnectMethodSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioNodeDisconnectMethodSupport", function() { return testAudioNodeDisconnectMethodSupport; });
var testAudioNodeDisconnectMethodSupport = function testAudioNodeDisconnectMethodSupport(nativeAudioContext) {
  return new Promise(function (resolve) {
    var analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);
    var dummy = nativeAudioContext.createGain(); // Bug #95: Safari does not play one sample buffers.

    var ones = nativeAudioContext.createBuffer(1, 2, 44100);
    var channelData = ones.getChannelData(0);
    channelData[0] = 1;
    channelData[1] = 1;
    var source = nativeAudioContext.createBufferSource();
    source.buffer = ones;
    source.loop = true;
    source.connect(analyzer).connect(nativeAudioContext.destination);
    source.connect(dummy);
    source.disconnect(dummy); // tslint:disable-next-line:deprecation

    analyzer.onaudioprocess = function (event) {
      var chnnlDt = event.inputBuffer.getChannelData(0);

      if (Array.prototype.some.call(chnnlDt, function (sample) {
        return sample === 1;
      })) {
        resolve(true);
      } else {
        resolve(false);
      }

      source.stop();
      analyzer.onaudioprocess = null; // tslint:disable-line:deprecation

      source.disconnect(analyzer);
      analyzer.disconnect(nativeAudioContext.destination);
    };

    source.start();
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js":
/*!***************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js ***!
  \***************************************************************************************************************************************************/
/*! exports provided: testAudioScheduledSourceNodeStartMethodNegativeParametersSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioScheduledSourceNodeStartMethodNegativeParametersSupport", function() { return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport; });
var testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = function testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext) {
  var nativeAudioBufferSourceNode = nativeContext.createOscillator();

  try {
    nativeAudioBufferSourceNode.start(-1);
  } catch (err) {
    return err instanceof RangeError;
  }

  return false;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js ***!
  \************************************************************************************************************************************************/
/*! exports provided: testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport", function() { return testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport; });
var testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = function testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext) {
  var nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
  var nativeAudioBufferSourceNode = nativeContext.createBufferSource();
  nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
  nativeAudioBufferSourceNode.start();
  nativeAudioBufferSourceNode.stop();

  try {
    nativeAudioBufferSourceNode.stop();
    return true;
  } catch (_unused) {
    return false;
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js":
/*!**************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js ***!
  \**************************************************************************************************************************************************/
/*! exports provided: testAudioScheduledSourceNodeStopMethodNegativeParametersSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testAudioScheduledSourceNodeStopMethodNegativeParametersSupport", function() { return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport; });
var testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = function testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext) {
  var nativeAudioBufferSourceNode = nativeContext.createOscillator();

  try {
    nativeAudioBufferSourceNode.stop(-1);
  } catch (err) {
    return err instanceof RangeError;
  }

  return false;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js ***!
  \************************************************************************************************************************/
/*! exports provided: testClonabilityOfAudioWorkletNodeOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testClonabilityOfAudioWorkletNodeOptions", function() { return testClonabilityOfAudioWorkletNodeOptions; });
var testClonabilityOfAudioWorkletNodeOptions = function testClonabilityOfAudioWorkletNodeOptions(audioWorkletNodeOptions) {
  var _MessageChannel = new MessageChannel(),
      port1 = _MessageChannel.port1;

  try {
    // This will throw an error if the audioWorkletNodeOptions are not clonable.
    port1.postMessage(audioWorkletNodeOptions);
  } finally {
    port1.close();
  }
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js ***!
  \****************************************************************************************************************/
/*! exports provided: testDomExceptionConstructorSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testDomExceptionConstructorSupport", function() { return testDomExceptionConstructorSupport; });
/*
 * Bug #122: Edge up to version v18 did not allow to construct a DOMException'. It also had a couple more bugs but since this is easy to
 * test it's used here as a placeholder.
 *
 * Bug #27: Edge up to version v18 did reject an invalid arrayBuffer passed to decodeAudioData() with a DOMException.
 *
 * Bug #50: Edge up to version v18 did not allow to create AudioNodes on a closed context.
 *
 * Bug #57: Edge up to version v18 did not throw an error when assigning the type of an OscillatorNode to 'custom'.
 *
 * Bug #63: Edge up to version v18 did not expose the mediaElement property of a MediaElementAudioSourceNode.
 *
 * Bug #64: Edge up to version v18 did not support the MediaStreamAudioDestinationNode.
 *
 * Bug #71: Edge up to version v18 did not allow to set the buffer of an AudioBufferSourceNode to null.
 *
 * Bug #93: Edge up to version v18 did set the sampleRate of an AudioContext to zero when it was closed.
 *
 * Bug #101: Edge up to version v18 refused to execute decodeAudioData() on a closed context.
 *
 * Bug #106: Edge up to version v18 did not expose the maxValue and minValue properties of the pan AudioParam of a StereoPannerNode.
 *
 * Bug #110: Edge up to version v18 did not expose the maxValue and minValue properties of the attack, knee, ratio, release and threshold AudioParams of a DynamicsCompressorNode.
 *
 * Bug #123: Edge up to version v18 did not support HRTF as the panningModel for a PannerNode.
 *
 * Bug #145: Edge up to version v18 did throw an IndexSizeError when an OfflineAudioContext was created with a sampleRate of zero.
 *
 * Bug #161: Edge up to version v18 did not expose the maxValue and minValue properties of the delayTime AudioParam of a DelayNode.
 */
var testDomExceptionConstructorSupport = function testDomExceptionConstructorSupport() {
  try {
    new DOMException(); // tslint:disable-line:no-unused-expression
  } catch (_unused) {
    return false;
  }

  return true;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js ***!
  \**********************************************************************************************/
/*! exports provided: testPromiseSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testPromiseSupport", function() { return testPromiseSupport; });
var testPromiseSupport = function testPromiseSupport(nativeContext) {
  // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.
  var uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);

  try {
    // Bug #1: Safari requires a successCallback.
    var promise = nativeContext.decodeAudioData(uint32Array.buffer, function () {// Ignore the success callback.
    });

    if (promise === undefined) {
      return false;
    }

    promise.catch(function () {// Ignore rejected errors.
    });
    return true;
  } catch (_unused) {// Ignore errors.
  }

  return false;
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js ***!
  \****************************************************************************************************/
/*! exports provided: testTransferablesSupport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "testTransferablesSupport", function() { return testTransferablesSupport; });
// Safari at version 11 did not support transferables.
var testTransferablesSupport = function testTransferablesSupport() {
  return new Promise(function (resolve) {
    var arrayBuffer = new ArrayBuffer(0);

    var _MessageChannel = new MessageChannel(),
        port1 = _MessageChannel.port1,
        port2 = _MessageChannel.port2;

    port1.onmessage = function (_ref) {
      var data = _ref.data;
      return resolve(data !== null);
    };

    port2.postMessage(arrayBuffer, [arrayBuffer]);
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js ***!
  \****************************************************************************************************/
/*! exports provided: visitEachAudioNodeOnce */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "visitEachAudioNodeOnce", function() { return visitEachAudioNodeOnce; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var visitEachAudioNodeOnce = function visitEachAudioNodeOnce(cycles, visitor) {
  var counts = new Map();

  var _iterator = _createForOfIteratorHelper(cycles),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var cycle = _step.value;

      var _iterator2 = _createForOfIteratorHelper(cycle),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var audioNode = _step2.value;
          var count = counts.get(audioNode);
          counts.set(audioNode, count === undefined ? 1 : count + 1);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  counts.forEach(function (count, audioNode) {
    return visitor(audioNode, count);
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js ***!
  \******************************************************************************************************************************/
/*! exports provided: wrapAnalyserNodeGetFloatTimeDomainDataMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAnalyserNodeGetFloatTimeDomainDataMethod", function() { return wrapAnalyserNodeGetFloatTimeDomainDataMethod; });
var wrapAnalyserNodeGetFloatTimeDomainDataMethod = function wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode) {
  nativeAnalyserNode.getFloatTimeDomainData = function (array) {
    var byteTimeDomainData = new Uint8Array(array.length);
    nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);
    var length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);

    for (var i = 0; i < length; i += 1) {
      array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;
    }

    return array;
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js ***!
  \*******************************************************************************************************************/
/*! exports provided: wrapAudioBufferGetChannelDataMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAudioBufferGetChannelDataMethod", function() { return wrapAudioBufferGetChannelDataMethod; });
/* harmony import */ var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/index-size-error */ "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js");

var wrapAudioBufferGetChannelDataMethod = function wrapAudioBufferGetChannelDataMethod(audioBuffer) {
  audioBuffer.getChannelData = function (getChannelData) {
    return function (channel) {
      try {
        return getChannelData.call(audioBuffer, channel);
      } catch (err) {
        if (err.code === 12) {
          throw Object(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__["createIndexSizeError"])();
        }

        throw err;
      }
    };
  }(audioBuffer.getChannelData);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js ***!
  \**************************************************************************************************************************************/
/*! exports provided: wrapAudioBufferSourceNodeStartMethodConsecutiveCalls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAudioBufferSourceNodeStartMethodConsecutiveCalls", function() { return wrapAudioBufferSourceNodeStartMethodConsecutiveCalls; });
/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");

var wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = function wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode) {
  nativeAudioBufferSourceNode.start = function (start) {
    var isScheduled = false;
    return function () {
      var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var duration = arguments.length > 2 ? arguments[2] : undefined;

      if (isScheduled) {
        throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
      }

      start.call(nativeAudioBufferSourceNode, when, offset, duration);
      isScheduled = true;
    };
  }(nativeAudioBufferSourceNode.start);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js ***!
  \************************************************************************************************************************************/
/*! exports provided: wrapAudioBufferSourceNodeStartMethodOffsetClamping */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAudioBufferSourceNodeStartMethodOffsetClamping", function() { return wrapAudioBufferSourceNodeStartMethodOffsetClamping; });
var wrapAudioBufferSourceNodeStartMethodOffsetClamping = function wrapAudioBufferSourceNodeStartMethodOffsetClamping(nativeAudioBufferSourceNode) {
  nativeAudioBufferSourceNode.start = function (start) {
    return function () {
      var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var duration = arguments.length > 2 ? arguments[2] : undefined;
      var buffer = nativeAudioBufferSourceNode.buffer; // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.

      var clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset); // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.

      if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {
        start.call(nativeAudioBufferSourceNode, when, 0, 0);
      } else {
        start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);
      }
    };
  }(nativeAudioBufferSourceNode.start);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js ***!
  \***********************************************************************************************************/
/*! exports provided: wrapAudioNodeDisconnectMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAudioNodeDisconnectMethod", function() { return wrapAudioNodeDisconnectMethod; });
/* harmony import */ var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guards/native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }


var wrapAudioNodeDisconnectMethod = function wrapAudioNodeDisconnectMethod(nativeAudioNode) {
  var connections = new Map();

  nativeAudioNode.connect = function (connect) {
    // tslint:disable-next-line:invalid-void
    return function (destination) {
      var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var returnValue = Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destination) ? connect(destination, output, input) : connect(destination, output); // Save the new connection only if the calls to connect above didn't throw an error.

      var connectionsToDestination = connections.get(destination);

      if (connectionsToDestination === undefined) {
        connections.set(destination, [{
          input: input,
          output: output
        }]);
      } else {
        if (connectionsToDestination.every(function (connection) {
          return connection.input !== input || connection.output !== output;
        })) {
          connectionsToDestination.push({
            input: input,
            output: output
          });
        }
      }

      return returnValue;
    };
  }(nativeAudioNode.connect.bind(nativeAudioNode));

  nativeAudioNode.disconnect = function (disconnect) {
    return function (destinationOrOutput, output, input) {
      disconnect.apply(nativeAudioNode);

      if (destinationOrOutput === undefined) {
        connections.clear();
      } else if (typeof destinationOrOutput === 'number') {
        var _iterator = _createForOfIteratorHelper(connections),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var _ref3 = _step.value;

            var _ref2 = _slicedToArray(_ref3, 2);

            var destination = _ref2[0];
            var connectionsToDestination = _ref2[1];
            var filteredConnections = connectionsToDestination.filter(function (connection) {
              return connection.output !== destinationOrOutput;
            });

            if (filteredConnections.length === 0) {
              connections.delete(destination);
            } else {
              connections.set(destination, filteredConnections);
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      } else if (connections.has(destinationOrOutput)) {
        if (output === undefined) {
          connections.delete(destinationOrOutput);
        } else {
          var _connectionsToDestination = connections.get(destinationOrOutput);

          if (_connectionsToDestination !== undefined) {
            var _filteredConnections = _connectionsToDestination.filter(function (connection) {
              return connection.output !== output && (connection.input !== input || input === undefined);
            });

            if (_filteredConnections.length === 0) {
              connections.delete(destinationOrOutput);
            } else {
              connections.set(destinationOrOutput, _filteredConnections);
            }
          }
        }
      }

      var _iterator2 = _createForOfIteratorHelper(connections),
          _step2;

      try {
        var _loop = function _loop() {
          var _ref4 = _step2.value;
          _ref5 = _slicedToArray(_ref4, 2);
          var destination = _ref5[0];
          var connectionsToDestination = _ref5[1];
          connectionsToDestination.forEach(function (connection) {
            if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destination)) {
              nativeAudioNode.connect(destination, connection.output, connection.input);
            } else {
              nativeAudioNode.connect(destination, connection.output);
            }
          });
        };

        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _ref5;

          _loop();
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    };
  }(nativeAudioNode.disconnect);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: wrapAudioScheduledSourceNodeStartMethodNegativeParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAudioScheduledSourceNodeStartMethodNegativeParameters", function() { return wrapAudioScheduledSourceNodeStartMethodNegativeParameters; });
var wrapAudioScheduledSourceNodeStartMethodNegativeParameters = function wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioScheduledSourceNode) {
  nativeAudioScheduledSourceNode.start = function (start) {
    return function () {
      var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var duration = arguments.length > 2 ? arguments[2] : undefined;

      if (typeof duration === 'number' && duration < 0 || offset < 0 || when < 0) {
        throw new RangeError("The parameters can't be negative.");
      } // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.


      start.call(nativeAudioScheduledSourceNode, when, offset, duration);
    };
  }(nativeAudioScheduledSourceNode.start);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js ***!
  \****************************************************************************************************************************************/
/*! exports provided: wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls", function() { return wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls; });
/* harmony import */ var _intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./intercept-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

var wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = function wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioScheduledSourceNode, nativeContext) {
  var nativeGainNode = nativeContext.createGain();
  nativeAudioScheduledSourceNode.connect(nativeGainNode);

  var disconnectGainNode = function (disconnect) {
    return function () {
      // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
      disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);
      nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);
    };
  }(nativeAudioScheduledSourceNode.disconnect);

  nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);
  Object(_intercept_connections__WEBPACK_IMPORTED_MODULE_0__["interceptConnections"])(nativeAudioScheduledSourceNode, nativeGainNode);

  nativeAudioScheduledSourceNode.stop = function (stop) {
    var isStopped = false;
    return function () {
      var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      if (isStopped) {
        try {
          stop.call(nativeAudioScheduledSourceNode, when);
        } catch (_unused) {
          nativeGainNode.gain.setValueAtTime(0, when);
        }
      } else {
        stop.call(nativeAudioScheduledSourceNode, when);
        isStopped = true;
      }
    };
  }(nativeAudioScheduledSourceNode.stop);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js ***!
  \******************************************************************************************************************************************/
/*! exports provided: wrapAudioScheduledSourceNodeStopMethodNegativeParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAudioScheduledSourceNodeStopMethodNegativeParameters", function() { return wrapAudioScheduledSourceNodeStopMethodNegativeParameters; });
var wrapAudioScheduledSourceNodeStopMethodNegativeParameters = function wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioScheduledSourceNode) {
  nativeAudioScheduledSourceNode.stop = function (stop) {
    return function () {
      var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      if (when < 0) {
        throw new RangeError("The parameter can't be negative.");
      }

      stop.call(nativeAudioScheduledSourceNode, when);
    };
  }(nativeAudioScheduledSourceNode.stop);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js ***!
  \****************************************************************************************************/
/*! exports provided: wrapChannelSplitterNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapChannelSplitterNode", function() { return wrapChannelSplitterNode; });
/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");

var wrapChannelSplitterNode = function wrapChannelSplitterNode(channelSplitterNode) {
  var channelCount = channelSplitterNode.numberOfOutputs; // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.

  Object.defineProperty(channelSplitterNode, 'channelCount', {
    get: function get() {
      return channelCount;
    },
    set: function set(value) {
      if (value !== channelCount) {
        throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
      }
    }
  }); // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.

  Object.defineProperty(channelSplitterNode, 'channelCountMode', {
    get: function get() {
      return 'explicit';
    },
    set: function set(value) {
      if (value !== 'explicit') {
        throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
      }
    }
  }); // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.

  Object.defineProperty(channelSplitterNode, 'channelInterpretation', {
    get: function get() {
      return 'discrete';
    },
    set: function set(value) {
      if (value !== 'discrete') {
        throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
      }
    }
  });
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js ***!
  \*********************************************************************************************/
/*! exports provided: wrapEventListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapEventListener", function() { return wrapEventListener; });
var wrapEventListener = function wrapEventListener(target, eventListener) {
  return function (event) {
    var descriptor = {
      value: target
    };
    Object.defineProperties(event, {
      currentTarget: descriptor,
      target: descriptor
    });

    if (typeof eventListener === 'function') {
      return eventListener.call(target, event);
    }

    return eventListener.handleEvent.call(target, event);
  };
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js ***!
  \****************************************************************************************************************************/
/*! exports provided: wrapIIRFilterNodeGetFrequencyResponseMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapIIRFilterNodeGetFrequencyResponseMethod", function() { return wrapIIRFilterNodeGetFrequencyResponseMethod; });
/* harmony import */ var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../factories/invalid-access-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js");

var wrapIIRFilterNodeGetFrequencyResponseMethod = function wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode) {
  nativeIIRFilterNode.getFrequencyResponse = function (getFrequencyResponse) {
    return function (frequencyHz, magResponse, phaseResponse) {
      if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
        throw Object(_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidAccessError"])();
      }

      return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);
    };
  }(nativeIIRFilterNode.getFrequencyResponse);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js ***!
  \****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js ***!
  \**************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/index.js ***!
  \**********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _analyser_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./analyser-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _analyser_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analyser-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio-buffer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./audio-buffer-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./audio-buffer-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./audio-buffer-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_context_options__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./audio-context-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_destination_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_listener__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./audio-listener */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./audio-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_options__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./audio-node-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./audio-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./audio-param */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_descriptor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./audio-param-descriptor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_renderer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./audio-param-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_scheduled_source_node__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./audio-scheduled-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_scheduled_source_node_event_map__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./audio-scheduled-source-node-event-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./audio-worklet */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_node__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_node_event_map__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./audio-worklet-node-event-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_processor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./audio-worklet-processor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_processor_constructor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./audio-worklet-processor-constructor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _automation__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./automation */ "./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js");
/* empty/unused harmony star reexport *//* harmony import */ var _base_audio_context__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./base-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _biquad_filter_node__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _biquad_filter_options__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./biquad-filter-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_merger_options__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./channel-merger-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_splitter_options__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./channel-splitter-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _common_audio_context__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./common-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _common_offline_audio_context__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./common-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_node__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./constant-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./constant-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_options__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./constant-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convolver_node__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./convolver-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convolver_options__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./convolver-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delay_node__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./delay-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delay_options__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./delay-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./dynamics-compressor-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _dynamics_compressor_options__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./dynamics-compressor-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _gain_node__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./gain-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _gain_options__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./gain-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _iir_filter_node__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./iir-filter-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _iir_filter_options__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./iir-filter-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./media-element-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_element_audio_source_options__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./media-element-audio-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./media-stream-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./media-stream-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_audio_source_options__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./media-stream-audio-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./media-stream-track-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_track_audio_source_options__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./media-stream-track-audio-source-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_audio_context__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./minimal-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_base_audio_context__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./minimal-base-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_base_audio_context_event_map__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./minimal-base-audio-context-event-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_offline_audio_context__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./minimal-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_node_faker__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./native-audio-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_faker__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./native-audio-worklet-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_constant_source_node_faker__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./native-constant-source-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_convolver_node_faker__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./native-convolver-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_iir_filter_node_faker__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./native-iir-filter-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_panner_node_faker__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./native-panner-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_stereo_panner_node_faker__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./native-stereo-panner-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_wave_shaper_node_faker__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./native-wave-shaper-node-faker */ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js");
/* empty/unused harmony star reexport *//* harmony import */ var _offline_audio_completion_event__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./offline-audio-completion-event */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js");
/* empty/unused harmony star reexport *//* harmony import */ var _offline_audio_context__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _offline_audio_context_options__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./offline-audio-context-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_node__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./oscillator-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./oscillator-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_options__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./oscillator-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _panner_node__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./panner-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _panner_options__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./panner-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _periodic_wave__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./periodic-wave */ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js");
/* empty/unused harmony star reexport *//* harmony import */ var _periodic_wave_constraints__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./periodic-wave-constraints */ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js");
/* empty/unused harmony star reexport *//* harmony import */ var _periodic_wave_options__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./periodic-wave-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _read_only_map__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./read-only-map */ "./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js");
/* empty/unused harmony star reexport *//* harmony import */ var _stereo_panner_node__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./stereo-panner-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _stereo_panner_options__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./stereo-panner-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wave_shaper_node__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./wave-shaper-node */ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wave_shaper_options__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./wave-shaper-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _worklet_options__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./worklet-options */ "./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js");
/* empty/unused harmony star reexport */



















































































/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js ***!
  \****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// @todo This is currently named IWorkletOptions and not IAudioWorkletOptions because it defines the options of a generic Worklet.


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/module.js":
/*!************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/module.js ***!
  \************************************************************************/
/*! exports provided: AnalyserNode, AudioBuffer, AudioBufferSourceNode, addAudioWorkletModule, decodeAudioData, AudioContext, AudioWorkletNode, BiquadFilterNode, ChannelMergerNode, ChannelSplitterNode, ConvolverNode, ConstantSourceNode, DelayNode, DynamicsCompressorNode, GainNode, IIRFilterNode, MediaElementAudioSourceNode, MediaStreamAudioDestinationNode, MediaStreamAudioSourceNode, MediaStreamTrackAudioSourceNode, MinimalAudioContext, MinimalOfflineAudioContext, OfflineAudioContext, OscillatorNode, PannerNode, PeriodicWave, StereoPannerNode, WaveShaperNode, isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, isSupported */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnalyserNode", function() { return analyserNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AudioBuffer", function() { return audioBufferConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AudioBufferSourceNode", function() { return audioBufferSourceNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addAudioWorkletModule", function() { return addAudioWorkletModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decodeAudioData", function() { return decodeAudioData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AudioContext", function() { return audioContextConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AudioWorkletNode", function() { return audioWorkletNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BiquadFilterNode", function() { return biquadFilterNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChannelMergerNode", function() { return channelMergerNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChannelSplitterNode", function() { return channelSplitterNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConvolverNode", function() { return convolverNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConstantSourceNode", function() { return constantSourceNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DelayNode", function() { return delayNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DynamicsCompressorNode", function() { return dynamicsCompressorNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GainNode", function() { return gainNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IIRFilterNode", function() { return iIRFilterNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MediaElementAudioSourceNode", function() { return mediaElementAudioSourceNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MediaStreamAudioDestinationNode", function() { return mediaStreamAudioDestinationNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MediaStreamAudioSourceNode", function() { return mediaStreamAudioSourceNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MediaStreamTrackAudioSourceNode", function() { return mediaStreamTrackAudioSourceNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MinimalAudioContext", function() { return minimalAudioContextConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MinimalOfflineAudioContext", function() { return minimalOfflineAudioContextConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OfflineAudioContext", function() { return offlineAudioContextConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OscillatorNode", function() { return oscillatorNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PannerNode", function() { return pannerNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PeriodicWave", function() { return periodicWaveConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StereoPannerNode", function() { return stereoPannerNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaveShaperNode", function() { return waveShaperNodeConstructor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAnyAudioContext", function() { return isAnyAudioContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAnyAudioNode", function() { return isAnyAudioNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAnyAudioParam", function() { return isAnyAudioParam; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAnyOfflineAudioContext", function() { return isAnyOfflineAudioContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isSupported", function() { return isSupported; });
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! automation-events */ "./node_modules/automation-events/build/es5/bundle.js");
/* harmony import */ var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _factories_abort_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./factories/abort-error */ "./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js");
/* harmony import */ var _factories_add_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./factories/add-active-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js");
/* harmony import */ var _factories_add_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./factories/add-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js");
/* harmony import */ var _factories_add_audio_param_connections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./factories/add-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js");
/* harmony import */ var _factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./factories/add-audio-worklet-module */ "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js");
/* harmony import */ var _factories_add_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./factories/add-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js");
/* harmony import */ var _factories_add_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./factories/add-passive-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js");
/* harmony import */ var _factories_add_silent_connection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./factories/add-silent-connection */ "./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js");
/* harmony import */ var _factories_add_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./factories/add-unrendered-audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js");
/* harmony import */ var _factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./factories/analyser-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js");
/* harmony import */ var _factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./factories/analyser-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js");
/* harmony import */ var _factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./factories/audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js");
/* harmony import */ var _factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./factories/audio-buffer-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js");
/* harmony import */ var _factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./factories/audio-buffer-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js");
/* harmony import */ var _factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./factories/audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js");
/* harmony import */ var _factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./factories/audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js");
/* harmony import */ var _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./factories/audio-destination-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js");
/* harmony import */ var _factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./factories/audio-listener-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js");
/* harmony import */ var _factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./factories/audio-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js");
/* harmony import */ var _factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./factories/audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js");
/* harmony import */ var _factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./factories/audio-param-renderer */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js");
/* harmony import */ var _factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./factories/audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js");
/* harmony import */ var _factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./factories/audio-worklet-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js");
/* harmony import */ var _factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./factories/base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js");
/* harmony import */ var _factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./factories/biquad-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js");
/* harmony import */ var _factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./factories/biquad-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js");
/* harmony import */ var _factories_cache_test_result__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./factories/cache-test-result */ "./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js");
/* harmony import */ var _factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./factories/channel-merger-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js");
/* harmony import */ var _factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./factories/channel-merger-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js");
/* harmony import */ var _factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./factories/channel-splitter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js");
/* harmony import */ var _factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./factories/channel-splitter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js");
/* harmony import */ var _factories_connect_audio_param__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./factories/connect-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js");
/* harmony import */ var _factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./factories/connect-multiple-outputs */ "./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js");
/* harmony import */ var _factories_connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./factories/connected-native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js");
/* harmony import */ var _factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./factories/constant-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js");
/* harmony import */ var _factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./factories/constant-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js");
/* harmony import */ var _factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./factories/convert-number-to-unsigned-long */ "./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js");
/* harmony import */ var _factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./factories/convolver-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js");
/* harmony import */ var _factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./factories/convolver-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js");
/* harmony import */ var _factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./factories/create-native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js");
/* harmony import */ var _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./factories/data-clone-error */ "./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js");
/* harmony import */ var _factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./factories/decode-audio-data */ "./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js");
/* harmony import */ var _factories_decrement_cycle_counter__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./factories/decrement-cycle-counter */ "./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js");
/* harmony import */ var _factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./factories/delay-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js");
/* harmony import */ var _factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./factories/delay-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js");
/* harmony import */ var _factories_delete_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./factories/delete-active-input-connection-to-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js");
/* harmony import */ var _factories_delete_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./factories/delete-unrendered-audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js");
/* harmony import */ var _factories_detect_cycles__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./factories/detect-cycles */ "./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js");
/* harmony import */ var _factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./factories/disconnect-multiple-outputs */ "./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js");
/* harmony import */ var _factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./factories/dynamics-compressor-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js");
/* harmony import */ var _factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./factories/dynamics-compressor-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js");
/* harmony import */ var _factories_encoding_error__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./factories/encoding-error */ "./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js");
/* harmony import */ var _factories_evaluate_source__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./factories/evaluate-source */ "./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js");
/* harmony import */ var _factories_event_target_constructor__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./factories/event-target-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js");
/* harmony import */ var _factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./factories/expose-current-frame-and-current-time */ "./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js");
/* harmony import */ var _factories_fetch_source__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./factories/fetch-source */ "./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js");
/* harmony import */ var _factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./factories/gain-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js");
/* harmony import */ var _factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./factories/gain-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js");
/* harmony import */ var _factories_get_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./factories/get-active-audio-worklet-node-inputs */ "./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js");
/* harmony import */ var _factories_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./factories/get-audio-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js");
/* harmony import */ var _factories_get_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./factories/get-audio-node-tail-time */ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js");
/* harmony import */ var _factories_get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./factories/get-audio-param-renderer */ "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js");
/* harmony import */ var _factories_get_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./factories/get-backup-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js");
/* harmony import */ var _factories_get_native_context__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./factories/get-native-context */ "./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js");
/* harmony import */ var _factories_get_or_create_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./factories/get-or-create-backup-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js");
/* harmony import */ var _factories_get_unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./factories/get-unrendered-audio-worklet-nodes */ "./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js");
/* harmony import */ var _factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./factories/iir-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js");
/* harmony import */ var _factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./factories/iir-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js");
/* harmony import */ var _factories_increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./factories/increment-cycle-counter-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js");
/* harmony import */ var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./factories/index-size-error */ "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js");
/* harmony import */ var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./factories/invalid-access-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js");
/* harmony import */ var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./factories/invalid-state-error */ "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");
/* harmony import */ var _factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./factories/is-any-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js");
/* harmony import */ var _factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./factories/is-any-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js");
/* harmony import */ var _factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./factories/is-any-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js");
/* harmony import */ var _factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./factories/is-any-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js");
/* harmony import */ var _factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./factories/is-native-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js");
/* harmony import */ var _factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./factories/is-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js");
/* harmony import */ var _factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./factories/is-native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js");
/* harmony import */ var _factories_is_native_context__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./factories/is-native-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js");
/* harmony import */ var _factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./factories/is-native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js");
/* harmony import */ var _factories_is_secure_context__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./factories/is-secure-context */ "./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js");
/* harmony import */ var _factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./factories/is-supported-promise */ "./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js");
/* harmony import */ var _factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./factories/media-element-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js");
/* harmony import */ var _factories_media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./factories/media-stream-audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js");
/* harmony import */ var _factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./factories/media-stream-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js");
/* harmony import */ var _factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./factories/media-stream-track-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js");
/* harmony import */ var _factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./factories/minimal-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js");
/* harmony import */ var _factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./factories/minimal-base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js");
/* harmony import */ var _factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./factories/minimal-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js");
/* harmony import */ var _factories_monitor_connections__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./factories/monitor-connections */ "./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js");
/* harmony import */ var _factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./factories/native-analyser-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js");
/* harmony import */ var _factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./factories/native-audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js");
/* harmony import */ var _factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./factories/native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js");
/* harmony import */ var _factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./factories/native-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js");
/* harmony import */ var _factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./factories/native-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js");
/* harmony import */ var _factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js");
/* harmony import */ var _factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js");
/* harmony import */ var _factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./factories/native-audio-worklet-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js");
/* harmony import */ var _factories_native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./factories/native-biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js");
/* harmony import */ var _factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./factories/native-channel-merger-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js");
/* harmony import */ var _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./factories/native-channel-splitter-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js");
/* harmony import */ var _factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./factories/native-constant-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js");
/* harmony import */ var _factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./factories/native-constant-source-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js");
/* harmony import */ var _factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./factories/native-convolver-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js");
/* harmony import */ var _factories_native_delay_node__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./factories/native-delay-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js");
/* harmony import */ var _factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./factories/native-dynamics-compressor-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js");
/* harmony import */ var _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./factories/native-gain-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js");
/* harmony import */ var _factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./factories/native-iir-filter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js");
/* harmony import */ var _factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./factories/native-iir-filter-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js");
/* harmony import */ var _factories_native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./factories/native-media-element-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js");
/* harmony import */ var _factories_native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./factories/native-media-stream-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js");
/* harmony import */ var _factories_native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./factories/native-media-stream-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js");
/* harmony import */ var _factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./factories/native-media-stream-track-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js");
/* harmony import */ var _factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./factories/native-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js");
/* harmony import */ var _factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./factories/native-oscillator-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js");
/* harmony import */ var _factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./factories/native-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js");
/* harmony import */ var _factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./factories/native-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js");
/* harmony import */ var _factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./factories/native-periodic-wave-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js");
/* harmony import */ var _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./factories/native-script-processor-node */ "./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js");
/* harmony import */ var _factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./factories/native-stereo-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js");
/* harmony import */ var _factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./factories/native-stereo-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js");
/* harmony import */ var _factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./factories/native-wave-shaper-node-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js");
/* harmony import */ var _factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./factories/native-wave-shaper-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js");
/* harmony import */ var _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./factories/not-supported-error */ "./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js");
/* harmony import */ var _factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./factories/offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js");
/* harmony import */ var _factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./factories/oscillator-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js");
/* harmony import */ var _factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./factories/oscillator-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js");
/* harmony import */ var _factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./factories/panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js");
/* harmony import */ var _factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./factories/panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js");
/* harmony import */ var _factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./factories/periodic-wave-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js");
/* harmony import */ var _factories_render_automation__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./factories/render-automation */ "./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js");
/* harmony import */ var _factories_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./factories/render-inputs-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js");
/* harmony import */ var _factories_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./factories/render-inputs-of-audio-param */ "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js");
/* harmony import */ var _factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./factories/render-native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js");
/* harmony import */ var _factories_set_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./factories/set-active-audio-worklet-node-inputs */ "./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js");
/* harmony import */ var _factories_set_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./factories/set-audio-node-tail-time */ "./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js");
/* harmony import */ var _factories_start_rendering__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./factories/start-rendering */ "./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js");
/* harmony import */ var _factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./factories/stereo-panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js");
/* harmony import */ var _factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./factories/stereo-panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js");
/* harmony import */ var _factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./factories/test-audio-buffer-constructor-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js");
/* harmony import */ var _factories_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./factories/test-audio-buffer-copy-channel-methods-subarray-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js");
/* harmony import */ var _factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./factories/test-audio-context-close-method-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js");
/* harmony import */ var _factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./factories/test-audio-context-decode-audio-data-method-type-error-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js");
/* harmony import */ var _factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./factories/test-audio-context-options-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js");
/* harmony import */ var _factories_test_audio_node_connect_method_support__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./factories/test-audio-node-connect-method-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js");
/* harmony import */ var _factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./factories/test-audio-worklet-processor-no-outputs-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js");
/* harmony import */ var _factories_test_audio_worklet_processor_post_message_support__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./factories/test-audio-worklet-processor-post-message-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js");
/* harmony import */ var _factories_test_channel_merger_node_channel_count_support__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./factories/test-channel-merger-node-channel-count-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js");
/* harmony import */ var _factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./factories/test-constant-source-node-accurate-scheduling-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js");
/* harmony import */ var _factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./factories/test-convolver-node-buffer-reassignability-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js");
/* harmony import */ var _factories_test_convolver_node_channel_count_support__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./factories/test-convolver-node-channel-count-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js");
/* harmony import */ var _factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./factories/test-is-secure-context-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js");
/* harmony import */ var _factories_test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js");
/* harmony import */ var _factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./factories/test-offline-audio-context-current-time-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js");
/* harmony import */ var _factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./factories/test-stereo-panner-node-default-value-support */ "./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js");
/* harmony import */ var _factories_unknown_error__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./factories/unknown-error */ "./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js");
/* harmony import */ var _factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./factories/wave-shaper-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js");
/* harmony import */ var _factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./factories/wave-shaper-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js");
/* harmony import */ var _factories_window__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./factories/window */ "./node_modules/standardized-audio-context/build/es2019/factories/window.js");
/* harmony import */ var _factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-copy-channel-methods */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js");
/* harmony import */ var _factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js");
/* harmony import */ var _factories_wrap_audio_buffer_source_node_stop_method_nullified_buffer__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js");
/* harmony import */ var _factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./factories/wrap-channel-merger-node */ "./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js");
/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./globals */ "./node_modules/standardized-audio-context/build/es2019/globals.js");
/* harmony import */ var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./helpers/connect-native-audio-node-to-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js");
/* harmony import */ var _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./helpers/disconnect-native-audio-node-from-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js");
/* harmony import */ var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./helpers/get-audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
/* harmony import */ var _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./helpers/get-audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
/* harmony import */ var _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./helpers/get-event-listeners-of-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./helpers/get-native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
/* harmony import */ var _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./helpers/get-native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js");
/* harmony import */ var _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./helpers/get-value-for-key */ "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
/* harmony import */ var _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./helpers/insert-element-in-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
/* harmony import */ var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./helpers/is-active-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
/* harmony import */ var _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./helpers/is-dc-curve */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js");
/* harmony import */ var _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./helpers/is-part-of-a-cycle */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js");
/* harmony import */ var _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./helpers/is-passive-audio-node */ "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js");
/* harmony import */ var _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./helpers/overwrite-accessors */ "./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js");
/* harmony import */ var _helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./helpers/pick-element-from-set */ "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");
/* harmony import */ var _helpers_sanitize_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./helpers/sanitize-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js");
/* harmony import */ var _helpers_sanitize_channel_splitter_options__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./helpers/sanitize-channel-splitter-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js");
/* harmony import */ var _helpers_sanitize_periodic_wave_options__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./helpers/sanitize-periodic-wave-options */ "./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js");
/* harmony import */ var _helpers_set_value_at_time_until_possible__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./helpers/set-value-at-time-until-possible */ "./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js");
/* harmony import */ var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js");
/* harmony import */ var _helpers_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js");
/* harmony import */ var _helpers_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./helpers/test-audio-buffer-source-node-start-method-offset-clamping-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js");
/* harmony import */ var _helpers_test_audio_buffer_source_node_stop_method_nullified_buffer_support__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js");
/* harmony import */ var _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js");
/* harmony import */ var _helpers_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js");
/* harmony import */ var _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js");
/* harmony import */ var _helpers_test_dom_exception_constructor_support__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./helpers/test-dom-exception-constructor-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js");
/* harmony import */ var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./helpers/test-promise-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
/* harmony import */ var _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./helpers/test-transferables-support */ "./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js");
/* harmony import */ var _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./helpers/wrap-audio-buffer-source-node-start-method-offset-clamping */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js");
/* harmony import */ var _helpers_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js");
/* harmony import */ var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./helpers/wrap-event-listener */ "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js");
/* harmony import */ var _interfaces_index__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./interfaces/index */ "./node_modules/standardized-audio-context/build/es2019/interfaces/index.js");
/* empty/unused harmony star reexport *//* harmony import */ var _types_index__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./types/index */ "./node_modules/standardized-audio-context/build/es2019/types/index.js");
/* empty/unused harmony star reexport */





































































































































































































/*
 * @todo Explicitly referencing the barrel file seems to be necessary when enabling the
 * isolatedModules compiler option.
 */



var addActiveInputConnectionToAudioNode = Object(_factories_add_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_2__["createAddActiveInputConnectionToAudioNode"])(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__["insertElementInSet"]);
var addPassiveInputConnectionToAudioNode = Object(_factories_add_passive_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_7__["createAddPassiveInputConnectionToAudioNode"])(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__["insertElementInSet"]);
var deleteActiveInputConnectionToAudioNode = Object(_factories_delete_active_input_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_46__["createDeleteActiveInputConnectionToAudioNode"])(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_180__["pickElementFromSet"]);
var audioNodeTailTimeStore = new WeakMap();
var getAudioNodeTailTime = Object(_factories_get_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_61__["createGetAudioNodeTailTime"])(audioNodeTailTimeStore);
var cacheTestResult = Object(_factories_cache_test_result__WEBPACK_IMPORTED_MODULE_27__["createCacheTestResult"])(new Map(), new WeakMap());
var window = Object(_factories_window__WEBPACK_IMPORTED_MODULE_160__["createWindow"])();
var createNativeAnalyserNode = Object(_factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_92__["createNativeAnalyserNodeFactory"])(cacheTestResult, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"]);
var getAudioNodeRenderer = Object(_factories_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_60__["createGetAudioNodeRenderer"])(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioNodeConnections"]);
var renderInputsOfAudioNode = Object(_factories_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_133__["createRenderInputsOfAudioNode"])(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioNodeConnections"], getAudioNodeRenderer, _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__["isPartOfACycle"]);
var createAnalyserNodeRenderer = Object(_factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_11__["createAnalyserNodeRendererFactory"])(createNativeAnalyserNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderInputsOfAudioNode);
var getNativeContext = Object(_factories_get_native_context__WEBPACK_IMPORTED_MODULE_64__["createGetNativeContext"])(_globals__WEBPACK_IMPORTED_MODULE_165__["CONTEXT_STORE"]);
var nativeOfflineAudioContextConstructor = Object(_factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_115__["createNativeOfflineAudioContextConstructor"])(window);
var isNativeOfflineAudioContext = Object(_factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_81__["createIsNativeOfflineAudioContext"])(nativeOfflineAudioContextConstructor);
var audioParamAudioNodeStore = new WeakMap();
var eventTargetConstructor = Object(_factories_event_target_constructor__WEBPACK_IMPORTED_MODULE_54__["createEventTargetConstructor"])(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_197__["wrapEventListener"]);
var nativeAudioContextConstructor = Object(_factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_95__["createNativeAudioContextConstructor"])(window);
var isNativeAudioContext = Object(_factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_77__["createIsNativeAudioContext"])(nativeAudioContextConstructor);
var isNativeAudioNode = Object(_factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_78__["createIsNativeAudioNode"])(window);
var isNativeAudioParam = Object(_factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_79__["createIsNativeAudioParam"])(window);
var audioNodeConstructor = Object(_factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_19__["createAudioNodeConstructor"])(Object(_factories_add_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__["createAddAudioNodeConnections"])(_globals__WEBPACK_IMPORTED_MODULE_165__["AUDIO_NODE_CONNECTIONS_STORE"]), Object(_factories_add_connection_to_audio_node__WEBPACK_IMPORTED_MODULE_6__["createAddConnectionToAudioNode"])(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__["connectNativeAudioNodeToNativeAudioNode"], deleteActiveInputConnectionToAudioNode, _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__["disconnectNativeAudioNodeFromNativeAudioNode"], _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioNodeConnections"], getAudioNodeTailTime, _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_170__["getEventListenersOfAudioNode"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__["insertElementInSet"], _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__["isActiveAudioNode"], _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__["isPartOfACycle"], _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_178__["isPassiveAudioNode"]), cacheTestResult, Object(_factories_increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_69__["createIncrementCycleCounterFactory"])(_globals__WEBPACK_IMPORTED_MODULE_165__["CYCLE_COUNTERS"], _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__["disconnectNativeAudioNodeFromNativeAudioNode"], _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioNodeConnections"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_172__["getNativeAudioParam"], _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__["isActiveAudioNode"]), _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"], _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__["createInvalidAccessError"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], Object(_factories_decrement_cycle_counter__WEBPACK_IMPORTED_MODULE_43__["createDecrementCycleCounter"])(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__["connectNativeAudioNodeToNativeAudioNode"], _globals__WEBPACK_IMPORTED_MODULE_165__["CYCLE_COUNTERS"], _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioNodeConnections"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_172__["getNativeAudioParam"], getNativeContext, _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_175__["isActiveAudioNode"], isNativeOfflineAudioContext), Object(_factories_detect_cycles__WEBPACK_IMPORTED_MODULE_48__["createDetectCycles"])(audioParamAudioNodeStore, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioNodeConnections"], _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_173__["getValueForKey"]), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);
var analyserNodeConstructor = Object(_factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_10__["createAnalyserNodeConstructor"])(audioNodeConstructor, createAnalyserNodeRenderer, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"], createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);

var audioBufferStore = new WeakSet();
var nativeAudioBufferConstructor = Object(_factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_93__["createNativeAudioBufferConstructor"])(window);
var convertNumberToUnsignedLong = Object(_factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_37__["createConvertNumberToUnsignedLong"])(new Uint32Array(1));
var wrapAudioBufferCopyChannelMethods = Object(_factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_161__["createWrapAudioBufferCopyChannelMethods"])(convertNumberToUnsignedLong, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"]);
var wrapAudioBufferCopyChannelMethodsOutOfBounds = Object(_factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_162__["createWrapAudioBufferCopyChannelMethodsOutOfBounds"])(convertNumberToUnsignedLong);
var audioBufferConstructor = Object(_factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_12__["createAudioBufferConstructor"])(audioBufferStore, cacheTestResult, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, Object(_factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_141__["createTestAudioBufferConstructorSupport"])(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);

var addSilentConnection = Object(_factories_add_silent_connection__WEBPACK_IMPORTED_MODULE_8__["createAddSilentConnection"])(_factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"]);
var renderInputsOfAudioParam = Object(_factories_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_134__["createRenderInputsOfAudioParam"])(getAudioNodeRenderer, _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_169__["getAudioParamConnections"], _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_177__["isPartOfACycle"]);
var connectAudioParam = Object(_factories_connect_audio_param__WEBPACK_IMPORTED_MODULE_32__["createConnectAudioParam"])(renderInputsOfAudioParam);
var createNativeAudioBufferSourceNode = Object(_factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_94__["createNativeAudioBufferSourceNodeFactory"])(addSilentConnection, cacheTestResult, _helpers_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_186__["testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport"], _helpers_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_187__["testAudioBufferSourceNodeStartMethodOffsetClampingSupport"], _helpers_test_audio_buffer_source_node_stop_method_nullified_buffer_support__WEBPACK_IMPORTED_MODULE_188__["testAudioBufferSourceNodeStopMethodNullifiedBufferSupport"], _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_189__["testAudioScheduledSourceNodeStartMethodNegativeParametersSupport"], _helpers_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_190__["testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport"], _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_191__["testAudioScheduledSourceNodeStopMethodNegativeParametersSupport"], _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_195__["wrapAudioBufferSourceNodeStartMethodOffsetClamping"], Object(_factories_wrap_audio_buffer_source_node_stop_method_nullified_buffer__WEBPACK_IMPORTED_MODULE_163__["createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer"])(_helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__["overwriteAccessors"]), _helpers_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_196__["wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls"]);
var renderAutomation = Object(_factories_render_automation__WEBPACK_IMPORTED_MODULE_132__["createRenderAutomation"])(Object(_factories_get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_62__["createGetAudioParamRenderer"])(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_169__["getAudioParamConnections"]), renderInputsOfAudioParam);
var createAudioBufferSourceNodeRenderer = Object(_factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__["createAudioBufferSourceNodeRendererFactory"])(connectAudioParam, createNativeAudioBufferSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var createAudioParam = Object(_factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_20__["createAudioParamFactory"])(Object(_factories_add_audio_param_connections__WEBPACK_IMPORTED_MODULE_4__["createAddAudioParamConnections"])(_globals__WEBPACK_IMPORTED_MODULE_165__["AUDIO_PARAM_CONNECTIONS_STORE"]), audioParamAudioNodeStore, _globals__WEBPACK_IMPORTED_MODULE_165__["AUDIO_PARAM_STORE"], _factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_21__["createAudioParamRenderer"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createCancelAndHoldAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createCancelScheduledValuesAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createExponentialRampToValueAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createLinearRampToValueAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createSetTargetAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createSetValueAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createSetValueCurveAutomationEvent"], nativeAudioContextConstructor, _helpers_set_value_at_time_until_possible__WEBPACK_IMPORTED_MODULE_184__["setValueAtTimeUntilPossible"]);
var audioBufferSourceNodeConstructor = Object(_factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_13__["createAudioBufferSourceNodeConstructor"])(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_197__["wrapEventListener"]);

var audioDestinationNodeConstructor = Object(_factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_16__["createAudioDestinationNodeConstructor"])(audioNodeConstructor, _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_17__["createAudioDestinationNodeRenderer"], _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], Object(_factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_96__["createNativeAudioDestinationNodeFactory"])(_factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__["overwriteAccessors"]), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);
var createBiquadFilterNodeRenderer = Object(_factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_26__["createBiquadFilterNodeRendererFactory"])(connectAudioParam, _factories_native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_100__["createNativeBiquadFilterNode"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var setAudioNodeTailTime = Object(_factories_set_audio_node_tail_time__WEBPACK_IMPORTED_MODULE_137__["createSetAudioNodeTailTime"])(audioNodeTailTimeStore);
var biquadFilterNodeConstructor = Object(_factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_25__["createBiquadFilterNodeConstructor"])(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__["createInvalidAccessError"], _factories_native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_100__["createNativeBiquadFilterNode"], getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var monitorConnections = Object(_factories_monitor_connections__WEBPACK_IMPORTED_MODULE_91__["createMonitorConnections"])(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_174__["insertElementInSet"], isNativeAudioNode);
var wrapChannelMergerNode = Object(_factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_164__["createWrapChannelMergerNode"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], monitorConnections);
var createNativeChannelMergerNode = Object(_factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_101__["createNativeChannelMergerNodeFactory"])(nativeAudioContextConstructor, wrapChannelMergerNode);
var createChannelMergerNodeRenderer = Object(_factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_29__["createChannelMergerNodeRendererFactory"])(createNativeChannelMergerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderInputsOfAudioNode);
var channelMergerNodeConstructor = Object(_factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_28__["createChannelMergerNodeConstructor"])(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);
var createChannelSplitterNodeRenderer = Object(_factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_31__["createChannelSplitterNodeRendererFactory"])(_factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__["createNativeChannelSplitterNode"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderInputsOfAudioNode);
var channelSplitterNodeConstructor = Object(_factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_30__["createChannelSplitterNodeConstructor"])(audioNodeConstructor, createChannelSplitterNodeRenderer, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__["createNativeChannelSplitterNode"], getNativeContext, isNativeOfflineAudioContext, _helpers_sanitize_channel_splitter_options__WEBPACK_IMPORTED_MODULE_182__["sanitizeChannelSplitterOptions"]);
var createNativeConstantSourceNodeFaker = Object(_factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_104__["createNativeConstantSourceNodeFakerFactory"])(addSilentConnection, createNativeAudioBufferSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], monitorConnections);
var createNativeConstantSourceNode = Object(_factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_103__["createNativeConstantSourceNodeFactory"])(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_189__["testAudioScheduledSourceNodeStartMethodNegativeParametersSupport"], _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_191__["testAudioScheduledSourceNodeStopMethodNegativeParametersSupport"]);
var createConstantSourceNodeRenderer = Object(_factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_36__["createConstantSourceNodeRendererFactory"])(connectAudioParam, createNativeConstantSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var constantSourceNodeConstructor = Object(_factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_35__["createConstantSourceNodeConstructor"])(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_197__["wrapEventListener"]);
var createNativeConvolverNode = Object(_factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_105__["createNativeConvolverNodeFactory"])(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__["overwriteAccessors"]);
var createConvolverNodeRenderer = Object(_factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__["createConvolverNodeRendererFactory"])(createNativeConvolverNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderInputsOfAudioNode);
var convolverNodeConstructor = Object(_factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_38__["createConvolverNodeConstructor"])(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createDelayNodeRenderer = Object(_factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_45__["createDelayNodeRendererFactory"])(connectAudioParam, _factories_native_delay_node__WEBPACK_IMPORTED_MODULE_106__["createNativeDelayNode"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var delayNodeConstructor = Object(_factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_44__["createDelayNodeConstructor"])(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, _factories_native_delay_node__WEBPACK_IMPORTED_MODULE_106__["createNativeDelayNode"], getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createNativeDynamicsCompressorNode = Object(_factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_107__["createNativeDynamicsCompressorNodeFactory"])(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"]);
var createDynamicsCompressorNodeRenderer = Object(_factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_51__["createDynamicsCompressorNodeRendererFactory"])(connectAudioParam, createNativeDynamicsCompressorNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var dynamicsCompressorNodeConstructor = Object(_factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_50__["createDynamicsCompressorNodeConstructor"])(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createGainNodeRenderer = Object(_factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_58__["createGainNodeRendererFactory"])(connectAudioParam, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var gainNodeConstructor = Object(_factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_57__["createGainNodeConstructor"])(audioNodeConstructor, createAudioParam, createGainNodeRenderer, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], getNativeContext, isNativeOfflineAudioContext);
var createNativeIIRFilterNodeFaker = Object(_factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_110__["createNativeIIRFilterNodeFakerFactory"])(_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_71__["createInvalidAccessError"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__["createNativeScriptProcessorNode"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"]);
var renderNativeOfflineAudioContext = Object(_factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_135__["createRenderNativeOfflineAudioContext"])(cacheTestResult, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__["createNativeScriptProcessorNode"], Object(_factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_155__["createTestOfflineAudioContextCurrentTimeSupport"])(_factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], nativeOfflineAudioContextConstructor));
var createIIRFilterNodeRenderer = Object(_factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_68__["createIIRFilterNodeRendererFactory"])(createNativeAudioBufferSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
var createNativeIIRFilterNode = Object(_factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_109__["createNativeIIRFilterNodeFactory"])(createNativeIIRFilterNodeFaker);
var iIRFilterNodeConstructor = Object(_factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_67__["createIIRFilterNodeConstructor"])(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createAudioListener = Object(_factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_18__["createAudioListenerFactory"])(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__["createNativeScriptProcessorNode"], isNativeOfflineAudioContext);
var unrenderedAudioWorkletNodeStore = new WeakMap();
var minimalBaseAudioContextConstructor = Object(_factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_89__["createMinimalBaseAudioContextConstructor"])(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_197__["wrapEventListener"]);
var createNativeOscillatorNode = Object(_factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_116__["createNativeOscillatorNodeFactory"])(addSilentConnection, cacheTestResult, _helpers_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_189__["testAudioScheduledSourceNodeStartMethodNegativeParametersSupport"], _helpers_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_190__["testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport"], _helpers_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_191__["testAudioScheduledSourceNodeStopMethodNegativeParametersSupport"], _helpers_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_196__["wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls"]);
var createOscillatorNodeRenderer = Object(_factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_128__["createOscillatorNodeRendererFactory"])(connectAudioParam, createNativeOscillatorNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var oscillatorNodeConstructor = Object(_factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_127__["createOscillatorNodeConstructor"])(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_197__["wrapEventListener"]);
var createConnectedNativeAudioBufferSourceNode = Object(_factories_connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_34__["createConnectedNativeAudioBufferSourceNodeFactory"])(createNativeAudioBufferSourceNode);
var createNativeWaveShaperNodeFaker = Object(_factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_124__["createNativeWaveShaperNodeFakerFactory"])(createConnectedNativeAudioBufferSourceNode, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_176__["isDCCurve"], monitorConnections);
var createNativeWaveShaperNode = Object(_factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_123__["createNativeWaveShaperNodeFactory"])(createConnectedNativeAudioBufferSourceNode, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeWaveShaperNodeFaker, _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_176__["isDCCurve"], monitorConnections, nativeAudioContextConstructor, _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_179__["overwriteAccessors"]);
var createNativePannerNodeFaker = Object(_factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_118__["createNativePannerNodeFakerFactory"])(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_166__["connectNativeAudioNodeToNativeAudioNode"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeChannelMergerNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__["createNativeScriptProcessorNode"], createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_167__["disconnectNativeAudioNodeFromNativeAudioNode"], monitorConnections);
var createNativePannerNode = Object(_factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_117__["createNativePannerNodeFactory"])(createNativePannerNodeFaker);
var createPannerNodeRenderer = Object(_factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_130__["createPannerNodeRendererFactory"])(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], createNativePannerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
var pannerNodeConstructor = Object(_factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_129__["createPannerNodeConstructor"])(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var createNativePeriodicWave = Object(_factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_119__["createNativePeriodicWaveFactory"])(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"]);
var periodicWaveConstructor = Object(_factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_131__["createPeriodicWaveConstructor"])(createNativePeriodicWave, getNativeContext, new WeakSet(), _helpers_sanitize_periodic_wave_options__WEBPACK_IMPORTED_MODULE_183__["sanitizePeriodicWaveOptions"]);
var nativeStereoPannerNodeFakerFactory = Object(_factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_122__["createNativeStereoPannerNodeFakerFactory"])(createNativeChannelMergerNode, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__["createNativeChannelSplitterNode"], _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], monitorConnections);
var createNativeStereoPannerNode = Object(_factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_121__["createNativeStereoPannerNodeFactory"])(nativeStereoPannerNodeFakerFactory, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"]);
var createStereoPannerNodeRenderer = Object(_factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_140__["createStereoPannerNodeRendererFactory"])(connectAudioParam, createNativeStereoPannerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
var stereoPannerNodeConstructor = Object(_factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_139__["createStereoPannerNodeConstructor"])(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
var createWaveShaperNodeRenderer = Object(_factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_159__["createWaveShaperNodeRendererFactory"])(createNativeWaveShaperNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], renderInputsOfAudioNode);
var waveShaperNodeConstructor = Object(_factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_158__["createWaveShaperNodeConstructor"])(audioNodeConstructor, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);
var isSecureContext = Object(_factories_is_secure_context__WEBPACK_IMPORTED_MODULE_82__["createIsSecureContext"])(window);
var exposeCurrentFrameAndCurrentTime = Object(_factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_55__["createExposeCurrentFrameAndCurrentTime"])(window);
var backupOfflineAudioContextStore = new WeakMap();
var getOrCreateBackupOfflineAudioContext = Object(_factories_get_or_create_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_65__["createGetOrCreateBackupOfflineAudioContext"])(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);
var nativeAudioWorkletNodeConstructor = Object(_factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_97__["createNativeAudioWorkletNodeConstructor"])(window); // The addAudioWorkletModule() function is only available in a SecureContext.

var addAudioWorkletModule = isSecureContext ? Object(_factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_5__["createAddAudioWorkletModule"])(cacheTestResult, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], Object(_factories_evaluate_source__WEBPACK_IMPORTED_MODULE_53__["createEvaluateSource"])(window), exposeCurrentFrameAndCurrentTime, Object(_factories_fetch_source__WEBPACK_IMPORTED_MODULE_56__["createFetchSource"])(_factories_abort_error__WEBPACK_IMPORTED_MODULE_1__["createAbortError"]), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, new WeakMap(), new WeakMap(), Object(_factories_test_audio_worklet_processor_post_message_support__WEBPACK_IMPORTED_MODULE_148__["createTestAudioWorkletProcessorPostMessageSupport"])(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), // @todo window is guaranteed to be defined because isSecureContext checks that as well.
window) : undefined;
var isNativeContext = Object(_factories_is_native_context__WEBPACK_IMPORTED_MODULE_80__["createIsNativeContext"])(isNativeAudioContext, isNativeOfflineAudioContext);
var decodeAudioData = Object(_factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_42__["createDecodeAudioData"])(audioBufferStore, cacheTestResult, _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_41__["createDataCloneError"], _factories_encoding_error__WEBPACK_IMPORTED_MODULE_52__["createEncodingError"], new WeakSet(), getNativeContext, isNativeContext, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_185__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"], _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_193__["testPromiseSupport"], wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
var baseAudioContextConstructor = Object(_factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_24__["createBaseAudioContextConstructor"])(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);
var mediaElementAudioSourceNodeConstructor = Object(_factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_84__["createMediaElementAudioSourceNodeConstructor"])(audioNodeConstructor, _factories_native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_111__["createNativeMediaElementAudioSourceNode"], getNativeContext, isNativeOfflineAudioContext);
var mediaStreamAudioDestinationNodeConstructor = Object(_factories_media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_85__["createMediaStreamAudioDestinationNodeConstructor"])(audioNodeConstructor, _factories_native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_112__["createNativeMediaStreamAudioDestinationNode"], getNativeContext, isNativeOfflineAudioContext);
var mediaStreamAudioSourceNodeConstructor = Object(_factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_86__["createMediaStreamAudioSourceNodeConstructor"])(audioNodeConstructor, _factories_native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_113__["createNativeMediaStreamAudioSourceNode"], getNativeContext, isNativeOfflineAudioContext);
var createNativeMediaStreamTrackAudioSourceNode = Object(_factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_114__["createNativeMediaStreamTrackAudioSourceNodeFactory"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], isNativeOfflineAudioContext);
var mediaStreamTrackAudioSourceNodeConstructor = Object(_factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_87__["createMediaStreamTrackAudioSourceNodeConstructor"])(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);
var audioContextConstructor = Object(_factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_15__["createAudioContextConstructor"])(baseAudioContextConstructor, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], _factories_unknown_error__WEBPACK_IMPORTED_MODULE_157__["createUnknownError"], mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);

var getUnrenderedAudioWorkletNodes = Object(_factories_get_unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_66__["createGetUnrenderedAudioWorkletNodes"])(unrenderedAudioWorkletNodeStore);
var addUnrenderedAudioWorkletNode = Object(_factories_add_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_9__["createAddUnrenderedAudioWorkletNode"])(getUnrenderedAudioWorkletNodes);
var connectMultipleOutputs = Object(_factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_33__["createConnectMultipleOutputs"])(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"]);
var deleteUnrenderedAudioWorkletNode = Object(_factories_delete_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_47__["createDeleteUnrenderedAudioWorkletNode"])(getUnrenderedAudioWorkletNodes);
var disconnectMultipleOutputs = Object(_factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_49__["createDisconnectMultipleOutputs"])(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"]);
var activeAudioWorkletNodeInputsStore = new WeakMap();
var getActiveAudioWorkletNodeInputs = Object(_factories_get_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_59__["createGetActiveAudioWorkletNodeInputs"])(activeAudioWorkletNodeInputsStore, _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_173__["getValueForKey"]);
var createNativeAudioWorkletNodeFaker = Object(_factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_99__["createNativeAudioWorkletNodeFakerFactory"])(connectMultipleOutputs, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_70__["createIndexSizeError"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeChannelMergerNode, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__["createNativeChannelSplitterNode"], createNativeConstantSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], _factories_native_script_processor_node__WEBPACK_IMPORTED_MODULE_120__["createNativeScriptProcessorNode"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);
var createNativeAudioWorkletNode = Object(_factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_98__["createNativeAudioWorkletNodeFactory"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeAudioWorkletNodeFaker, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], monitorConnections);
var createAudioWorkletNodeRenderer = Object(_factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__["createAudioWorkletNodeRendererFactory"])(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, _factories_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_102__["createNativeChannelSplitterNode"], createNativeConstantSourceNode, _factories_native_gain_node__WEBPACK_IMPORTED_MODULE_108__["createNativeGainNode"], deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_171__["getNativeAudioNode"], nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
var getBackupOfflineAudioContext = Object(_factories_get_backup_offline_audio_context__WEBPACK_IMPORTED_MODULE_63__["createGetBackupOfflineAudioContext"])(backupOfflineAudioContextStore);
var setActiveAudioWorkletNodeInputs = Object(_factories_set_active_audio_worklet_node_inputs__WEBPACK_IMPORTED_MODULE_136__["createSetActiveAudioWorkletNodeInputs"])(activeAudioWorkletNodeInputsStore); // The AudioWorkletNode constructor is only available in a SecureContext.

var audioWorkletNodeConstructor = isSecureContext ? Object(_factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_22__["createAudioWorkletNodeConstructor"])(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioNodeConnections"], getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, _helpers_sanitize_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_181__["sanitizeAudioWorkletNodeOptions"], setActiveAudioWorkletNodeInputs, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_197__["wrapEventListener"]) : undefined;














var minimalAudioContextConstructor = Object(_factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_88__["createMinimalAudioContextConstructor"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], _factories_unknown_error__WEBPACK_IMPORTED_MODULE_157__["createUnknownError"], minimalBaseAudioContextConstructor, nativeAudioContextConstructor);

var createNativeOfflineAudioContext = Object(_factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_40__["createCreateNativeOfflineAudioContext"])(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_125__["createNotSupportedError"], nativeOfflineAudioContextConstructor);
var startRendering = Object(_factories_start_rendering__WEBPACK_IMPORTED_MODULE_138__["createStartRendering"])(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_185__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"], wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
var minimalOfflineAudioContextConstructor = Object(_factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_90__["createMinimalOfflineAudioContextConstructor"])(cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);

var offlineAudioContextConstructor = Object(_factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_126__["createOfflineAudioContextConstructor"])(baseAudioContextConstructor, cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_72__["createInvalidStateError"], createNativeOfflineAudioContext, startRendering);






var isAnyAudioContext = Object(_factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_73__["createIsAnyAudioContext"])(_globals__WEBPACK_IMPORTED_MODULE_165__["CONTEXT_STORE"], isNativeAudioContext);
var isAnyAudioNode = Object(_factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_74__["createIsAnyAudioNode"])(_globals__WEBPACK_IMPORTED_MODULE_165__["AUDIO_NODE_STORE"], isNativeAudioNode);
var isAnyAudioParam = Object(_factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_75__["createIsAnyAudioParam"])(_globals__WEBPACK_IMPORTED_MODULE_165__["AUDIO_PARAM_STORE"], isNativeAudioParam);
var isAnyOfflineAudioContext = Object(_factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_76__["createIsAnyOfflineAudioContext"])(_globals__WEBPACK_IMPORTED_MODULE_165__["CONTEXT_STORE"], isNativeOfflineAudioContext);
var isSupported = function isSupported() {
  return Object(_factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_83__["createIsSupportedPromise"])(cacheTestResult, Object(_factories_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_142__["createTestAudioBufferCopyChannelMethodsSubarraySupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_143__["createTestAudioContextCloseMethodSupport"])(nativeAudioContextConstructor), Object(_factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_144__["createTestAudioContextDecodeAudioDataMethodTypeErrorSupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_145__["createTestAudioContextOptionsSupport"])(nativeAudioContextConstructor), Object(_factories_test_audio_node_connect_method_support__WEBPACK_IMPORTED_MODULE_146__["createTestAudioNodeConnectMethodSupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_147__["createTestAudioWorkletProcessorNoOutputsSupport"])(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), Object(_factories_test_channel_merger_node_channel_count_support__WEBPACK_IMPORTED_MODULE_149__["createTestChannelMergerNodeChannelCountSupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_150__["createTestConstantSourceNodeAccurateSchedulingSupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_151__["createTestConvolverNodeBufferReassignabilitySupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_convolver_node_channel_count_support__WEBPACK_IMPORTED_MODULE_152__["createTestConvolverNodeChannelCountSupport"])(nativeOfflineAudioContextConstructor), _helpers_test_dom_exception_constructor_support__WEBPACK_IMPORTED_MODULE_192__["testDomExceptionConstructorSupport"], Object(_factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_153__["createTestIsSecureContextSupport"])(window), Object(_factories_test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_154__["createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport"])(nativeAudioContextConstructor), Object(_factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_156__["createTestStereoPannerNodeDefaultValueSupport"])(nativeOfflineAudioContextConstructor), _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_194__["testTransferablesSupport"]);
};

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/read-only-map.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/read-only-map.js ***!
  \*******************************************************************************/
/*! exports provided: ReadOnlyMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReadOnlyMap", function() { return ReadOnlyMap; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ReadOnlyMap = /*#__PURE__*/function () {
  function ReadOnlyMap(parameters) {
    _classCallCheck(this, ReadOnlyMap);

    this._map = new Map(parameters);
  }

  _createClass(ReadOnlyMap, [{
    key: "size",
    get: function get() {
      return this._map.size;
    }
  }, {
    key: "entries",
    value: function entries() {
      return this._map.entries();
    }
  }, {
    key: "forEach",
    value: function forEach(callback) {
      var _this = this;

      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      return this._map.forEach(function (value, key) {
        return callback.call(thisArg, value, key, _this);
      });
    }
  }, {
    key: "get",
    value: function get(name) {
      return this._map.get(name);
    }
  }, {
    key: "has",
    value: function has(name) {
      return this._map.has(name);
    }
  }, {
    key: "keys",
    value: function keys() {
      return this._map.keys();
    }
  }, {
    key: "values",
    value: function values() {
      return this._map.values();
    }
  }]);

  return ReadOnlyMap;
}();

/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/active-audio-worklet-node-inputs-store.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/active-audio-worklet-node-inputs-store.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-factory.js ***!
  \*************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-function.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-function.js ***!
  \**************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-function.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-function.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-factory.js ***!
  \**************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-function.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-function.js ***!
  \***************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js ***!
  \****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/any-context.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/any-context.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js ***!
  \*************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js ***!
  \****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-tail-time-store.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-tail-time-store.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/backup-offline-audio-context-store.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/backup-offline-audio-context-store.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js ***!
  \**********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js ***!
  \*******************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js ***!
  \*********************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js ***!
  \*************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/constructor.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/constructor.js ***!
  \***********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/context-store.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/context-store.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/context.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/context.js ***!
  \*******************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js ***!
  \**************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-factory.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-factory.js ***!
  \****************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-function.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-function.js ***!
  \*****************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js ***!
  \************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js ***!
  \*************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/event-handler.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/event-handler.js ***!
  \*************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js ***!
  \**********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-factory.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-function.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-factory.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-function.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-function.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-event-listeners-of-audio-node-function.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-event-listeners-of-audio-node-function.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-factory.js ***!
  \**************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-function.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-function.js ***!
  \***************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/index.js ***!
  \*****************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _abort_error_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abort-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _active_audio_worklet_node_inputs_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./active-audio-worklet-node-inputs-store */ "./node_modules/standardized-audio-context/build/es2019/types/active-audio-worklet-node-inputs-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _active_input_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./active-input-connection */ "./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_active_input_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-active-input-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_active_input_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./add-active-input-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-active-input-connection-to-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_audio_node_connections_factory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./add-audio-node-connections-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./add-audio-node-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_audio_param_connections_factory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./add-audio-param-connections-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./add-audio-param-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_audio_worklet_module_factory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./add-audio-worklet-module-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_audio_worklet_module_function__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./add-audio-worklet-module-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./add-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./add-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-connection-to-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_passive_input_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./add-passive-input-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_passive_input_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./add-passive-input-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-passive-input-connection-to-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_silent_connection_factory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./add-silent-connection-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_silent_connection_function__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./add-silent-connection-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./add-unrendered-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _add_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./add-unrendered-audio-worklet-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _analyser_node_constructor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./analyser-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _analyser_node_constructor_factory__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./analyser-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./analyser-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _analyser_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./analyser-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _any_audio_buffer__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./any-audio-buffer */ "./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _any_context__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./any-context */ "./node_modules/standardized-audio-context/build/es2019/types/any-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./audio-buffer-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./audio-buffer-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./audio-buffer-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./audio-buffer-source-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_buffer_store__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./audio-buffer-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_context_constructor__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_context_latency_category__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./audio-context-latency-category */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_context_state__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./audio-context-state */ "./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./audio-destination-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./audio-destination-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_listener_factory__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./audio-listener-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_listener_factory_factory__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./audio-listener-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_connections__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./audio-node-connections */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_connections_store__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./audio-node-connections-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_constructor__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./audio-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_constructor_factory__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./audio-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_output_connection__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./audio-node-output-connection */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./audio-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_store__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./audio-node-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_node_tail_time_store__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./audio-node-tail-time-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-node-tail-time-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_audio_node_store__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./audio-param-audio-node-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_connections__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./audio-param-connections */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_connections_store__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./audio-param-connections-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_factory__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_factory_factory__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./audio-param-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_map__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./audio-param-map */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_output_connection__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./audio-param-output-connection */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./audio-param-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_param_store__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./audio-param-store */ "./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./audio-worklet-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./audio-worklet-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _audio_worklet_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./audio-worklet-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _backup_offline_audio_context_store__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./backup-offline-audio-context-store */ "./node_modules/standardized-audio-context/build/es2019/types/backup-offline-audio-context-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./base-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./biquad-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _biquad_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./biquad-filter-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./biquad-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _biquad_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./biquad-filter-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _biquad_filter_type__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./biquad-filter-type */ "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_count_mode__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./channel-count-mode */ "./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_interpretation__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./channel-interpretation */ "./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./channel-merger-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_merger_node_constructor_factory__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./channel-merger-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./channel-merger-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_merger_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./channel-merger-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./channel-splitter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_splitter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./channel-splitter-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./channel-splitter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _channel_splitter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./channel-splitter-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _cache_test_result_factory__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./cache-test-result-factory */ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _cache_test_result_function__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./cache-test-result-function */ "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _connect_audio_param_factory__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./connect-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _connect_audio_param_function__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./connect-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _connect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./connect-multiple-outputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _connect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./connect-multiple-outputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _connect_native_audio_node_to_native_audio_node_function__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./connect-native-audio-node-to-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./connected-native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _connected_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./connected-native-audio-buffer-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./constant-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./constant-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./constant-source-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./constant-source-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constant_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./constant-source-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _constructor__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./constructor */ "./node_modules/standardized-audio-context/build/es2019/types/constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./context */ "./node_modules/standardized-audio-context/build/es2019/types/context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _context_store__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./context-store */ "./node_modules/standardized-audio-context/build/es2019/types/context-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convert_number_to_unsigned_long_factory__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./convert-number-to-unsigned-long-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convert_number_to_unsigned_long_function__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./convert-number-to-unsigned-long-function */ "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convolver_node_constructor__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./convolver-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convolver_node_constructor_factory__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./convolver-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./convolver-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _convolver_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./convolver-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _create_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./create-native-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _create_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./create-native-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _cycle_counters__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./cycle-counters */ "./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js");
/* empty/unused harmony star reexport *//* harmony import */ var _data_clone_error_factory__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./data-clone-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _decode_audio_data_factory__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./decode-audio-data-factory */ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _decode_audio_data_function__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./decode-audio-data-function */ "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _decode_error_callback__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./decode-error-callback */ "./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js");
/* empty/unused harmony star reexport *//* harmony import */ var _decode_success_callback__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./decode-success-callback */ "./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js");
/* empty/unused harmony star reexport *//* harmony import */ var _decrement_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./decrement-cycle-counter-factory */ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _decrement_cycle_counter_function__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./decrement-cycle-counter-function */ "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delay_node_constructor__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./delay-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delay_node_constructor_factory__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./delay-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./delay-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delay_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./delay-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delete_active_input_connection_to_audio_node_factory__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./delete-active-input-connection-to-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delete_active_input_connection_to_audio_node_function__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./delete-active-input-connection-to-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/delete-active-input-connection-to-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delete_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./delete-unrendered-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _delete_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./delete-unrendered-audio-worklet-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _detect_cycles_factory__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ./detect-cycles-factory */ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _detect_cycles_function__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ./detect-cycles-function */ "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _disconnect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ./disconnect-multiple-outputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _disconnect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ./disconnect-multiple-outputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _disconnect_native_audio_node_from_native_audio_node_function__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ./disconnect-native-audio-node-from-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _distance_model_type__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ./distance-model-type */ "./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js");
/* empty/unused harmony star reexport *//* harmony import */ var _dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ./dynamics-compressor-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _dynamics_compressor_node_constructor_factory__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ./dynamics-compressor-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ./dynamics-compressor-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _dynamics_compressor_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ./dynamics-compressor-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _encoding_error_factory__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ./encoding-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _error_event_handler__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ./error-event-handler */ "./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js");
/* empty/unused harmony star reexport *//* harmony import */ var _evaluate_audio_worklet_global_scope_function__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ./evaluate-audio-worklet-global-scope-function */ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _evaluate_source_factory__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ./evaluate-source-factory */ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _evaluate_source_function__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ./evaluate-source-function */ "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _event_handler__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ./event-handler */ "./node_modules/standardized-audio-context/build/es2019/types/event-handler.js");
/* empty/unused harmony star reexport *//* harmony import */ var _event_target_constructor__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ./event-target-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _event_target_constructor_factory__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ./event-target-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _expose_current_frame_and_current_time_factory__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ./expose-current-frame-and-current-time-factory */ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _expose_current_frame_and_current_time_function__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ./expose-current-frame-and-current-time-function */ "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _fetch_source_factory__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ./fetch-source-factory */ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _fetch_source_function__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ./fetch-source-function */ "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _gain_node_constructor__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ./gain-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _gain_node_constructor_factory__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ./gain-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ./gain-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _gain_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ./gain-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_active_audio_worklet_node_inputs_factory__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ./get-active-audio-worklet-node-inputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_active_audio_worklet_node_inputs_function__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ./get-active-audio-worklet-node-inputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-active-audio-worklet-node-inputs-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ./get-audio-node-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_node_renderer_factory__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ./get-audio-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_node_renderer_function__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ./get-audio-node-renderer-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_node_tail_time_factory__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ./get-audio-node-tail-time-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_node_tail_time_function__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ./get-audio-node-tail-time-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-tail-time-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ./get-audio-param-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ./get-audio-param-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_audio_param_renderer_function__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ./get-audio-param-renderer-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_backup_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ./get-backup-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_backup_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ./get-backup-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-backup-offline-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_event_listeners_of_audio_node_function__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ./get-event-listeners-of-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-event-listeners-of-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_native_audio_node_function__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ./get-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_native_audio_param_function__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ./get-native-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_native_context_factory__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ./get-native-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_native_context_function__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ./get-native-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_or_create_backup_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ./get-or-create-backup-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_or_create_backup_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ./get-or-create-backup-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-or-create-backup-offline-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_unrendered_audio_worklet_nodes_factory__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ./get-unrendered-audio-worklet-nodes-factory */ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_unrendered_audio_worklet_nodes_function__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ./get-unrendered-audio-worklet-nodes-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _get_value_for_key_function__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ./get-value-for-key-function */ "./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ./iir-filter-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _iir_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ./iir-filter-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ./iir-filter-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _iir_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ./iir-filter-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ./increment-cycle-counter-factory */ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _increment_cycle_counter_factory_factory__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ./increment-cycle-counter-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _increment_cycle_counter_function__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ./increment-cycle-counter-function */ "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _index_size_error_factory__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ./index-size-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _insert_element_in_set_function__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ./insert-element-in-set-function */ "./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _internal_state_event_listener__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ./internal-state-event-listener */ "./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js");
/* empty/unused harmony star reexport *//* harmony import */ var _invalid_access_error_factory__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ./invalid-access-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _invalid_state_error_factory__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ./invalid-state-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_active_audio_node_function__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ./is-active-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_audio_context_factory__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ./is-any-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_audio_context_function__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ./is-any-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_audio_node_factory__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ./is-any-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_audio_node_function__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ./is-any-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_audio_param_factory__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ./is-any-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_audio_param_function__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ./is-any-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ./is-any-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_any_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ./is-any-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_dc_curve_function__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ./is-dc-curve-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_audio_context_factory__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ./is-native-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_audio_context_function__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ./is-native-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ./is-native-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_audio_node_function__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ./is-native-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_audio_param_factory__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ./is-native-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_audio_param_function__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ./is-native-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_context_factory__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ./is-native-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_context_function__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ./is-native-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ./is-native-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ./is-native-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_part_of_a_cycle_function__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ./is-part-of-a-cycle-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_passive_audio_node_function__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ./is-passive-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/is-passive-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_secure_context_factory__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ./is-secure-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _is_supported_promise_factory__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ./is-supported-promise-factory */ "./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ./media-element-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_element_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ./media-element-audio-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ./media-stream-audio-destination-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ./media-stream-audio-destination-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ./media-stream-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ./media-stream-audio-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ./media-stream-track-audio-source-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _media_stream_track_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ./media-stream-track-audio-source-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ./minimal-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ./minimal-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ./minimal-base-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ./minimal-base-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ./minimal-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _minimal_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(/*! ./minimal-offline-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _monitor_connections_factory__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(/*! ./monitor-connections-factory */ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _monitor_connections_function__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(/*! ./monitor-connections-function */ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_analyser_node__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(/*! ./native-analyser-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(/*! ./native-analyser-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_analyser_node_factory_factory__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(/*! ./native-analyser-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_buffer__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(/*! ./native-audio-buffer */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(/*! ./native-audio-buffer-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(/*! ./native-audio-buffer-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(/*! ./native-audio-buffer-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(/*! ./native-audio-buffer-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_230__ = __webpack_require__(/*! ./native-audio-buffer-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_context__WEBPACK_IMPORTED_MODULE_231__ = __webpack_require__(/*! ./native-audio-context */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_232__ = __webpack_require__(/*! ./native-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_233__ = __webpack_require__(/*! ./native-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_destination_node__WEBPACK_IMPORTED_MODULE_234__ = __webpack_require__(/*! ./native-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_235__ = __webpack_require__(/*! ./native-audio-destination-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_236__ = __webpack_require__(/*! ./native-audio-destination-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_listener__WEBPACK_IMPORTED_MODULE_237__ = __webpack_require__(/*! ./native-audio-listener */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_node__WEBPACK_IMPORTED_MODULE_238__ = __webpack_require__(/*! ./native-audio-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_param__WEBPACK_IMPORTED_MODULE_239__ = __webpack_require__(/*! ./native-audio-param */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_param_map__WEBPACK_IMPORTED_MODULE_240__ = __webpack_require__(/*! ./native-audio-param-map */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet__WEBPACK_IMPORTED_MODULE_241__ = __webpack_require__(/*! ./native-audio-worklet */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node__WEBPACK_IMPORTED_MODULE_242__ = __webpack_require__(/*! ./native-audio-worklet-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_243__ = __webpack_require__(/*! ./native-audio-worklet-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_244__ = __webpack_require__(/*! ./native-audio-worklet-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_245__ = __webpack_require__(/*! ./native-audio-worklet-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_factory_factory__WEBPACK_IMPORTED_MODULE_246__ = __webpack_require__(/*! ./native-audio-worklet-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_247__ = __webpack_require__(/*! ./native-audio-worklet-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_248__ = __webpack_require__(/*! ./native-audio-worklet-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_249__ = __webpack_require__(/*! ./native-audio-worklet-node-options */ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_250__ = __webpack_require__(/*! ./native-biquad-filter-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_251__ = __webpack_require__(/*! ./native-biquad-filter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_channel_merger_node__WEBPACK_IMPORTED_MODULE_252__ = __webpack_require__(/*! ./native-channel-merger-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_253__ = __webpack_require__(/*! ./native-channel-merger-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_channel_merger_node_factory_factory__WEBPACK_IMPORTED_MODULE_254__ = __webpack_require__(/*! ./native-channel-merger-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_255__ = __webpack_require__(/*! ./native-channel-splitter-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_256__ = __webpack_require__(/*! ./native-channel-splitter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_constant_source_node__WEBPACK_IMPORTED_MODULE_257__ = __webpack_require__(/*! ./native-constant-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_258__ = __webpack_require__(/*! ./native-constant-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_constant_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_259__ = __webpack_require__(/*! ./native-constant-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_260__ = __webpack_require__(/*! ./native-constant-source-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_constant_source_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_261__ = __webpack_require__(/*! ./native-constant-source-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_context__WEBPACK_IMPORTED_MODULE_262__ = __webpack_require__(/*! ./native-context */ "./node_modules/standardized-audio-context/build/es2019/types/native-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_convolver_node__WEBPACK_IMPORTED_MODULE_263__ = __webpack_require__(/*! ./native-convolver-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_264__ = __webpack_require__(/*! ./native-convolver-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_convolver_node_factory_factory__WEBPACK_IMPORTED_MODULE_265__ = __webpack_require__(/*! ./native-convolver-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_delay_node_factory__WEBPACK_IMPORTED_MODULE_266__ = __webpack_require__(/*! ./native-delay-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_delay_node__WEBPACK_IMPORTED_MODULE_267__ = __webpack_require__(/*! ./native-delay-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_268__ = __webpack_require__(/*! ./native-dynamics-compressor-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_269__ = __webpack_require__(/*! ./native-dynamics-compressor-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_dynamics_compressor_node_factory_factory__WEBPACK_IMPORTED_MODULE_270__ = __webpack_require__(/*! ./native-dynamics-compressor-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_event_target__WEBPACK_IMPORTED_MODULE_271__ = __webpack_require__(/*! ./native-event-target */ "./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_gain_node__WEBPACK_IMPORTED_MODULE_272__ = __webpack_require__(/*! ./native-gain-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_gain_node_factory__WEBPACK_IMPORTED_MODULE_273__ = __webpack_require__(/*! ./native-gain-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_iir_filter_node__WEBPACK_IMPORTED_MODULE_274__ = __webpack_require__(/*! ./native-iir-filter-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_275__ = __webpack_require__(/*! ./native-iir-filter-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_iir_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_276__ = __webpack_require__(/*! ./native-iir-filter-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_277__ = __webpack_require__(/*! ./native-iir-filter-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_iir_filter_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_278__ = __webpack_require__(/*! ./native-iir-filter-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_279__ = __webpack_require__(/*! ./native-media-element-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_280__ = __webpack_require__(/*! ./native-media-element-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_281__ = __webpack_require__(/*! ./native-media-stream-audio-destination-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_282__ = __webpack_require__(/*! ./native-media-stream-audio-destination-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_283__ = __webpack_require__(/*! ./native-media-stream-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_284__ = __webpack_require__(/*! ./native-media-stream-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_285__ = __webpack_require__(/*! ./native-media-stream-track-audio-source-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_286__ = __webpack_require__(/*! ./native-media-stream-track-audio-source-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_media_stream_track_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_287__ = __webpack_require__(/*! ./native-media-stream-track-audio-source-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_offline_audio_context__WEBPACK_IMPORTED_MODULE_288__ = __webpack_require__(/*! ./native-offline-audio-context */ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_289__ = __webpack_require__(/*! ./native-offline-audio-context-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_290__ = __webpack_require__(/*! ./native-offline-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_oscillator_node__WEBPACK_IMPORTED_MODULE_291__ = __webpack_require__(/*! ./native-oscillator-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_292__ = __webpack_require__(/*! ./native-oscillator-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_oscillator_node_factory_factory__WEBPACK_IMPORTED_MODULE_293__ = __webpack_require__(/*! ./native-oscillator-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_panner_node__WEBPACK_IMPORTED_MODULE_294__ = __webpack_require__(/*! ./native-panner-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_panner_node_factory__WEBPACK_IMPORTED_MODULE_295__ = __webpack_require__(/*! ./native-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_296__ = __webpack_require__(/*! ./native-panner-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_297__ = __webpack_require__(/*! ./native-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_298__ = __webpack_require__(/*! ./native-panner-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_periodic_wave__WEBPACK_IMPORTED_MODULE_299__ = __webpack_require__(/*! ./native-periodic-wave */ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_300__ = __webpack_require__(/*! ./native-periodic-wave-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_periodic_wave_factory_factory__WEBPACK_IMPORTED_MODULE_301__ = __webpack_require__(/*! ./native-periodic-wave-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_script_processor_node__WEBPACK_IMPORTED_MODULE_302__ = __webpack_require__(/*! ./native-script-processor-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_303__ = __webpack_require__(/*! ./native-script-processor-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_stereo_panner_node__WEBPACK_IMPORTED_MODULE_304__ = __webpack_require__(/*! ./native-stereo-panner-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_305__ = __webpack_require__(/*! ./native-stereo-panner-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_stereo_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_306__ = __webpack_require__(/*! ./native-stereo-panner-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_307__ = __webpack_require__(/*! ./native-stereo-panner-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_stereo_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_308__ = __webpack_require__(/*! ./native-stereo-panner-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_wave_shaper_node__WEBPACK_IMPORTED_MODULE_309__ = __webpack_require__(/*! ./native-wave-shaper-node */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_310__ = __webpack_require__(/*! ./native-wave-shaper-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_wave_shaper_node_factory_factory__WEBPACK_IMPORTED_MODULE_311__ = __webpack_require__(/*! ./native-wave-shaper-node-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_312__ = __webpack_require__(/*! ./native-wave-shaper-node-faker-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _native_wave_shaper_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_313__ = __webpack_require__(/*! ./native-wave-shaper-node-faker-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _not_supported_error_factory__WEBPACK_IMPORTED_MODULE_314__ = __webpack_require__(/*! ./not-supported-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_315__ = __webpack_require__(/*! ./offline-audio-context-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_316__ = __webpack_require__(/*! ./oscillator-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_node_constructor_factory__WEBPACK_IMPORTED_MODULE_317__ = __webpack_require__(/*! ./oscillator-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_318__ = __webpack_require__(/*! ./oscillator-node-renderer */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_319__ = __webpack_require__(/*! ./oscillator-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_320__ = __webpack_require__(/*! ./oscillator-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _oscillator_type__WEBPACK_IMPORTED_MODULE_321__ = __webpack_require__(/*! ./oscillator-type */ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js");
/* empty/unused harmony star reexport *//* harmony import */ var _output_connection__WEBPACK_IMPORTED_MODULE_322__ = __webpack_require__(/*! ./output-connection */ "./node_modules/standardized-audio-context/build/es2019/types/output-connection.js");
/* empty/unused harmony star reexport *//* harmony import */ var _over_sample_type__WEBPACK_IMPORTED_MODULE_323__ = __webpack_require__(/*! ./over-sample-type */ "./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js");
/* empty/unused harmony star reexport *//* harmony import */ var _overwrite_accessors_function__WEBPACK_IMPORTED_MODULE_324__ = __webpack_require__(/*! ./overwrite-accessors-function */ "./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _panner_node_constructor__WEBPACK_IMPORTED_MODULE_325__ = __webpack_require__(/*! ./panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_326__ = __webpack_require__(/*! ./panner-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_327__ = __webpack_require__(/*! ./panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_328__ = __webpack_require__(/*! ./panner-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _panning_model_type__WEBPACK_IMPORTED_MODULE_329__ = __webpack_require__(/*! ./panning-model-type */ "./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js");
/* empty/unused harmony star reexport *//* harmony import */ var _passive_audio_node_input_connection__WEBPACK_IMPORTED_MODULE_330__ = __webpack_require__(/*! ./passive-audio-node-input-connection */ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js");
/* empty/unused harmony star reexport *//* harmony import */ var _passive_audio_param_input_connection__WEBPACK_IMPORTED_MODULE_331__ = __webpack_require__(/*! ./passive-audio-param-input-connection */ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js");
/* empty/unused harmony star reexport *//* harmony import */ var _periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_332__ = __webpack_require__(/*! ./periodic-wave-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _periodic_wave_constructor_factory__WEBPACK_IMPORTED_MODULE_333__ = __webpack_require__(/*! ./periodic-wave-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _pick_element_from_set_function__WEBPACK_IMPORTED_MODULE_334__ = __webpack_require__(/*! ./pick-element-from-set-function */ "./node_modules/standardized-audio-context/build/es2019/types/pick-element-from-set-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_automation_factory__WEBPACK_IMPORTED_MODULE_335__ = __webpack_require__(/*! ./render-automation-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_automation_function__WEBPACK_IMPORTED_MODULE_336__ = __webpack_require__(/*! ./render-automation-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_inputs_of_audio_node_factory__WEBPACK_IMPORTED_MODULE_337__ = __webpack_require__(/*! ./render-inputs-of-audio-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_inputs_of_audio_node_function__WEBPACK_IMPORTED_MODULE_338__ = __webpack_require__(/*! ./render-inputs-of-audio-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_inputs_of_audio_param_factory__WEBPACK_IMPORTED_MODULE_339__ = __webpack_require__(/*! ./render-inputs-of-audio-param-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_inputs_of_audio_param_function__WEBPACK_IMPORTED_MODULE_340__ = __webpack_require__(/*! ./render-inputs-of-audio-param-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_341__ = __webpack_require__(/*! ./render-native-offline-audio-context-factory */ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _render_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_342__ = __webpack_require__(/*! ./render-native-offline-audio-context-function */ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _sanitize_audio_worklet_node_options_function__WEBPACK_IMPORTED_MODULE_343__ = __webpack_require__(/*! ./sanitize-audio-worklet-node-options-function */ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-audio-worklet-node-options-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _sanitize_channel_splitter_options_function__WEBPACK_IMPORTED_MODULE_344__ = __webpack_require__(/*! ./sanitize-channel-splitter-options-function */ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-channel-splitter-options-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _sanitize_periodic_wave_options_function__WEBPACK_IMPORTED_MODULE_345__ = __webpack_require__(/*! ./sanitize-periodic-wave-options-function */ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-periodic-wave-options-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _set_active_audio_worklet_node_inputs_factory__WEBPACK_IMPORTED_MODULE_346__ = __webpack_require__(/*! ./set-active-audio-worklet-node-inputs-factory */ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _set_active_audio_worklet_node_inputs_function__WEBPACK_IMPORTED_MODULE_347__ = __webpack_require__(/*! ./set-active-audio-worklet-node-inputs-function */ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _set_audio_node_tail_time_factory__WEBPACK_IMPORTED_MODULE_348__ = __webpack_require__(/*! ./set-audio-node-tail-time-factory */ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _set_audio_node_tail_time_function__WEBPACK_IMPORTED_MODULE_349__ = __webpack_require__(/*! ./set-audio-node-tail-time-function */ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _set_value_at_time_until_possible_function__WEBPACK_IMPORTED_MODULE_350__ = __webpack_require__(/*! ./set-value-at-time-until-possible-function */ "./node_modules/standardized-audio-context/build/es2019/types/set-value-at-time-until-possible-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _start_rendering_factory__WEBPACK_IMPORTED_MODULE_351__ = __webpack_require__(/*! ./start-rendering-factory */ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _start_rendering_function__WEBPACK_IMPORTED_MODULE_352__ = __webpack_require__(/*! ./start-rendering-function */ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_353__ = __webpack_require__(/*! ./stereo-panner-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _stereo_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_354__ = __webpack_require__(/*! ./stereo-panner-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _stereo_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_355__ = __webpack_require__(/*! ./stereo-panner-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_356__ = __webpack_require__(/*! ./stereo-panner-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_buffer_copy_channel_methods_subarray_support_factory__WEBPACK_IMPORTED_MODULE_357__ = __webpack_require__(/*! ./test-audio-buffer-copy-channel-methods-subarray-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_buffer_constructor_support_factory__WEBPACK_IMPORTED_MODULE_358__ = __webpack_require__(/*! ./test-audio-buffer-constructor-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_context_close_method_support_factory__WEBPACK_IMPORTED_MODULE_359__ = __webpack_require__(/*! ./test-audio-context-close-method-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_context_decode_audio_data_method_type_error_support_factory__WEBPACK_IMPORTED_MODULE_360__ = __webpack_require__(/*! ./test-audio-context-decode-audio-data-method-type-error-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_context_options_support_factory__WEBPACK_IMPORTED_MODULE_361__ = __webpack_require__(/*! ./test-audio-context-options-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_node_connect_method_support_factory__WEBPACK_IMPORTED_MODULE_362__ = __webpack_require__(/*! ./test-audio-node-connect-method-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_worklet_processor_no_outputs_support_factory__WEBPACK_IMPORTED_MODULE_363__ = __webpack_require__(/*! ./test-audio-worklet-processor-no-outputs-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_audio_worklet_processor_post_message_support_factory__WEBPACK_IMPORTED_MODULE_364__ = __webpack_require__(/*! ./test-audio-worklet-processor-post-message-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-post-message-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_channel_merger_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_365__ = __webpack_require__(/*! ./test-channel-merger-node-channel-count-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_constant_source_node_accurate_scheduling_support_factory__WEBPACK_IMPORTED_MODULE_366__ = __webpack_require__(/*! ./test-constant-source-node-accurate-scheduling-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_convolver_node_buffer_reassignability_support_factory__WEBPACK_IMPORTED_MODULE_367__ = __webpack_require__(/*! ./test-convolver-node-buffer-reassignability-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_convolver_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_368__ = __webpack_require__(/*! ./test-convolver-node-channel-count-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-channel-count-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_is_secure_context_support_factory__WEBPACK_IMPORTED_MODULE_369__ = __webpack_require__(/*! ./test-is-secure-context-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_370__ = __webpack_require__(/*! ./test-media-stream-audio-source-node-media-stream-without-audio-track-support */ "./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_offline_audio_context_current_time_support_factory__WEBPACK_IMPORTED_MODULE_371__ = __webpack_require__(/*! ./test-offline-audio-context-current-time-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _test_stereo_panner_node_default_value_support_factory__WEBPACK_IMPORTED_MODULE_372__ = __webpack_require__(/*! ./test-stereo-panner-node-default-value-support-factory */ "./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _unknown_error_factory__WEBPACK_IMPORTED_MODULE_373__ = __webpack_require__(/*! ./unknown-error-factory */ "./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _unrendered_audio_worklet_node_store__WEBPACK_IMPORTED_MODULE_374__ = __webpack_require__(/*! ./unrendered-audio-worklet-node-store */ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js");
/* empty/unused harmony star reexport *//* harmony import */ var _unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_375__ = __webpack_require__(/*! ./unrendered-audio-worklet-nodes */ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_376__ = __webpack_require__(/*! ./wave-shaper-node-constructor */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wave_shaper_node_constructor_factory__WEBPACK_IMPORTED_MODULE_377__ = __webpack_require__(/*! ./wave-shaper-node-constructor-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wave_shaper_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_378__ = __webpack_require__(/*! ./wave-shaper-node-renderer-factory-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_379__ = __webpack_require__(/*! ./wave-shaper-node-renderer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_380__ = __webpack_require__(/*! ./window */ "./node_modules/standardized-audio-context/build/es2019/types/window.js");
/* empty/unused harmony star reexport *//* harmony import */ var _window_factory__WEBPACK_IMPORTED_MODULE_381__ = __webpack_require__(/*! ./window-factory */ "./node_modules/standardized-audio-context/build/es2019/types/window-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_buffer_copy_channel_methods_factory__WEBPACK_IMPORTED_MODULE_382__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_buffer_copy_channel_methods_function__WEBPACK_IMPORTED_MODULE_383__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_factory__WEBPACK_IMPORTED_MODULE_384__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_function__WEBPACK_IMPORTED_MODULE_385__ = __webpack_require__(/*! ./wrap-audio-buffer-copy-channel-methods-out-of-bounds-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_buffer_source_node_start_method_offset_clamping_function__WEBPACK_IMPORTED_MODULE_386__ = __webpack_require__(/*! ./wrap-audio-buffer-source-node-start-method-offset-clamping-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_factory__WEBPACK_IMPORTED_MODULE_387__ = __webpack_require__(/*! ./wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_function__WEBPACK_IMPORTED_MODULE_388__ = __webpack_require__(/*! ./wrap-audio-buffer-source-node-stop-method-nullified-buffer-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_function__WEBPACK_IMPORTED_MODULE_389__ = __webpack_require__(/*! ./wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_390__ = __webpack_require__(/*! ./wrap-channel-merger-node-factory */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_channel_merger_node_function__WEBPACK_IMPORTED_MODULE_391__ = __webpack_require__(/*! ./wrap-channel-merger-node-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js");
/* empty/unused harmony star reexport *//* harmony import */ var _wrap_event_listener_function__WEBPACK_IMPORTED_MODULE_392__ = __webpack_require__(/*! ./wrap-event-listener-function */ "./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js");
/* empty/unused harmony star reexport */









































































































































































































































































































































































































/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-passive-audio-node-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-passive-audio-node-function.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js ***!
  \***************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js ***!
  \*******************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js ***!
  \***********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js ***!
  \**************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js ***!
  \********************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js ***!
  \************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js ***!
  \**********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js ***!
  \*************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js ***!
  \*************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-context.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-context.js ***!
  \**************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js ***!
  \*****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js ***!
  \*******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js ***!
  \****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js ***!
  \**********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js ***!
  \**************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js ***!
  \***********************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js ***!
  \***************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js ***!
  \************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js ***!
  \**********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js ***!
  \**********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js ***!
  \***********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js ***!
  \***************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js ***!
  \****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/output-connection.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/output-connection.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js ***!
  \****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js ***!
  \*******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js ***!
  \******************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/pick-element-from-set-function.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/pick-element-from-set-function.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js ***!
  \*************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js ***!
  \**************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js ***!
  \*************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-audio-worklet-node-options-function.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/sanitize-audio-worklet-node-options-function.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-channel-splitter-options-function.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/sanitize-channel-splitter-options-function.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/sanitize-periodic-wave-options-function.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/sanitize-periodic-wave-options-function.js ***!
  \***************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-factory.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-factory.js ***!
  \********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-function.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-active-audio-worklet-node-inputs-function.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-audio-node-tail-time-function.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/set-value-at-time-until-possible-function.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/set-value-at-time-until-possible-function.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js ***!
  \***********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js ***!
  \************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js ***!
  \*******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js ***!
  \*********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js ***!
  \***************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js ***!
  \***********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js ***!
  \**********************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js ***!
  \******************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js ***!
  \**********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js ***!
  \*******************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-post-message-support-factory.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-post-message-support-factory.js ***!
  \*********************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js ***!
  \******************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js ***!
  \*************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js ***!
  \**********************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-channel-count-support-factory.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-channel-count-support-factory.js ***!
  \*************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js ***!
  \**************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js ***!
  \****************************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js ***!
  \*******************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js ***!
  \*****************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js ***!
  \*********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js ***!
  \***********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js ***!
  \******************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js ***!
  \************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js ***!
  \*****************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/window-factory.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/window-factory.js ***!
  \**************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/window.js":
/*!******************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/window.js ***!
  \******************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js ***!
  \**********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js ***!
  \***********************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js ***!
  \************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js ***!
  \*************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js ***!
  \*******************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js ***!
  \******************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js ***!
  \*******************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js":
/*!***********************************************************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js ***!
  \***********************************************************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js ***!
  \********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js ***!
  \*********************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js ***!
  \****************************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/standardized-audio-context/node_modules/@babel/runtime/regenerator/index.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "./node_modules/tone/build/esm/classes.js":
/*!************************************************!*\
  !*** ./node_modules/tone/build/esm/classes.js ***!
  \************************************************/
/*! exports provided: Clock, Context, BaseContext, Delay, Gain, Offline, OfflineContext, Param, ToneAudioBuffer, ToneAudioBuffers, ToneAudioNode, connectSeries, connect, disconnect, FrequencyClass, Frequency, MidiClass, Midi, TimeClass, Time, TicksClass, Ticks, TransportTimeClass, TransportTime, Emitter, IntervalTimeline, StateTimeline, Timeline, isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote, dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof, optionsFromArguments, defaultArg, Unit, debug, Noise, UserMedia, Oscillator, AMOscillator, FMOscillator, PulseOscillator, FatOscillator, PWMOscillator, OmniOscillator, ToneOscillatorNode, LFO, ToneBufferSource, Player, Players, GrainPlayer, Add, Abs, AudioToGain, GainToAudio, GreaterThan, GreaterThanZero, Multiply, Negate, Pow, Signal, connectSignal, Scale, ScaleExp, Subtract, SyncedSignal, WaveShaper, Zero, AMSynth, DuoSynth, FMSynth, MetalSynth, MembraneSynth, MonoSynth, NoiseSynth, PluckSynth, PolySynth, Sampler, Synth, Loop, Part, Pattern, Sequence, ToneEvent, AutoFilter, AutoPanner, AutoWah, BitCrusher, Chebyshev, Chorus, Distortion, FeedbackDelay, FrequencyShifter, Freeverb, JCReverb, PingPongDelay, PitchShift, Phaser, Reverb, StereoWidener, Tremolo, Vibrato, Analyser, Meter, FFT, DCMeter, Waveform, Follower, Channel, CrossFade, Merge, MidSideMerge, MidSideSplit, Mono, MultibandSplit, Panner, Panner3D, PanVol, Recorder, Solo, Split, Volume, Compressor, Gate, Limiter, MidSideCompressor, MultibandCompressor, AmplitudeEnvelope, Envelope, FrequencyEnvelope, EQ3, Filter, OnePoleFilter, FeedbackCombFilter, LowpassCombFilter, Convolver, BiquadFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/index */ "./node_modules/tone/build/esm/core/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Clock", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Clock"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Context"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseContext", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["BaseContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Delay", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Delay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gain", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Gain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Offline", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Offline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OfflineContext", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["OfflineContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Param", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Param"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connectSeries", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["connectSeries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["connect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disconnect", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["disconnect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyClass", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["FrequencyClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Frequency", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Frequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidiClass", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["MidiClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Midi", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Midi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeClass", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["TimeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Time", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Time"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TicksClass", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["TicksClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ticks", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Ticks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["TransportTimeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransportTime", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["TransportTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Emitter", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Emitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["IntervalTimeline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StateTimeline", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["StateTimeline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Timeline", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Timeline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndef", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isUndef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDefined", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isDefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNote", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["isNote"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dbToGain", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["dbToGain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gainToDb", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["gainToDb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["intervalToFrequencyRatio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ftom", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["ftom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mtof", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["mtof"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultArg", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["defaultArg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Unit", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["Unit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return _core_index__WEBPACK_IMPORTED_MODULE_0__["debug"]; });

/* harmony import */ var _source_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./source/index */ "./node_modules/tone/build/esm/source/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Noise", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["Noise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserMedia", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["UserMedia"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Oscillator", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["Oscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AMOscillator", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["AMOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FMOscillator", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["FMOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PulseOscillator", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["PulseOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FatOscillator", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["FatOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PWMOscillator", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["PWMOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OmniOscillator", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["OmniOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["ToneOscillatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LFO", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["LFO"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["ToneBufferSource"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Player", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["Player"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Players", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["Players"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GrainPlayer", function() { return _source_index__WEBPACK_IMPORTED_MODULE_1__["GrainPlayer"]; });

/* harmony import */ var _signal_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signal/index */ "./node_modules/tone/build/esm/signal/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Add", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Add"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Abs", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Abs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AudioToGain", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["AudioToGain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GainToAudio", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["GainToAudio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GreaterThan", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["GreaterThan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["GreaterThanZero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Multiply", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Multiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Negate", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Negate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pow", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Pow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Signal", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Signal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connectSignal", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["connectSignal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Scale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScaleExp", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["ScaleExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subtract", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Subtract"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncedSignal", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["SyncedSignal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WaveShaper", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["WaveShaper"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Zero", function() { return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Zero"]; });

/* harmony import */ var _instrument_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instrument/index */ "./node_modules/tone/build/esm/instrument/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AMSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["AMSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DuoSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["DuoSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FMSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["FMSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetalSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["MetalSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MembraneSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["MembraneSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MonoSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["MonoSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NoiseSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["NoiseSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PluckSynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["PluckSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PolySynth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["PolySynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sampler", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["Sampler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Synth", function() { return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["Synth"]; });

/* harmony import */ var _event_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./event/index */ "./node_modules/tone/build/esm/event/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Loop", function() { return _event_index__WEBPACK_IMPORTED_MODULE_4__["Loop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Part", function() { return _event_index__WEBPACK_IMPORTED_MODULE_4__["Part"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pattern", function() { return _event_index__WEBPACK_IMPORTED_MODULE_4__["Pattern"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sequence", function() { return _event_index__WEBPACK_IMPORTED_MODULE_4__["Sequence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneEvent", function() { return _event_index__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"]; });

/* harmony import */ var _effect_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./effect/index */ "./node_modules/tone/build/esm/effect/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoFilter", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["AutoFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoPanner", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["AutoPanner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoWah", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["AutoWah"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BitCrusher", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["BitCrusher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chebyshev", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Chebyshev"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chorus", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Chorus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Distortion", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Distortion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["FeedbackDelay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["FrequencyShifter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Freeverb", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Freeverb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JCReverb", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["JCReverb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PingPongDelay", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["PingPongDelay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PitchShift", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["PitchShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Phaser", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Phaser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Reverb", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Reverb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StereoWidener", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["StereoWidener"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tremolo", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Tremolo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Vibrato", function() { return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Vibrato"]; });

/* harmony import */ var _component_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./component/index */ "./node_modules/tone/build/esm/component/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Analyser", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Analyser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Meter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Meter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FFT", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["FFT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DCMeter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["DCMeter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Waveform", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Waveform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Follower", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Follower"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Channel", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Channel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CrossFade", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["CrossFade"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Merge", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideMerge", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["MidSideMerge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideSplit", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["MidSideSplit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Mono", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Mono"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultibandSplit", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["MultibandSplit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Panner", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Panner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Panner3D", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Panner3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PanVol", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["PanVol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Recorder", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Recorder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Solo", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Solo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Split", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Split"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Volume", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Volume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Compressor", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Compressor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gate", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Gate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Limiter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Limiter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["MidSideCompressor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["MultibandCompressor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["AmplitudeEnvelope"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Envelope"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["FrequencyEnvelope"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EQ3", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["EQ3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Filter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["OnePoleFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["FeedbackCombFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["LowpassCombFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Convolver", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["Convolver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BiquadFilter", function() { return _component_index__WEBPACK_IMPORTED_MODULE_6__["BiquadFilter"]; });









/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Analyser.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Analyser.js ***!
  \********************************************************************/
/*! exports provided: Analyser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Analyser", function() { return Analyser; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _channel_Split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).
 * Extracts FFT or Waveform data from the incoming signal.
 * @category Component
 */

var Analyser = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Analyser, _ToneAudioNode);

  var _super = _createSuper(Analyser);

  function Analyser() {
    var _this;

    _classCallCheck(this, Analyser);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Analyser.getDefaults(), arguments, ["type", "size"]));
    _this.name = "Analyser";
    /**
     * The analyser node.
     */

    _this._analysers = [];
    /**
     * The buffer that the FFT data is written to
     */

    _this._buffers = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Analyser.getDefaults(), arguments, ["type", "size"]);
    _this.input = _this.output = _this._gain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
      context: _this.context
    });
    _this._split = new _channel_Split__WEBPACK_IMPORTED_MODULE_2__["Split"]({
      context: _this.context,
      channels: options.channels
    });

    _this.input.connect(_this._split);

    Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assertRange"])(options.channels, 1); // create the analysers

    for (var channel = 0; channel < options.channels; channel++) {
      _this._analysers[channel] = _this.context.createAnalyser();

      _this._split.connect(_this._analysers[channel], channel, 0);
    } // set the values initially


    _this.size = options.size;
    _this.type = options.type;
    return _this;
  }

  _createClass(Analyser, [{
    key: "getValue",
    value:
    /**
     * Run the analysis given the current settings. If [[channels]] = 1,
     * it will return a Float32Array. If [[channels]] > 1, it will
     * return an array of Float32Arrays where each index in the array
     * represents the analysis done on a channel.
     */
    function getValue() {
      var _this2 = this;

      this._analysers.forEach(function (analyser, index) {
        var buffer = _this2._buffers[index];

        if (_this2._type === "fft") {
          analyser.getFloatFrequencyData(buffer);
        } else if (_this2._type === "waveform") {
          analyser.getFloatTimeDomainData(buffer);
        }
      });

      if (this.channels === 1) {
        return this._buffers[0];
      } else {
        return this._buffers;
      }
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     */

  }, {
    key: "size",
    get: function get() {
      return this._analysers[0].frequencyBinCount;
    },
    set: function set(size) {
      var _this3 = this;

      this._analysers.forEach(function (analyser, index) {
        analyser.fftSize = size * 2;
        _this3._buffers[index] = new Float32Array(size);
      });
    }
    /**
     * The number of channels the analyser does the analysis on. Channel
     * separation is done using [[Split]]
     */

  }, {
    key: "channels",
    get: function get() {
      return this._analysers.length;
    }
    /**
     * The analysis function returned by analyser.getValue(), either "fft" or "waveform".
     */

  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(type) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(type === "waveform" || type === "fft", "Analyser: invalid type: ".concat(type));
      this._type = type;
    }
    /**
     * 0 represents no time averaging with the last analysis frame.
     */

  }, {
    key: "smoothing",
    get: function get() {
      return this._analysers[0].smoothingTimeConstant;
    },
    set: function set(val) {
      this._analysers.forEach(function (a) {
        return a.smoothingTimeConstant = val;
      });
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Analyser.prototype), "dispose", this).call(this);

      this._analysers.forEach(function (a) {
        return a.disconnect();
      });

      this._split.dispose();

      this._gain.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        size: 1024,
        smoothing: 0.8,
        type: "fft",
        channels: 1
      });
    }
  }]);

  return Analyser;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/DCMeter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/DCMeter.js ***!
  \*******************************************************************/
/*! exports provided: DCMeter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DCMeter", function() { return DCMeter; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * DCMeter gets the raw value of the input signal at the current time.
 *
 * @example
 * const meter = new Tone.DCMeter();
 * const mic = new Tone.UserMedia();
 * mic.open();
 * // connect mic to the meter
 * mic.connect(meter);
 * // the current level of the mic
 * const level = meter.getValue();
 * @category Component
 */

var DCMeter = /*#__PURE__*/function (_MeterBase) {
  _inherits(DCMeter, _MeterBase);

  var _super = _createSuper(DCMeter);

  function DCMeter() {
    var _this;

    _classCallCheck(this, DCMeter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(DCMeter.getDefaults(), arguments));
    _this.name = "DCMeter";
    _this._analyser.type = "waveform";
    _this._analyser.size = 256;
    return _this;
  }
  /**
   * Get the signal value of the incoming signal
   */


  _createClass(DCMeter, [{
    key: "getValue",
    value: function getValue() {
      var value = this._analyser.getValue();

      return value[0];
    }
  }]);

  return DCMeter;
}(_MeterBase__WEBPACK_IMPORTED_MODULE_1__["MeterBase"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/FFT.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/FFT.js ***!
  \***************************************************************/
/*! exports provided: FFT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FFT", function() { return FFT; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Get the current frequency data of the connected audio source using a fast Fourier transform.
 * @category Component
 */

var FFT = /*#__PURE__*/function (_MeterBase) {
  _inherits(FFT, _MeterBase);

  var _super = _createSuper(FFT);

  function FFT() {
    var _this;

    _classCallCheck(this, FFT);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FFT.getDefaults(), arguments, ["size"]));
    _this.name = "FFT";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FFT.getDefaults(), arguments, ["size"]);
    _this.normalRange = options.normalRange;
    _this._analyser.type = "fft";
    _this.size = options.size;
    return _this;
  }

  _createClass(FFT, [{
    key: "getValue",
    value:
    /**
     * Gets the current frequency data from the connected audio source.
     * Returns the frequency data of length [[size]] as a Float32Array of decibel values.
     */
    function getValue() {
      var _this2 = this;

      var values = this._analyser.getValue();

      return values.map(function (v) {
        return _this2.normalRange ? Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__["dbToGain"])(v) : v;
      });
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     * Determines the size of the array returned by [[getValue]] (i.e. the number of
     * frequency bins). Large FFT sizes may be costly to compute.
     */

  }, {
    key: "size",
    get: function get() {
      return this._analyser.size;
    },
    set: function set(size) {
      this._analyser.size = size;
    }
    /**
     * 0 represents no time averaging with the last analysis frame.
     */

  }, {
    key: "smoothing",
    get: function get() {
      return this._analyser.smoothing;
    },
    set: function set(val) {
      this._analyser.smoothing = val;
    }
    /**
     * Returns the frequency value in hertz of each of the indices of the FFT's [[getValue]] response.
     * @example
     * const fft = new Tone.FFT(32);
     * console.log([0, 1, 2, 3, 4].map(index => fft.getFrequencyOfIndex(index)));
     */

  }, {
    key: "getFrequencyOfIndex",
    value: function getFrequencyOfIndex(index) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(0 <= index && index < this.size, "index must be greater than or equal to 0 and less than ".concat(this.size));
      return index * this.context.sampleRate / (this.size * 2);
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        normalRange: false,
        size: 1024,
        smoothing: 0.8
      });
    }
  }]);

  return FFT;
}(_MeterBase__WEBPACK_IMPORTED_MODULE_3__["MeterBase"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Follower.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Follower.js ***!
  \********************************************************************/
/*! exports provided: Follower */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Follower", function() { return Follower; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../filter/OnePoleFilter */ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
/* harmony import */ var _signal_Abs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Abs */ "./node_modules/tone/build/esm/signal/Abs.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Follower is a simple envelope follower.
 * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.
 * ```
 *          +-----+    +---------------+
 * Input +--> Abs +----> OnePoleFilter +--> Output
 *          +-----+    +---------------+
 * ```
 * @category Component
 */

var Follower = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Follower, _ToneAudioNode);

  var _super = _createSuper(Follower);

  function Follower() {
    var _this;

    _classCallCheck(this, Follower);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Follower.getDefaults(), arguments, ["smoothing"]));
    _this.name = "Follower";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Follower.getDefaults(), arguments, ["smoothing"]);
    _this._abs = _this.input = new _signal_Abs__WEBPACK_IMPORTED_MODULE_3__["Abs"]({
      context: _this.context
    });
    _this._lowpass = _this.output = new _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_2__["OnePoleFilter"]({
      context: _this.context,
      frequency: 1 / _this.toSeconds(options.smoothing),
      type: "lowpass"
    });

    _this._abs.connect(_this._lowpass);

    _this._smoothing = options.smoothing;
    return _this;
  }

  _createClass(Follower, [{
    key: "smoothing",
    get:
    /**
     * The amount of time it takes a value change to arrive at the updated value.
     */
    function get() {
      return this._smoothing;
    },
    set: function set(smoothing) {
      this._smoothing = smoothing;
      this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Follower.prototype), "dispose", this).call(this);

      this._abs.dispose();

      this._lowpass.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        smoothing: 0.05
      });
    }
  }]);

  return Follower;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Meter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Meter.js ***!
  \*****************************************************************/
/*! exports provided: Meter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Meter", function() { return Meter; });
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _Analyser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Analyser */ "./node_modules/tone/build/esm/component/analysis/Analyser.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)
 * of an input signal. It can also get the raw value of the input signal.
 *
 * @example
 * const meter = new Tone.Meter();
 * const mic = new Tone.UserMedia();
 * mic.open();
 * // connect mic to the meter
 * mic.connect(meter);
 * // the current level of the mic
 * setInterval(() => console.log(meter.getValue()), 100);
 * @category Component
 */

var Meter = /*#__PURE__*/function (_MeterBase) {
  _inherits(Meter, _MeterBase);

  var _super = _createSuper(Meter);

  function Meter() {
    var _this;

    _classCallCheck(this, Meter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Meter.getDefaults(), arguments, ["smoothing"]));
    _this.name = "Meter";
    /**
     * The previous frame's value
     */

    _this._rms = 0;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Meter.getDefaults(), arguments, ["smoothing"]);
    _this.input = _this.output = _this._analyser = new _Analyser__WEBPACK_IMPORTED_MODULE_4__["Analyser"]({
      context: _this.context,
      size: 256,
      type: "waveform",
      channels: options.channels
    });
    _this.smoothing = options.smoothing, _this.normalRange = options.normalRange;
    return _this;
  }

  _createClass(Meter, [{
    key: "getLevel",
    value:
    /**
     * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.
     * @deprecated
     */
    function getLevel() {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["warn"])("'getLevel' has been changed to 'getValue'");
      return this.getValue();
    }
    /**
     * Get the current value of the incoming signal.
     * Output is in decibels when [[normalRange]] is `false`.
     * If [[channels]] = 1, then the output is a single number
     * representing the value of the input signal. When [[channels]] > 1,
     * then each channel is returned as a value in a number array.
     */

  }, {
    key: "getValue",
    value: function getValue() {
      var _this2 = this;

      var aValues = this._analyser.getValue();

      var channelValues = this.channels === 1 ? [aValues] : aValues;
      var vals = channelValues.map(function (values) {
        var totalSquared = values.reduce(function (total, current) {
          return total + current * current;
        }, 0);
        var rms = Math.sqrt(totalSquared / values.length); // the rms can only fall at the rate of the smoothing
        // but can jump up instantly

        _this2._rms = Math.max(rms, _this2._rms * _this2.smoothing);
        return _this2.normalRange ? _this2._rms : Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_0__["gainToDb"])(_this2._rms);
      });

      if (this.channels === 1) {
        return vals[0];
      } else {
        return vals;
      }
    }
    /**
     * The number of channels of analysis.
     */

  }, {
    key: "channels",
    get: function get() {
      return this._analyser.channels;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Meter.prototype), "dispose", this).call(this);

      this._analyser.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_MeterBase__WEBPACK_IMPORTED_MODULE_2__["MeterBase"].getDefaults(), {
        smoothing: 0.8,
        normalRange: false,
        channels: 1
      });
    }
  }]);

  return Meter;
}(_MeterBase__WEBPACK_IMPORTED_MODULE_2__["MeterBase"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/MeterBase.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/MeterBase.js ***!
  \*********************************************************************/
/*! exports provided: MeterBase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeterBase", function() { return MeterBase; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Analyser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Analyser */ "./node_modules/tone/build/esm/component/analysis/Analyser.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * The base class for Metering classes.
 */

var MeterBase = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(MeterBase, _ToneAudioNode);

  var _super = _createSuper(MeterBase);

  function MeterBase() {
    var _this;

    _classCallCheck(this, MeterBase);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(MeterBase.getDefaults(), arguments));
    _this.name = "MeterBase";
    _this.input = _this.output = _this._analyser = new _Analyser__WEBPACK_IMPORTED_MODULE_2__["Analyser"]({
      context: _this.context,
      size: 256,
      type: "waveform"
    });
    return _this;
  }

  _createClass(MeterBase, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MeterBase.prototype), "dispose", this).call(this);

      this._analyser.dispose();

      return this;
    }
  }]);

  return MeterBase;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/analysis/Waveform.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/analysis/Waveform.js ***!
  \********************************************************************/
/*! exports provided: Waveform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Waveform", function() { return Waveform; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _MeterBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MeterBase */ "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Get the current waveform data of the connected audio source.
 * @category Component
 */

var Waveform = /*#__PURE__*/function (_MeterBase) {
  _inherits(Waveform, _MeterBase);

  var _super = _createSuper(Waveform);

  function Waveform() {
    var _this;

    _classCallCheck(this, Waveform);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Waveform.getDefaults(), arguments, ["size"]));
    _this.name = "Waveform";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Waveform.getDefaults(), arguments, ["size"]);
    _this._analyser.type = "waveform";
    _this.size = options.size;
    return _this;
  }

  _createClass(Waveform, [{
    key: "getValue",
    value:
    /**
     * Return the waveform for the current time as a Float32Array where each value in the array
     * represents a sample in the waveform.
     */
    function getValue() {
      return this._analyser.getValue();
    }
    /**
     * The size of analysis. This must be a power of two in the range 16 to 16384.
     * Determines the size of the array returned by [[getValue]].
     */

  }, {
    key: "size",
    get: function get() {
      return this._analyser.size;
    },
    set: function set(size) {
      this._analyser.size = size;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_MeterBase__WEBPACK_IMPORTED_MODULE_1__["MeterBase"].getDefaults(), {
        size: 1024
      });
    }
  }]);

  return Waveform;
}(_MeterBase__WEBPACK_IMPORTED_MODULE_1__["MeterBase"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Channel.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Channel.js ***!
  \******************************************************************/
/*! exports provided: Channel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Channel", function() { return Channel; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Solo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Solo */ "./node_modules/tone/build/esm/component/channel/Solo.js");
/* harmony import */ var _PanVol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./PanVol */ "./node_modules/tone/build/esm/component/channel/PanVol.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Channel provides a channel strip interface with volume, pan, solo and mute controls.
 * See [[PanVol]] and [[Solo]]
 * @example
 * // pan the incoming signal left and drop the volume 12db
 * const channel = new Tone.Channel(-0.25, -12);
 * @category Component
 */

var Channel = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Channel, _ToneAudioNode);

  var _super = _createSuper(Channel);

  function Channel() {
    var _this;

    _classCallCheck(this, Channel);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Channel.getDefaults(), arguments, ["volume", "pan"]));
    _this.name = "Channel";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Channel.getDefaults(), arguments, ["volume", "pan"]);
    _this._solo = _this.input = new _Solo__WEBPACK_IMPORTED_MODULE_2__["Solo"]({
      solo: options.solo,
      context: _this.context
    });
    _this._panVol = _this.output = new _PanVol__WEBPACK_IMPORTED_MODULE_3__["PanVol"]({
      context: _this.context,
      pan: options.pan,
      volume: options.volume,
      mute: options.mute,
      channelCount: options.channelCount
    });
    _this.pan = _this._panVol.pan;
    _this.volume = _this._panVol.volume;

    _this._solo.connect(_this._panVol);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["pan", "volume"]);
    return _this;
  }

  _createClass(Channel, [{
    key: "solo",
    get:
    /**
     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances
     */
    function get() {
      return this._solo.solo;
    },
    set: function set(solo) {
      this._solo.solo = solo;
    }
    /**
     * If the current instance is muted, i.e. another instance is soloed,
     * or the channel is muted
     */

  }, {
    key: "muted",
    get: function get() {
      return this._solo.muted || this.mute;
    }
    /**
     * Mute/unmute the volume
     */

  }, {
    key: "mute",
    get: function get() {
      return this._panVol.mute;
    },
    set: function set(mute) {
      this._panVol.mute = mute;
    }
    /**
     * Get the gain node belonging to the bus name. Create it if
     * it doesn't exist
     * @param name The bus name
     */

  }, {
    key: "_getBus",
    value: function _getBus(name) {
      if (!Channel.buses.has(name)) {
        Channel.buses.set(name, new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
          context: this.context
        }));
      }

      return Channel.buses.get(name);
    }
    /**
     * Send audio to another channel using a string. `send` is a lot like
     * [[connect]], except it uses a string instead of an object. This can
     * be useful in large applications to decouple sections since [[send]]
     * and [[receive]] can be invoked separately in order to connect an object
     * @param name The channel name to send the audio
     * @param volume The amount of the signal to send.
     * 	Defaults to 0db, i.e. send the entire signal
     * @returns Returns the gain node of this connection.
     */

  }, {
    key: "send",
    value: function send(name) {
      var volume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var bus = this._getBus(name);

      var sendKnob = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
        context: this.context,
        units: "decibels",
        gain: volume
      });
      this.connect(sendKnob);
      sendKnob.connect(bus);
      return sendKnob;
    }
    /**
     * Receive audio from a channel which was connected with [[send]].
     * @param name The channel name to receive audio from.
     */

  }, {
    key: "receive",
    value: function receive(name) {
      var bus = this._getBus(name);

      bus.connect(this);
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Channel.prototype), "dispose", this).call(this);

      this._panVol.dispose();

      this.pan.dispose();
      this.volume.dispose();

      this._solo.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        pan: 0,
        volume: 0,
        mute: false,
        solo: false,
        channelCount: 1
      });
    }
  }]);

  return Channel;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);
/**
 * Store the send/receive channels by name.
 */

Channel.buses = new Map();

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/CrossFade.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/CrossFade.js ***!
  \********************************************************************/
/*! exports provided: CrossFade */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CrossFade", function() { return CrossFade; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_GainToAudio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/GainToAudio */ "./node_modules/tone/build/esm/signal/GainToAudio.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Tone.Crossfade provides equal power fading between two inputs.
 * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).
 * ```
 *                                             +---------+
 *                                            +> input a +>--+
 * +-----------+   +---------------------+     |         |   |
 * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |
 * +-----------+   |                     |     +---------+   |
 *               +-> pan               R +>-+                |   +--------+
 *               | +---------------------+  |                +---> output +>
 *  +------+     |                          |  +---------+   |   +--------+
 *  | fade +>----+                          | +> input b +>--+
 *  +------+                                |  |         |
 *                                          +--> gain    |
 *                                             +---------+
 * ```
 * @example
 * const crossFade = new Tone.CrossFade().toDestination();
 * // connect two inputs Tone.to a/b
 * const inputA = new Tone.Oscillator(440, "square").connect(crossFade.a).start();
 * const inputB = new Tone.Oscillator(440, "sine").connect(crossFade.b).start();
 * // use the fade to control the mix between the two
 * crossFade.fade.value = 0.5;
 * @category Component
 */

var CrossFade = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(CrossFade, _ToneAudioNode);

  var _super = _createSuper(CrossFade);

  function CrossFade() {
    var _this;

    _classCallCheck(this, CrossFade);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(CrossFade.getDefaults(), arguments, ["fade"])));
    _this.name = "CrossFade";
    /**
     * The crossfading is done by a StereoPannerNode
     */

    _this._panner = _this.context.createStereoPanner();
    /**
     * Split the output of the panner node into two values used to control the gains.
     */

    _this._split = _this.context.createChannelSplitter(2);
    /**
     * Convert the fade value into an audio range value so it can be connected
     * to the panner.pan AudioParam
     */

    _this._g2a = new _signal_GainToAudio__WEBPACK_IMPORTED_MODULE_4__["GainToAudio"]({
      context: _this.context
    });
    /**
     * The input which is at full level when fade = 0
     */

    _this.a = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: 0
    });
    /**
     * The input which is at full level when fade = 1
     */

    _this.b = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: 0
    });
    /**
     * The output is a mix between `a` and `b` at the ratio of `fade`
     */

    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    _this._internalChannels = [_this.a, _this.b];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(CrossFade.getDefaults(), arguments, ["fade"]);
    _this.fade = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "normalRange",
      value: options.fade
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "fade");

    _this.context.getConstant(1).connect(_this._panner);

    _this._panner.connect(_this._split); // this is necessary for standardized-audio-context
    // doesn't make any difference for the native AudioContext
    // https://github.com/chrisguttandin/standardized-audio-context/issues/647


    _this._panner.channelCount = 1;
    _this._panner.channelCountMode = "explicit";
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(_this._split, _this.a.gain, 0);
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(_this._split, _this.b.gain, 1);

    _this.fade.chain(_this._g2a, _this._panner.pan);

    _this.a.connect(_this.output);

    _this.b.connect(_this.output);

    return _this;
  }

  _createClass(CrossFade, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(CrossFade.prototype), "dispose", this).call(this);

      this.a.dispose();
      this.b.dispose();
      this.output.dispose();
      this.fade.dispose();

      this._g2a.dispose();

      this._panner.disconnect();

      this._split.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        fade: 0.5
      });
    }
  }]);

  return CrossFade;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Merge.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Merge.js ***!
  \****************************************************************/
/*! exports provided: Merge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Merge", function() { return Merge; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Merge brings multiple mono input channels into a single multichannel output channel.
 *
 * @example
 * const merge = new Tone.Merge().toDestination();
 * // routing a sine tone in the left channel
 * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();
 * // and noise in the right channel
 * const noise = new Tone.Noise().connect(merge, 0, 1).start();;
 * @category Component
 */

var Merge = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Merge, _ToneAudioNode);

  var _super = _createSuper(Merge);

  function Merge() {
    var _this;

    _classCallCheck(this, Merge);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Merge.getDefaults(), arguments, ["channels"]));
    _this.name = "Merge";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Merge.getDefaults(), arguments, ["channels"]);
    _this._merger = _this.output = _this.input = _this.context.createChannelMerger(options.channels);
    return _this;
  }

  _createClass(Merge, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Merge.prototype), "dispose", this).call(this);

      this._merger.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        channels: 2
      });
    }
  }]);

  return Merge;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/MidSideMerge.js ***!
  \***********************************************************************/
/*! exports provided: MidSideMerge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MidSideMerge", function() { return MidSideMerge; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony import */ var _signal_Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideSplit]]
 * ```
 * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
 * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right
 * ```
 * @category Component
 */

var MidSideMerge = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(MidSideMerge, _ToneAudioNode);

  var _super = _createSuper(MidSideMerge);

  function MidSideMerge() {
    var _this;

    _classCallCheck(this, MidSideMerge);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__["optionsFromArguments"])(MidSideMerge.getDefaults(), arguments));
    _this.name = "MidSideMerge";
    _this.mid = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
      context: _this.context
    });
    _this.side = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
      context: _this.context
    });
    _this._left = new _signal_Add__WEBPACK_IMPORTED_MODULE_2__["Add"]({
      context: _this.context
    });
    _this._leftMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
      context: _this.context,
      value: Math.SQRT1_2
    });
    _this._right = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__["Subtract"]({
      context: _this.context
    });
    _this._rightMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
      context: _this.context,
      value: Math.SQRT1_2
    });
    _this._merge = _this.output = new _Merge__WEBPACK_IMPORTED_MODULE_1__["Merge"]({
      context: _this.context
    });

    _this.mid.fan(_this._left);

    _this.side.connect(_this._left.addend);

    _this.mid.connect(_this._right);

    _this.side.connect(_this._right.subtrahend);

    _this._left.connect(_this._leftMult);

    _this._right.connect(_this._rightMult);

    _this._leftMult.connect(_this._merge, 0, 0);

    _this._rightMult.connect(_this._merge, 0, 1);

    return _this;
  }

  _createClass(MidSideMerge, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MidSideMerge.prototype), "dispose", this).call(this);

      this.mid.dispose();
      this.side.dispose();

      this._leftMult.dispose();

      this._rightMult.dispose();

      this._left.dispose();

      this._right.dispose();

      return this;
    }
  }]);

  return MidSideMerge;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/MidSideSplit.js ***!
  \***********************************************************************/
/*! exports provided: MidSideSplit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MidSideSplit", function() { return MidSideSplit; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _signal_Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)
 * and the 'side' (which only comes out of the the side channels).
 * ```
 * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
 * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right
 * ```
 * @category Component
 */

var MidSideSplit = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(MidSideSplit, _ToneAudioNode);

  var _super = _createSuper(MidSideSplit);

  function MidSideSplit() {
    var _this;

    _classCallCheck(this, MidSideSplit);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["optionsFromArguments"])(MidSideSplit.getDefaults(), arguments));
    _this.name = "MidSideSplit";
    _this._split = _this.input = new _Split__WEBPACK_IMPORTED_MODULE_1__["Split"]({
      channels: 2,
      context: _this.context
    });
    _this._midAdd = new _signal_Add__WEBPACK_IMPORTED_MODULE_2__["Add"]({
      context: _this.context
    });
    _this.mid = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
      context: _this.context,
      value: Math.SQRT1_2
    });
    _this._sideSubtract = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__["Subtract"]({
      context: _this.context
    });
    _this.side = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
      context: _this.context,
      value: Math.SQRT1_2
    });

    _this._split.connect(_this._midAdd, 0);

    _this._split.connect(_this._midAdd.addend, 1);

    _this._split.connect(_this._sideSubtract, 0);

    _this._split.connect(_this._sideSubtract.subtrahend, 1);

    _this._midAdd.connect(_this.mid);

    _this._sideSubtract.connect(_this.side);

    return _this;
  }

  _createClass(MidSideSplit, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MidSideSplit.prototype), "dispose", this).call(this);

      this.mid.dispose();
      this.side.dispose();

      this._midAdd.dispose();

      this._sideSubtract.dispose();

      this._split.dispose();

      return this;
    }
  }]);

  return MidSideSplit;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Mono.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Mono.js ***!
  \***************************************************************/
/*! exports provided: Mono */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mono", function() { return Mono; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Mono coerces the incoming mono or stereo signal into a mono signal
 * where both left and right channels have the same value. This can be useful
 * for [stereo imaging](https://en.wikipedia.org/wiki/Stereo_imaging).
 * @category Component
 */

var Mono = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Mono, _ToneAudioNode);

  var _super = _createSuper(Mono);

  function Mono() {
    var _this;

    _classCallCheck(this, Mono);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Mono.getDefaults(), arguments));
    _this.name = "Mono";
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    _this._merge = _this.output = new _Merge__WEBPACK_IMPORTED_MODULE_3__["Merge"]({
      channels: 2,
      context: _this.context
    });

    _this.input.connect(_this._merge, 0, 0);

    _this.input.connect(_this._merge, 0, 1);

    return _this;
  }

  _createClass(Mono, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Mono.prototype), "dispose", this).call(this);

      this._merge.dispose();

      this.input.dispose();
      return this;
    }
  }]);

  return Mono;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js":
/*!*************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/MultibandSplit.js ***!
  \*************************************************************************/
/*! exports provided: MultibandSplit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultibandSplit", function() { return MultibandSplit; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _filter_Filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Split the incoming signal into three bands (low, mid, high)
 * with two crossover frequency controls.
 * ```
 *            +----------------------+
 *          +-> input < lowFrequency +------------------> low
 *          | +----------------------+
 *          |
 *          | +--------------------------------------+
 * input ---+-> lowFrequency < input < highFrequency +--> mid
 *          | +--------------------------------------+
 *          |
 *          | +-----------------------+
 *          +-> highFrequency < input +-----------------> high
 *            +-----------------------+
 * ```
 * @category Component
 */

var MultibandSplit = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(MultibandSplit, _ToneAudioNode);

  var _super = _createSuper(MultibandSplit);

  function MultibandSplit() {
    var _this;

    _classCallCheck(this, MultibandSplit);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandSplit.getDefaults(), arguments, ["lowFrequency", "highFrequency"]));
    _this.name = "MultibandSplit";
    /**
     * the input
     */

    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    /**
     * no output node, use either low, mid or high outputs
     */

    _this.output = undefined;
    /**
     * The low band.
     */

    _this.low = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
      context: _this.context,
      frequency: 0,
      type: "lowpass"
    });
    /**
     * the lower filter of the mid band
     */

    _this._lowMidFilter = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
      context: _this.context,
      frequency: 0,
      type: "highpass"
    });
    /**
     * The mid band output.
     */

    _this.mid = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
      context: _this.context,
      frequency: 0,
      type: "lowpass"
    });
    /**
     * The high band output.
     */

    _this.high = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
      context: _this.context,
      frequency: 0,
      type: "highpass"
    });
    _this._internalChannels = [_this.low, _this.mid, _this.high];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandSplit.getDefaults(), arguments, ["lowFrequency", "highFrequency"]);
    _this.lowFrequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.lowFrequency
    });
    _this.highFrequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.highFrequency
    });
    _this.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
      context: _this.context,
      units: "positive",
      value: options.Q
    });

    _this.input.fan(_this.low, _this.high);

    _this.input.chain(_this._lowMidFilter, _this.mid); // the frequency control signal


    _this.lowFrequency.fan(_this.low.frequency, _this._lowMidFilter.frequency);

    _this.highFrequency.fan(_this.mid.frequency, _this.high.frequency); // the Q value


    _this.Q.connect(_this.low.Q);

    _this.Q.connect(_this._lowMidFilter.Q);

    _this.Q.connect(_this.mid.Q);

    _this.Q.connect(_this.high.Q);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["high", "mid", "low", "highFrequency", "lowFrequency"]);
    return _this;
  }

  _createClass(MultibandSplit, [{
    key: "dispose",
    value:
    /**
     * Clean up.
     */
    function dispose() {
      _get(_getPrototypeOf(MultibandSplit.prototype), "dispose", this).call(this);

      Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["writable"])(this, ["high", "mid", "low", "highFrequency", "lowFrequency"]);
      this.low.dispose();

      this._lowMidFilter.dispose();

      this.mid.dispose();
      this.high.dispose();
      this.lowFrequency.dispose();
      this.highFrequency.dispose();
      this.Q.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        Q: 1,
        highFrequency: 2500,
        lowFrequency: 400
      });
    }
  }]);

  return MultibandSplit;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/PanVol.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/PanVol.js ***!
  \*****************************************************************/
/*! exports provided: PanVol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PanVol", function() { return PanVol; });
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Panner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Panner */ "./node_modules/tone/build/esm/component/channel/Panner.js");
/* harmony import */ var _Volume__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * PanVol is a Tone.Panner and Tone.Volume in one.
 * @example
 * // pan the incoming signal left and drop the volume
 * const panVol = new Tone.PanVol(-0.25, -12).toDestination();
 * const osc = new Tone.Oscillator().connect(panVol).start();
 * @category Component
 */

var PanVol = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(PanVol, _ToneAudioNode);

  var _super = _createSuper(PanVol);

  function PanVol() {
    var _this;

    _classCallCheck(this, PanVol);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PanVol.getDefaults(), arguments, ["pan", "volume"]));
    _this.name = "PanVol";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PanVol.getDefaults(), arguments, ["pan", "volume"]);
    _this._panner = _this.input = new _Panner__WEBPACK_IMPORTED_MODULE_3__["Panner"]({
      context: _this.context,
      pan: options.pan,
      channelCount: options.channelCount
    });
    _this.pan = _this._panner.pan;
    _this._volume = _this.output = new _Volume__WEBPACK_IMPORTED_MODULE_4__["Volume"]({
      context: _this.context,
      volume: options.volume
    });
    _this.volume = _this._volume.volume; // connections

    _this._panner.connect(_this._volume);

    _this.mute = options.mute;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_0__["readOnly"])(_assertThisInitialized(_this), ["pan", "volume"]);
    return _this;
  }

  _createClass(PanVol, [{
    key: "mute",
    get:
    /**
     * Mute/unmute the volume
     */
    function get() {
      return this._volume.mute;
    },
    set: function set(mute) {
      this._volume.mute = mute;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PanVol.prototype), "dispose", this).call(this);

      this._panner.dispose();

      this.pan.dispose();

      this._volume.dispose();

      this.volume.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        mute: false,
        pan: 0,
        volume: 0,
        channelCount: 1
      });
    }
  }]);

  return PanVol;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Panner.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Panner.js ***!
  \*****************************************************************/
/*! exports provided: Panner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Panner", function() { return Panner; });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.
 * @example
 * return Tone.Offline(() => {
 * // move the input signal from right to left
 * 	const panner = new Tone.Panner(1).toDestination();
 * 	panner.pan.rampTo(-1, 0.5);
 * 	const osc = new Tone.Oscillator(100).connect(panner).start();
 * }, 0.5, 2);
 * @category Component
 */

var Panner = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Panner, _ToneAudioNode);

  var _super = _createSuper(Panner);

  function Panner() {
    var _this;

    _classCallCheck(this, Panner);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner.getDefaults(), arguments, ["pan"])));
    _this.name = "Panner";
    /**
     * the panner node
     */

    _this._panner = _this.context.createStereoPanner();
    _this.input = _this._panner;
    _this.output = _this._panner;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner.getDefaults(), arguments, ["pan"]);
    _this.pan = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._panner.pan,
      value: options.pan,
      minValue: -1,
      maxValue: 1
    }); // this is necessary for standardized-audio-context
    // doesn't make any difference for the native AudioContext
    // https://github.com/chrisguttandin/standardized-audio-context/issues/647

    _this._panner.channelCount = options.channelCount;
    _this._panner.channelCountMode = "explicit"; // initial value

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "pan");
    return _this;
  }

  _createClass(Panner, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Panner.prototype), "dispose", this).call(this);

      this._panner.disconnect();

      this.pan.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        pan: 0,
        channelCount: 1
      });
    }
  }]);

  return Panner;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Panner3D.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Panner3D.js ***!
  \*******************************************************************/
/*! exports provided: Panner3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Panner3D", function() { return Panner3D; });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Listener__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/Listener */ "./node_modules/tone/build/esm/core/context/Listener.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * A spatialized panner node which supports equalpower or HRTF panning.
 * @category Component
 */

var Panner3D = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Panner3D, _ToneAudioNode);

  var _super = _createSuper(Panner3D);

  function Panner3D() {
    var _this;

    _classCallCheck(this, Panner3D);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner3D.getDefaults(), arguments, ["positionX", "positionY", "positionZ"]));
    _this.name = "Panner3D";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner3D.getDefaults(), arguments, ["positionX", "positionY", "positionZ"]);
    _this._panner = _this.input = _this.output = _this.context.createPanner(); // set some values

    _this.panningModel = options.panningModel;
    _this.maxDistance = options.maxDistance;
    _this.distanceModel = options.distanceModel;
    _this.coneOuterGain = options.coneOuterGain;
    _this.coneOuterAngle = options.coneOuterAngle;
    _this.coneInnerAngle = options.coneInnerAngle;
    _this.refDistance = options.refDistance;
    _this.rolloffFactor = options.rolloffFactor;
    _this.positionX = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._panner.positionX,
      value: options.positionX
    });
    _this.positionY = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._panner.positionY,
      value: options.positionY
    });
    _this.positionZ = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._panner.positionZ,
      value: options.positionZ
    });
    _this.orientationX = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._panner.orientationX,
      value: options.orientationX
    });
    _this.orientationY = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._panner.orientationY,
      value: options.orientationY
    });
    _this.orientationZ = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._panner.orientationZ,
      value: options.orientationZ
    });
    return _this;
  }

  _createClass(Panner3D, [{
    key: "setPosition",
    value:
    /**
     * Sets the position of the source in 3d space.
     */
    function setPosition(x, y, z) {
      this.positionX.value = x;
      this.positionY.value = y;
      this.positionZ.value = z;
      return this;
    }
    /**
     * Sets the orientation of the source in 3d space.
     */

  }, {
    key: "setOrientation",
    value: function setOrientation(x, y, z) {
      this.orientationX.value = x;
      this.orientationY.value = y;
      this.orientationZ.value = z;
      return this;
    }
    /**
     * The panning model. Either "equalpower" or "HRTF".
     */

  }, {
    key: "panningModel",
    get: function get() {
      return this._panner.panningModel;
    },
    set: function set(val) {
      this._panner.panningModel = val;
    }
    /**
     * A reference distance for reducing volume as source move further from the listener
     */

  }, {
    key: "refDistance",
    get: function get() {
      return this._panner.refDistance;
    },
    set: function set(val) {
      this._panner.refDistance = val;
    }
    /**
     * Describes how quickly the volume is reduced as source moves away from listener.
     */

  }, {
    key: "rolloffFactor",
    get: function get() {
      return this._panner.rolloffFactor;
    },
    set: function set(val) {
      this._panner.rolloffFactor = val;
    }
    /**
     * The distance model used by,  "linear", "inverse", or "exponential".
     */

  }, {
    key: "distanceModel",
    get: function get() {
      return this._panner.distanceModel;
    },
    set: function set(val) {
      this._panner.distanceModel = val;
    }
    /**
     * The angle, in degrees, inside of which there will be no volume reduction
     */

  }, {
    key: "coneInnerAngle",
    get: function get() {
      return this._panner.coneInnerAngle;
    },
    set: function set(val) {
      this._panner.coneInnerAngle = val;
    }
    /**
     * The angle, in degrees, outside of which the volume will be reduced
     * to a constant value of coneOuterGain
     */

  }, {
    key: "coneOuterAngle",
    get: function get() {
      return this._panner.coneOuterAngle;
    },
    set: function set(val) {
      this._panner.coneOuterAngle = val;
    }
    /**
     * The gain outside of the coneOuterAngle
     */

  }, {
    key: "coneOuterGain",
    get: function get() {
      return this._panner.coneOuterGain;
    },
    set: function set(val) {
      this._panner.coneOuterGain = val;
    }
    /**
     * The maximum distance between source and listener,
     * after which the volume will not be reduced any further.
     */

  }, {
    key: "maxDistance",
    get: function get() {
      return this._panner.maxDistance;
    },
    set: function set(val) {
      this._panner.maxDistance = val;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Panner3D.prototype), "dispose", this).call(this);

      this._panner.disconnect();

      this.orientationX.dispose();
      this.orientationY.dispose();
      this.orientationZ.dispose();
      this.positionX.dispose();
      this.positionY.dispose();
      this.positionZ.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        coneInnerAngle: 360,
        coneOuterAngle: 360,
        coneOuterGain: 0,
        distanceModel: "inverse",
        maxDistance: 10000,
        orientationX: 0,
        orientationY: 0,
        orientationZ: 0,
        panningModel: "equalpower",
        positionX: 0,
        positionY: 0,
        positionZ: 0,
        refDistance: 1,
        rolloffFactor: 1
      });
    }
  }]);

  return Panner3D;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Recorder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Recorder.js ***!
  \*******************************************************************/
/*! exports provided: Recorder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Recorder", function() { return Recorder; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * A wrapper around the MediaRecorder API. Unlike the rest of Tone.js, this module does not offer
 * any sample-accurate scheduling because it is not a feature of the MediaRecorder API.
 * This is only natively supported in Chrome and Firefox.
 * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
 * @example
 * const recorder = new Tone.Recorder();
 * const synth = new Tone.Synth().connect(recorder);
 * // start recording
 * recorder.start();
 * // generate a few notes
 * synth.triggerAttackRelease("C3", 0.5);
 * synth.triggerAttackRelease("C4", 0.5, "+1");
 * synth.triggerAttackRelease("C5", 0.5, "+2");
 * // wait for the notes to end and stop the recording
 * setTimeout(async () => {
 * 	// the recorded audio is returned as a blob
 * 	const recording = await recorder.stop();
 * 	// download the recording by creating an anchor element and blob url
 * 	const url = URL.createObjectURL(recording);
 * 	const anchor = document.createElement("a");
 * 	anchor.download = "recording.webm";
 * 	anchor.href = url;
 * 	anchor.click();
 * }, 4000);
 * @category Component
 */

var Recorder = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Recorder, _ToneAudioNode);

  var _super = _createSuper(Recorder);

  function Recorder() {
    var _this;

    _classCallCheck(this, Recorder);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__["optionsFromArguments"])(Recorder.getDefaults(), arguments));
    _this.name = "Recorder";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__["optionsFromArguments"])(Recorder.getDefaults(), arguments);
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
      context: _this.context
    });
    Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(Recorder.supported, "Media Recorder API is not available");
    _this._stream = _this.context.createMediaStreamDestination();

    _this.input.connect(_this._stream);

    _this._recorder = new MediaRecorder(_this._stream.stream, {
      mimeType: options.mimeType
    });
    return _this;
  }

  _createClass(Recorder, [{
    key: "mimeType",
    get:
    /**
     * The mime type is the format that the audio is encoded in. For Chrome
     * that is typically webm encoded as "vorbis".
     */
    function get() {
      return this._recorder.mimeType;
    }
    /**
     * Test if your platform supports the Media Recorder API. If it's not available,
     * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
     */

  }, {
    key: "state",
    get:
    /**
     * Get the playback state of the Recorder, either "started", "stopped" or "paused"
     */
    function get() {
      if (this._recorder.state === "inactive") {
        return "stopped";
      } else if (this._recorder.state === "paused") {
        return "paused";
      } else {
        return "started";
      }
    }
    /**
     * Start the Recorder. Returns a promise which resolves
     * when the recorder has started.
     */

  }, {
    key: "start",
    value: function start() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var _this2 = this;

        var startPromise;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(this.state !== "started", "Recorder is already started");
                startPromise = new Promise(function (done) {
                  var handleStart = function handleStart() {
                    _this2._recorder.removeEventListener("start", handleStart, false);

                    done();
                  };

                  _this2._recorder.addEventListener("start", handleStart, false);
                });

                this._recorder.start();

                _context.next = 5;
                return startPromise;

              case 5:
                return _context.abrupt("return", _context.sent);

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Stop the recorder. Returns a promise with the recorded content until this point
     * encoded as [[mimeType]]
     */

  }, {
    key: "stop",
    value: function stop() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var _this3 = this;

        var dataPromise;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(this.state !== "stopped", "Recorder is not started");
                dataPromise = new Promise(function (done) {
                  var handleData = function handleData(e) {
                    _this3._recorder.removeEventListener("dataavailable", handleData, false);

                    done(e.data);
                  };

                  _this3._recorder.addEventListener("dataavailable", handleData, false);
                });

                this._recorder.stop();

                _context2.next = 5;
                return dataPromise;

              case 5:
                return _context2.abrupt("return", _context2.sent);

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
    }
    /**
     * Pause the recorder
     */

  }, {
    key: "pause",
    value: function pause() {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(this.state === "started", "Recorder must be started");

      this._recorder.pause();

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Recorder.prototype), "dispose", this).call(this);

      this.input.dispose();

      this._stream.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults();
    }
  }, {
    key: "supported",
    get: function get() {
      return _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_5__["theWindow"] !== null && Reflect.has(_core_context_AudioContext__WEBPACK_IMPORTED_MODULE_5__["theWindow"], "MediaRecorder");
    }
  }]);

  return Recorder;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Solo.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Solo.js ***!
  \***************************************************************/
/*! exports provided: Solo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Solo", function() { return Solo; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,
 * it will mute all other instances of Solo.
 * @example
 * const soloA = new Tone.Solo().toDestination();
 * const oscA = new Tone.Oscillator("C4", "sawtooth").connect(soloA);
 * const soloB = new Tone.Solo().toDestination();
 * const oscB = new Tone.Oscillator("E4", "square").connect(soloB);
 * soloA.solo = true;
 * // no audio will pass through soloB
 * @category Component
 */

var Solo = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Solo, _ToneAudioNode);

  var _super = _createSuper(Solo);

  function Solo() {
    var _this;

    _classCallCheck(this, Solo);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Solo.getDefaults(), arguments, ["solo"]));
    _this.name = "Solo";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Solo.getDefaults(), arguments, ["solo"]);
    _this.input = _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });

    if (!Solo._allSolos.has(_this.context)) {
      Solo._allSolos.set(_this.context, new Set());
    }

    Solo._allSolos.get(_this.context).add(_assertThisInitialized(_this)); // set initially


    _this.solo = options.solo;
    return _this;
  }

  _createClass(Solo, [{
    key: "solo",
    get:
    /**
     * Isolates this instance and mutes all other instances of Solo.
     * Only one instance can be soloed at a time. A soloed
     * instance will report `solo=false` when another instance is soloed.
     */
    function get() {
      return this._isSoloed();
    },
    set: function set(solo) {
      if (solo) {
        this._addSolo();
      } else {
        this._removeSolo();
      }

      Solo._allSolos.get(this.context).forEach(function (instance) {
        return instance._updateSolo();
      });
    }
    /**
     * If the current instance is muted, i.e. another instance is soloed
     */

  }, {
    key: "muted",
    get: function get() {
      return this.input.gain.value === 0;
    }
    /**
     * Add this to the soloed array
     */

  }, {
    key: "_addSolo",
    value: function _addSolo() {
      if (!Solo._soloed.has(this.context)) {
        Solo._soloed.set(this.context, new Set());
      }

      Solo._soloed.get(this.context).add(this);
    }
    /**
     * Remove this from the soloed array
     */

  }, {
    key: "_removeSolo",
    value: function _removeSolo() {
      if (Solo._soloed.has(this.context)) {
        Solo._soloed.get(this.context).delete(this);
      }
    }
    /**
     * Is this on the soloed array
     */

  }, {
    key: "_isSoloed",
    value: function _isSoloed() {
      return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);
    }
    /**
     * Returns true if no one is soloed
     */

  }, {
    key: "_noSolos",
    value: function _noSolos() {
      // either does not have any soloed added
      return !Solo._soloed.has(this.context) || // or has a solo set but doesn't include any items
      Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;
    }
    /**
     * Solo the current instance and unsolo all other instances.
     */

  }, {
    key: "_updateSolo",
    value: function _updateSolo() {
      if (this._isSoloed()) {
        this.input.gain.value = 1;
      } else if (this._noSolos()) {
        // no one is soloed
        this.input.gain.value = 1;
      } else {
        this.input.gain.value = 0;
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Solo.prototype), "dispose", this).call(this);

      Solo._allSolos.get(this.context).delete(this);

      this._removeSolo();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        solo: false
      });
    }
  }]);

  return Solo;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);
/**
 * Hold all of the solo'ed tracks belonging to a specific context
 */

Solo._allSolos = new Map();
/**
 * Hold the currently solo'ed instance(s)
 */

Solo._soloed = new Map();

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Split.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Split.js ***!
  \****************************************************************/
/*! exports provided: Split */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Split", function() { return Split; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Split splits an incoming signal into the number of given channels.
 *
 * @example
 * const split = new Tone.Split();
 * // stereoSignal.connect(split);
 * @category Component
 */

var Split = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Split, _ToneAudioNode);

  var _super = _createSuper(Split);

  function Split() {
    var _this;

    _classCallCheck(this, Split);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Split.getDefaults(), arguments, ["channels"]));
    _this.name = "Split";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Split.getDefaults(), arguments, ["channels"]);
    _this._splitter = _this.input = _this.output = _this.context.createChannelSplitter(options.channels);
    _this._internalChannels = [_this._splitter];
    return _this;
  }

  _createClass(Split, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Split.prototype), "dispose", this).call(this);

      this._splitter.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        channels: 2
      });
    }
  }]);

  return Split;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/channel/Volume.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/channel/Volume.js ***!
  \*****************************************************************/
/*! exports provided: Volume */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Volume", function() { return Volume; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Volume is a simple volume node, useful for creating a volume fader.
 *
 * @example
 * const vol = new Tone.Volume(-12).toDestination();
 * const osc = new Tone.Oscillator().connect(vol).start();
 * @category Component
 */

var Volume = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Volume, _ToneAudioNode);

  var _super = _createSuper(Volume);

  function Volume() {
    var _this;

    _classCallCheck(this, Volume);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Volume.getDefaults(), arguments, ["volume"]));
    _this.name = "Volume";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Volume.getDefaults(), arguments, ["volume"]);
    _this.input = _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: options.volume,
      units: "decibels"
    });
    _this.volume = _this.output.gain;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "volume");
    _this._unmutedVolume = options.volume; // set the mute initially

    _this.mute = options.mute;
    return _this;
  }

  _createClass(Volume, [{
    key: "mute",
    get:
    /**
     * Mute the output.
     * @example
     * const vol = new Tone.Volume(-12).toDestination();
     * const osc = new Tone.Oscillator().connect(vol).start();
     * // mute the output
     * vol.mute = true;
     */
    function get() {
      return this.volume.value === -Infinity;
    },
    set: function set(mute) {
      if (!this.mute && mute) {
        this._unmutedVolume = this.volume.value; // maybe it should ramp here?

        this.volume.value = -Infinity;
      } else if (this.mute && !mute) {
        this.volume.value = this._unmutedVolume;
      }
    }
    /**
     * clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Volume.prototype), "dispose", this).call(this);

      this.input.dispose();
      this.volume.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        mute: false,
        volume: 0
      });
    }
  }]);

  return Volume;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/Compressor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/Compressor.js ***!
  \**********************************************************************/
/*! exports provided: Compressor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Compressor", function() { return Compressor; });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Compressor is a thin wrapper around the Web Audio
 * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).
 * Compression reduces the volume of loud sounds or amplifies quiet sounds
 * by narrowing or "compressing" an audio signal's dynamic range.
 * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).
 * @example
 * const comp = new Tone.Compressor(-30, 3);
 * @category Component
 */

var Compressor = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Compressor, _ToneAudioNode);

  var _super = _createSuper(Compressor);

  function Compressor() {
    var _this;

    _classCallCheck(this, Compressor);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Compressor.getDefaults(), arguments, ["threshold", "ratio"]));
    _this.name = "Compressor";
    /**
     * the compressor node
     */

    _this._compressor = _this.context.createDynamicsCompressor();
    _this.input = _this._compressor;
    _this.output = _this._compressor;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Compressor.getDefaults(), arguments, ["threshold", "ratio"]);
    _this.threshold = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      minValue: _this._compressor.threshold.minValue,
      maxValue: _this._compressor.threshold.maxValue,
      context: _this.context,
      convert: false,
      param: _this._compressor.threshold,
      units: "decibels",
      value: options.threshold
    });
    _this.attack = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      minValue: _this._compressor.attack.minValue,
      maxValue: _this._compressor.attack.maxValue,
      context: _this.context,
      param: _this._compressor.attack,
      units: "time",
      value: options.attack
    });
    _this.release = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      minValue: _this._compressor.release.minValue,
      maxValue: _this._compressor.release.maxValue,
      context: _this.context,
      param: _this._compressor.release,
      units: "time",
      value: options.release
    });
    _this.knee = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      minValue: _this._compressor.knee.minValue,
      maxValue: _this._compressor.knee.maxValue,
      context: _this.context,
      convert: false,
      param: _this._compressor.knee,
      units: "decibels",
      value: options.knee
    });
    _this.ratio = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      minValue: _this._compressor.ratio.minValue,
      maxValue: _this._compressor.ratio.maxValue,
      context: _this.context,
      convert: false,
      param: _this._compressor.ratio,
      units: "positive",
      value: options.ratio
    }); // set the defaults

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["knee", "release", "attack", "ratio", "threshold"]);
    return _this;
  }

  _createClass(Compressor, [{
    key: "reduction",
    get:
    /**
     * A read-only decibel value for metering purposes, representing the current amount of gain
     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).
     */
    function get() {
      return this._compressor.reduction;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Compressor.prototype), "dispose", this).call(this);

      this._compressor.disconnect();

      this.attack.dispose();
      this.release.dispose();
      this.threshold.dispose();
      this.ratio.dispose();
      this.knee.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        attack: 0.003,
        knee: 30,
        ratio: 12,
        release: 0.25,
        threshold: -24
      });
    }
  }]);

  return Compressor;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/Gate.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/Gate.js ***!
  \****************************************************************/
/*! exports provided: Gate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gate", function() { return Gate; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _signal_GreaterThan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../signal/GreaterThan */ "./node_modules/tone/build/esm/signal/GreaterThan.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _analysis_Follower__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../analysis/Follower */ "./node_modules/tone/build/esm/component/analysis/Follower.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Gate only passes a signal through when the incoming
 * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude
 * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].
 *
 * @example
 * const gate = new Tone.Gate(-30, 0.2).toDestination();
 * const mic = new Tone.UserMedia().connect(gate);
 * // the gate will only pass through the incoming
 * // signal when it's louder than -30db
 * @category Component
 */

var Gate = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Gate, _ToneAudioNode);

  var _super = _createSuper(Gate);

  function Gate() {
    var _this;

    _classCallCheck(this, Gate);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Gate.getDefaults(), arguments, ["threshold", "smoothing"])));
    _this.name = "Gate";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Gate.getDefaults(), arguments, ["threshold", "smoothing"]);
    _this._follower = new _analysis_Follower__WEBPACK_IMPORTED_MODULE_3__["Follower"]({
      context: _this.context,
      smoothing: options.smoothing
    });
    _this._gt = new _signal_GreaterThan__WEBPACK_IMPORTED_MODULE_1__["GreaterThan"]({
      context: _this.context,
      value: Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["dbToGain"])(options.threshold)
    });
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });
    _this._gate = _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    }); // connections

    _this.input.connect(_this._gate); // the control signal


    _this.input.chain(_this._follower, _this._gt, _this._gate.gain);

    return _this;
  }

  _createClass(Gate, [{
    key: "threshold",
    get:
    /**
     * The threshold of the gate in decibels
     */
    function get() {
      return Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["gainToDb"])(this._gt.value);
    },
    set: function set(thresh) {
      this._gt.value = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["dbToGain"])(thresh);
    }
    /**
     * The attack/decay speed of the gate. See [[Follower.smoothing]]
     */

  }, {
    key: "smoothing",
    get: function get() {
      return this._follower.smoothing;
    },
    set: function set(smoothingTime) {
      this._follower.smoothing = smoothingTime;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Gate.prototype), "dispose", this).call(this);

      this.input.dispose();

      this._follower.dispose();

      this._gt.dispose();

      this._gate.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        smoothing: 0.1,
        threshold: -40
      });
    }
  }]);

  return Gate;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/Limiter.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/Limiter.js ***!
  \*******************************************************************/
/*! exports provided: Limiter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Limiter", function() { return Limiter; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Compressor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





;
/**
 * Limiter will limit the loudness of an incoming signal.
 * Under the hood it's composed of a [[Compressor]] with a fast attack
 * and release and max compression ratio.
 *
 * @example
 * const limiter = new Tone.Limiter(-20).toDestination();
 * const oscillator = new Tone.Oscillator().connect(limiter);
 * oscillator.start();
 * @category Component
 */

var Limiter = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Limiter, _ToneAudioNode);

  var _super = _createSuper(Limiter);

  function Limiter() {
    var _this;

    _classCallCheck(this, Limiter);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Limiter.getDefaults(), arguments, ["threshold"])));
    _this.name = "Limiter";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Limiter.getDefaults(), arguments, ["threshold"]);
    _this._compressor = _this.input = _this.output = new _Compressor__WEBPACK_IMPORTED_MODULE_2__["Compressor"]({
      context: _this.context,
      ratio: 20,
      attack: 0.003,
      release: 0.01,
      threshold: options.threshold
    });
    _this.threshold = _this._compressor.threshold;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "threshold");
    return _this;
  }

  _createClass(Limiter, [{
    key: "reduction",
    get:
    /**
     * A read-only decibel value for metering purposes, representing the current amount of gain
     * reduction that the compressor is applying to the signal.
     */
    function get() {
      return this._compressor.reduction;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Limiter.prototype), "dispose", this).call(this);

      this._compressor.dispose();

      this.threshold.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        threshold: -12
      });
    }
  }]);

  return Limiter;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js ***!
  \*****************************************************************************/
/*! exports provided: MidSideCompressor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function() { return MidSideCompressor; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Compressor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../channel/MidSideSplit */ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
/* harmony import */ var _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channel/MidSideMerge */ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * MidSideCompressor applies two different compressors to the [[mid]]
 * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].
 * @category Component
 */

var MidSideCompressor = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(MidSideCompressor, _ToneAudioNode);

  var _super = _createSuper(MidSideCompressor);

  function MidSideCompressor() {
    var _this;

    _classCallCheck(this, MidSideCompressor);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MidSideCompressor.getDefaults(), arguments)));
    _this.name = "MidSideCompressor";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MidSideCompressor.getDefaults(), arguments);
    _this._midSideSplit = _this.input = new _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_3__["MidSideSplit"]({
      context: _this.context
    });
    _this._midSideMerge = _this.output = new _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_4__["MidSideMerge"]({
      context: _this.context
    });
    _this.mid = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.mid, {
      context: _this.context
    }));
    _this.side = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.side, {
      context: _this.context
    }));

    _this._midSideSplit.mid.chain(_this.mid, _this._midSideMerge.mid);

    _this._midSideSplit.side.chain(_this.side, _this._midSideMerge.side);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this), ["mid", "side"]);
    return _this;
  }

  _createClass(MidSideCompressor, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MidSideCompressor.prototype), "dispose", this).call(this);

      this.mid.dispose();
      this.side.dispose();

      this._midSideSplit.dispose();

      this._midSideMerge.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        mid: {
          ratio: 3,
          threshold: -24,
          release: 0.03,
          attack: 0.02,
          knee: 16
        },
        side: {
          ratio: 6,
          threshold: -30,
          release: 0.25,
          attack: 0.03,
          knee: 10
        }
      });
    }
  }]);

  return MidSideCompressor;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js ***!
  \*******************************************************************************/
/*! exports provided: MultibandCompressor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function() { return MultibandCompressor; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Compressor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channel/MultibandSplit */ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]
 *
 * @example
 * const multiband = new Tone.MultibandCompressor({
 * 	lowFrequency: 200,
 * 	highFrequency: 1300,
 * 	low: {
 * 		threshold: -12
 * 	}
 * });
 * @category Component
 */

var MultibandCompressor = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(MultibandCompressor, _ToneAudioNode);

  var _super = _createSuper(MultibandCompressor);

  function MultibandCompressor() {
    var _this;

    _classCallCheck(this, MultibandCompressor);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandCompressor.getDefaults(), arguments)));
    _this.name = "MultibandCompressor";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandCompressor.getDefaults(), arguments);
    _this._splitter = _this.input = new _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__["MultibandSplit"]({
      context: _this.context,
      lowFrequency: options.lowFrequency,
      highFrequency: options.highFrequency
    });
    _this.lowFrequency = _this._splitter.lowFrequency;
    _this.highFrequency = _this._splitter.highFrequency;
    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
      context: _this.context
    });
    _this.low = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.low, {
      context: _this.context
    }));
    _this.mid = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.mid, {
      context: _this.context
    }));
    _this.high = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.high, {
      context: _this.context
    })); // connect the compressor

    _this._splitter.low.chain(_this.low, _this.output);

    _this._splitter.mid.chain(_this.mid, _this.output);

    _this._splitter.high.chain(_this.high, _this.output);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["high", "mid", "low", "highFrequency", "lowFrequency"]);
    return _this;
  }

  _createClass(MultibandCompressor, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MultibandCompressor.prototype), "dispose", this).call(this);

      this._splitter.dispose();

      this.low.dispose();
      this.mid.dispose();
      this.high.dispose();
      this.output.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        lowFrequency: 250,
        highFrequency: 2000,
        low: {
          ratio: 6,
          threshold: -30,
          release: 0.25,
          attack: 0.03,
          knee: 10
        },
        mid: {
          ratio: 3,
          threshold: -24,
          release: 0.03,
          attack: 0.02,
          knee: 16
        },
        high: {
          ratio: 3,
          threshold: -24,
          release: 0.03,
          attack: 0.02,
          knee: 16
        }
      });
    }
  }]);

  return MultibandCompressor;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js ***!
  \*****************************************************************************/
/*! exports provided: AmplitudeEnvelope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function() { return AmplitudeEnvelope; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Envelope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.
 * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts
 * an audio signal as the input and will apply the envelope to the amplitude
 * of the signal.
 * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).
 *
 * @example
 * return Tone.Offline(() => {
 * 	const ampEnv = new Tone.AmplitudeEnvelope({
 * 		attack: 0.1,
 * 		decay: 0.2,
 * 		sustain: 1.0,
 * 		release: 0.8
 * 	}).toDestination();
 * 	// create an oscillator and connect it
 * 	const osc = new Tone.Oscillator().connect(ampEnv).start();
 * 	// trigger the envelopes attack and release "8t" apart
 * 	ampEnv.triggerAttackRelease("8t");
 * }, 1.5, 1);
 * @category Component
 */

var AmplitudeEnvelope = /*#__PURE__*/function (_Envelope) {
  _inherits(AmplitudeEnvelope, _Envelope);

  var _super = _createSuper(AmplitudeEnvelope);

  function AmplitudeEnvelope() {
    var _this;

    _classCallCheck(this, AmplitudeEnvelope);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AmplitudeEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
    _this.name = "AmplitudeEnvelope";
    _this._gainNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: 0
    });
    _this.output = _this._gainNode;
    _this.input = _this._gainNode;

    _this._sig.connect(_this._gainNode.gain);

    _this.output = _this._gainNode;
    _this.input = _this._gainNode;
    return _this;
  }
  /**
   * Clean up
   */


  _createClass(AmplitudeEnvelope, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(AmplitudeEnvelope.prototype), "dispose", this).call(this);

      this._gainNode.dispose();

      return this;
    }
  }]);

  return AmplitudeEnvelope;
}(_Envelope__WEBPACK_IMPORTED_MODULE_2__["Envelope"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/envelope/Envelope.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/envelope/Envelope.js ***!
  \********************************************************************/
/*! exports provided: Envelope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return Envelope; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)
 * envelope generator. Envelope outputs a signal which
 * can be connected to an AudioParam or Tone.Signal.
 * ```
 *           /\
 *          /  \
 *         /    \
 *        /      \
 *       /        \___________
 *      /                     \
 *     /                       \
 *    /                         \
 *   /                           \
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const env = new Tone.Envelope({
 * 		attack: 0.1,
 * 		decay: 0.2,
 * 		sustain: 0.5,
 * 		release: 0.8,
 * 	}).toDestination();
 * 	env.triggerAttackRelease(0.5);
 * }, 1.5, 1);
 * @category Component
 */

var Envelope = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Envelope, _ToneAudioNode);

  var _super = _createSuper(Envelope);

  function Envelope() {
    var _this;

    _classCallCheck(this, Envelope);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
    _this.name = "Envelope";
    /**
     * the signal which is output.
     */

    _this._sig = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      value: 0
    });
    /**
     * The output signal of the envelope
     */

    _this.output = _this._sig;
    /**
     * Envelope has no input
     */

    _this.input = undefined;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
    _this.attack = options.attack;
    _this.decay = options.decay;
    _this.sustain = options.sustain;
    _this.release = options.release;
    _this.attackCurve = options.attackCurve;
    _this.releaseCurve = options.releaseCurve;
    _this.decayCurve = options.decayCurve;
    return _this;
  }

  _createClass(Envelope, [{
    key: "value",
    get:
    /**
     * Read the current value of the envelope. Useful for
     * synchronizing visual output to the envelope.
     */
    function get() {
      return this.getValueAtTime(this.now());
    }
    /**
     * Get the curve
     * @param  curve
     * @param  direction  In/Out
     * @return The curve name
     */

  }, {
    key: "_getCurve",
    value: function _getCurve(curve, direction) {
      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isString"])(curve)) {
        return curve;
      } else {
        // look up the name in the curves array
        var curveName;

        for (curveName in EnvelopeCurves) {
          if (EnvelopeCurves[curveName][direction] === curve) {
            return curveName;
          }
        } // return the custom curve


        return curve;
      }
    }
    /**
     * Assign a the curve to the given name using the direction
     * @param  name
     * @param  direction In/Out
     * @param  curve
     */

  }, {
    key: "_setCurve",
    value: function _setCurve(name, direction, curve) {
      // check if it's a valid type
      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isString"])(curve) && Reflect.has(EnvelopeCurves, curve)) {
        var curveDef = EnvelopeCurves[curve];

        if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isObject"])(curveDef)) {
          if (name !== "_decayCurve") {
            this[name] = curveDef[direction];
          }
        } else {
          this[name] = curveDef;
        }
      } else if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isArray"])(curve) && name !== "_decayCurve") {
        this[name] = curve;
      } else {
        throw new Error("Envelope: invalid curve: " + curve);
      }
    }
    /**
     * The shape of the attack.
     * Can be any of these strings:
     * * "linear"
     * * "exponential"
     * * "sine"
     * * "cosine"
     * * "bounce"
     * * "ripple"
     * * "step"
     *
     * Can also be an array which describes the curve. Values
     * in the array are evenly subdivided and linearly
     * interpolated over the duration of the attack.
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope(0.4).toDestination();
     * 	env.attackCurve = "linear";
     * 	env.triggerAttack();
     * }, 1, 1);
     */

  }, {
    key: "attackCurve",
    get: function get() {
      return this._getCurve(this._attackCurve, "In");
    },
    set: function set(curve) {
      this._setCurve("_attackCurve", "In", curve);
    }
    /**
     * The shape of the release. See the attack curve types.
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope({
     * 		release: 0.8
     * 	}).toDestination();
     * 	env.triggerAttack();
     * 	// release curve could also be defined by an array
     * 	env.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];
     * 	env.triggerRelease(0.2);
     * }, 1, 1);
     */

  }, {
    key: "releaseCurve",
    get: function get() {
      return this._getCurve(this._releaseCurve, "Out");
    },
    set: function set(curve) {
      this._setCurve("_releaseCurve", "Out", curve);
    }
    /**
     * The shape of the decay either "linear" or "exponential"
     * @example
     * return Tone.Offline(() => {
     * 	const env = new Tone.Envelope({
     * 		sustain: 0.1,
     * 		decay: 0.5
     * 	}).toDestination();
     * 	env.decayCurve = "linear";
     * 	env.triggerAttack();
     * }, 1, 1);
     */

  }, {
    key: "decayCurve",
    get: function get() {
      return this._decayCurve;
    },
    set: function set(curve) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(["linear", "exponential"].some(function (c) {
        return c === curve;
      }), "Invalid envelope curve: ".concat(curve));
      this._decayCurve = curve;
    }
    /**
     * Trigger the attack/decay portion of the ADSR envelope.
     * @param  time When the attack should start.
     * @param velocity The velocity of the envelope scales the vales.
     *                             number between 0-1
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator().connect(env).start();
     * // trigger the attack 0.5 seconds from now with a velocity of 0.2
     * env.triggerAttack("+0.5", 0.2);
     */

  }, {
    key: "triggerAttack",
    value: function triggerAttack(time) {
      var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      this.log("triggerAttack", time, velocity);
      time = this.toSeconds(time);
      var originalAttack = this.toSeconds(this.attack);
      var attack = originalAttack;
      var decay = this.toSeconds(this.decay); // check if it's not a complete attack

      var currentValue = this.getValueAtTime(time);

      if (currentValue > 0) {
        // subtract the current value from the attack time
        var attackRate = 1 / attack;
        var remainingDistance = 1 - currentValue; // the attack is now the remaining time

        attack = remainingDistance / attackRate;
      } // attack


      if (attack < this.sampleTime) {
        this._sig.cancelScheduledValues(time); // case where the attack time is 0 should set instantly


        this._sig.setValueAtTime(velocity, time);
      } else if (this._attackCurve === "linear") {
        this._sig.linearRampTo(velocity, attack, time);
      } else if (this._attackCurve === "exponential") {
        this._sig.targetRampTo(velocity, attack, time);
      } else {
        this._sig.cancelAndHoldAtTime(time);

        var curve = this._attackCurve; // find the starting position in the curve

        for (var i = 1; i < curve.length; i++) {
          // the starting index is between the two values
          if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {
            curve = this._attackCurve.slice(i); // the first index is the current value

            curve[0] = currentValue;
            break;
          }
        }

        this._sig.setValueCurveAtTime(curve, time, attack, velocity);
      } // decay


      if (decay && this.sustain < 1) {
        var decayValue = velocity * this.sustain;
        var decayStart = time + attack;
        this.log("decay", decayStart);

        if (this._decayCurve === "linear") {
          this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);
        } else {
          this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);
        }
      }

      return this;
    }
    /**
     * Triggers the release of the envelope.
     * @param  time When the release portion of the envelope should start.
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator({
     * 	type: "sawtooth"
     * }).connect(env).start();
     * env.triggerAttack();
     * // trigger the release half a second after the attack
     * env.triggerRelease("+0.5");
     */

  }, {
    key: "triggerRelease",
    value: function triggerRelease(time) {
      this.log("triggerRelease", time);
      time = this.toSeconds(time);
      var currentValue = this.getValueAtTime(time);

      if (currentValue > 0) {
        var release = this.toSeconds(this.release);

        if (release < this.sampleTime) {
          this._sig.setValueAtTime(0, time);
        } else if (this._releaseCurve === "linear") {
          this._sig.linearRampTo(0, release, time);
        } else if (this._releaseCurve === "exponential") {
          this._sig.targetRampTo(0, release, time);
        } else {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isArray"])(this._releaseCurve), "releaseCurve must be either 'linear', 'exponential' or an array");

          this._sig.cancelAndHoldAtTime(time);

          this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);
        }
      }

      return this;
    }
    /**
     * Get the scheduled value at the given time. This will
     * return the unconverted (raw) value.
     * @example
     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);
     * env.triggerAttackRelease(2);
     * setInterval(() => console.log(env.getValueAtTime(Tone.now())), 100);
     */

  }, {
    key: "getValueAtTime",
    value: function getValueAtTime(time) {
      return this._sig.getValueAtTime(time);
    }
    /**
     * triggerAttackRelease is shorthand for triggerAttack, then waiting
     * some duration, then triggerRelease.
     * @param duration The duration of the sustain.
     * @param time When the attack should be triggered.
     * @param velocity The velocity of the envelope.
     * @example
     * const env = new Tone.AmplitudeEnvelope().toDestination();
     * const osc = new Tone.Oscillator().connect(env).start();
     * // trigger the release 0.5 seconds after the attack
     * env.triggerAttackRelease(0.5);
     */

  }, {
    key: "triggerAttackRelease",
    value: function triggerAttackRelease(duration, time) {
      var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      time = this.toSeconds(time);
      this.triggerAttack(time, velocity);
      this.triggerRelease(time + this.toSeconds(duration));
      return this;
    }
    /**
     * Cancels all scheduled envelope changes after the given time.
     */

  }, {
    key: "cancel",
    value: function cancel(after) {
      this._sig.cancelScheduledValues(this.toSeconds(after));

      return this;
    }
    /**
     * Connect the envelope to a destination node.
     */

  }, {
    key: "connect",
    value: function connect(destination) {
      var outputNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var inputNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      Object(_signal_Signal__WEBPACK_IMPORTED_MODULE_5__["connectSignal"])(this, destination, outputNumber, inputNumber);
      return this;
    }
    /**
     * Render the envelope curve to an array of the given length.
     * Good for visualizing the envelope curve. Rescales the duration of the
     * envelope to fit the length.
     */

  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var duration, context, attackPortion, envelopeDuration, sustainTime, totalDuration, clone, buffer;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                duration = length / this.context.sampleRate;
                context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__["OfflineContext"](1, duration, this.context.sampleRate); // normalize the ADSR for the given duration with 20% sustain time

                attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);
                envelopeDuration = attackPortion + this.toSeconds(this.release);
                sustainTime = envelopeDuration * 0.1;
                totalDuration = envelopeDuration + sustainTime; // @ts-ignore

                clone = new this.constructor(Object.assign(this.get(), {
                  attack: duration * this.toSeconds(this.attack) / totalDuration,
                  decay: duration * this.toSeconds(this.decay) / totalDuration,
                  release: duration * this.toSeconds(this.release) / totalDuration,
                  context: context
                }));

                clone._sig.toDestination();

                clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);
                _context.next = 11;
                return context.render();

              case 11:
                buffer = _context.sent;
                return _context.abrupt("return", buffer.getChannelData(0));

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Envelope.prototype), "dispose", this).call(this);

      this._sig.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
        attack: 0.01,
        attackCurve: "linear",
        decay: 0.1,
        decayCurve: "exponential",
        release: 1,
        releaseCurve: "exponential",
        sustain: 0.5
      });
    }
  }]);

  return Envelope;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]);

Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__["timeRange"])(0)], Envelope.prototype, "attack", void 0);

Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__["timeRange"])(0)], Envelope.prototype, "decay", void 0);

Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__["range"])(0, 1)], Envelope.prototype, "sustain", void 0);

Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__["timeRange"])(0)], Envelope.prototype, "release", void 0);
/**
 * Generate some complex envelope curves.
 */


var EnvelopeCurves = function () {
  var curveLen = 128;
  var i;
  var k; // cosine curve

  var cosineCurve = [];

  for (i = 0; i < curveLen; i++) {
    cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));
  } // ripple curve


  var rippleCurve = [];
  var rippleCurveFreq = 6.4;

  for (i = 0; i < curveLen - 1; i++) {
    k = i / (curveLen - 1);
    var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;
    rippleCurve[i] = sineWave / 10 + k * 0.83;
  }

  rippleCurve[curveLen - 1] = 1; // stairs curve

  var stairsCurve = [];
  var steps = 5;

  for (i = 0; i < curveLen; i++) {
    stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;
  } // in-out easing curve


  var sineCurve = [];

  for (i = 0; i < curveLen; i++) {
    k = i / (curveLen - 1);
    sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));
  } // a bounce curve


  var bounceCurve = [];

  for (i = 0; i < curveLen; i++) {
    k = i / (curveLen - 1);
    var freq = Math.pow(k, 3) * 4 + 0.2;
    var val = Math.cos(freq * Math.PI * 2 * k);
    bounceCurve[i] = Math.abs(val * (1 - k));
  }
  /**
   * Invert a value curve to make it work for the release
   */


  function invertCurve(curve) {
    var out = new Array(curve.length);

    for (var j = 0; j < curve.length; j++) {
      out[j] = 1 - curve[j];
    }

    return out;
  }
  /**
   * reverse the curve
   */


  function reverseCurve(curve) {
    return curve.slice(0).reverse();
  }
  /**
   * attack and release curve arrays
   */


  return {
    bounce: {
      In: invertCurve(bounceCurve),
      Out: bounceCurve
    },
    cosine: {
      In: cosineCurve,
      Out: reverseCurve(cosineCurve)
    },
    exponential: "exponential",
    linear: "linear",
    ripple: {
      In: rippleCurve,
      Out: invertCurve(rippleCurve)
    },
    sine: {
      In: sineCurve,
      Out: invertCurve(sineCurve)
    },
    step: {
      In: stairsCurve,
      Out: invertCurve(stairsCurve)
    }
  };
}();

/***/ }),

/***/ "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js ***!
  \*****************************************************************************/
/*! exports provided: FrequencyEnvelope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function() { return FrequencyEnvelope; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Pow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../signal/Pow */ "./node_modules/tone/build/esm/signal/Pow.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]
 * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve
 * which it ramps.
 * @example
 * const oscillator = new Tone.Oscillator().toDestination().start();
 * const freqEnv = new Tone.FrequencyEnvelope({
 * 	attack: 0.2,
 * 	baseFrequency: "C2",
 * 	octaves: 4
 * });
 * freqEnv.connect(oscillator.frequency);
 * freqEnv.triggerAttack();
 * @category Component
 */

var FrequencyEnvelope = /*#__PURE__*/function (_Envelope) {
  _inherits(FrequencyEnvelope, _Envelope);

  var _super = _createSuper(FrequencyEnvelope);

  function FrequencyEnvelope() {
    var _this;

    _classCallCheck(this, FrequencyEnvelope);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FrequencyEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
    _this.name = "FrequencyEnvelope";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FrequencyEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
    _this._octaves = options.octaves;
    _this._baseFrequency = _this.toFrequency(options.baseFrequency);
    _this._exponent = _this.input = new _signal_Pow__WEBPACK_IMPORTED_MODULE_3__["Pow"]({
      context: _this.context,
      value: options.exponent
    });
    _this._scale = _this.output = new _signal_Scale__WEBPACK_IMPORTED_MODULE_2__["Scale"]({
      context: _this.context,
      min: _this._baseFrequency,
      max: _this._baseFrequency * Math.pow(2, _this._octaves)
    });

    _this._sig.chain(_this._exponent, _this._scale);

    return _this;
  }

  _createClass(FrequencyEnvelope, [{
    key: "baseFrequency",
    get:
    /**
     * The envelope's minimum output value. This is the value which it
     * starts at.
     */
    function get() {
      return this._baseFrequency;
    },
    set: function set(min) {
      var freq = this.toFrequency(min);
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assertRange"])(freq, 0);
      this._baseFrequency = freq;
      this._scale.min = this._baseFrequency; // update the max value when the min changes

      this.octaves = this._octaves;
    }
    /**
     * The number of octaves above the baseFrequency that the
     * envelope will scale to.
     */

  }, {
    key: "octaves",
    get: function get() {
      return this._octaves;
    },
    set: function set(octaves) {
      this._octaves = octaves;
      this._scale.max = this._baseFrequency * Math.pow(2, octaves);
    }
    /**
     * The envelope's exponent value.
     */

  }, {
    key: "exponent",
    get: function get() {
      return this._exponent.value;
    },
    set: function set(exponent) {
      this._exponent.value = exponent;
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FrequencyEnvelope.prototype), "dispose", this).call(this);

      this._exponent.dispose();

      this._scale.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"].getDefaults(), {
        baseFrequency: 200,
        exponent: 1,
        octaves: 4
      });
    }
  }]);

  return FrequencyEnvelope;
}(_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/BiquadFilter.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/BiquadFilter.js ***!
  \**********************************************************************/
/*! exports provided: BiquadFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BiquadFilter", function() { return BiquadFilter; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode).
 * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the "rolloff" value.
 * @category Component
 */

var BiquadFilter = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(BiquadFilter, _ToneAudioNode);

  var _super = _createSuper(BiquadFilter);

  function BiquadFilter() {
    var _this;

    _classCallCheck(this, BiquadFilter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(BiquadFilter.getDefaults(), arguments, ["frequency", "type"]));
    _this.name = "BiquadFilter";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(BiquadFilter.getDefaults(), arguments, ["frequency", "type"]);
    _this._filter = _this.context.createBiquadFilter();
    _this.input = _this.output = _this._filter;
    _this.Q = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__["Param"]({
      context: _this.context,
      units: "number",
      value: options.Q,
      param: _this._filter.Q
    });
    _this.frequency = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__["Param"]({
      context: _this.context,
      units: "frequency",
      value: options.frequency,
      param: _this._filter.frequency
    });
    _this.detune = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__["Param"]({
      context: _this.context,
      units: "cents",
      value: options.detune,
      param: _this._filter.detune
    });
    _this.gain = new _core_context_Param__WEBPACK_IMPORTED_MODULE_2__["Param"]({
      context: _this.context,
      units: "decibels",
      convert: false,
      value: options.gain,
      param: _this._filter.gain
    });
    _this.type = options.type;
    return _this;
  }

  _createClass(BiquadFilter, [{
    key: "type",
    get:
    /**
     * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the
     * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)
     */
    function get() {
      return this._filter.type;
    },
    set: function set(type) {
      var types = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "notch", "allpass", "peaking"];
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(types.indexOf(type) !== -1, "Invalid filter type: ".concat(type));
      this._filter.type = type;
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */

  }, {
    key: "getFrequencyResponse",
    value: function getFrequencyResponse() {
      var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
      // start with all 1s
      var freqValues = new Float32Array(len);

      for (var i = 0; i < len; i++) {
        var norm = Math.pow(i / len, 2);
        var freq = norm * (20000 - 20) + 20;
        freqValues[i] = freq;
      }

      var magValues = new Float32Array(len);
      var phaseValues = new Float32Array(len); // clone the filter to remove any connections which may be changing the value

      var filterClone = this.context.createBiquadFilter();
      filterClone.type = this.type;
      filterClone.Q.value = this.Q.value;
      filterClone.frequency.value = this.frequency.value;
      filterClone.gain.value = this.gain.value;
      filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);
      return magValues;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(BiquadFilter.prototype), "dispose", this).call(this);

      this._filter.disconnect();

      this.Q.dispose();
      this.frequency.dispose();
      this.gain.dispose();
      this.detune.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        Q: 1,
        type: "lowpass",
        frequency: 350,
        detune: 0,
        gain: 0
      });
    }
  }]);

  return BiquadFilter;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/Convolver.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/Convolver.js ***!
  \*******************************************************************/
/*! exports provided: Convolver */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Convolver", function() { return Convolver; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Convolver is a wrapper around the Native Web Audio
 * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).
 * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on
 * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).
 *
 * @example
 * // initializing the convolver with an impulse response
 * const convolver = new Tone.Convolver("./path/to/ir.wav").toDestination();
 * @category Component
 */

var Convolver = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Convolver, _ToneAudioNode);

  var _super = _createSuper(Convolver);

  function Convolver() {
    var _this;

    _classCallCheck(this, Convolver);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Convolver.getDefaults(), arguments, ["url", "onload"]));
    _this.name = "Convolver";
    /**
     * The native ConvolverNode
     */

    _this._convolver = _this.context.createConvolver();
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Convolver.getDefaults(), arguments, ["url", "onload"]);
    _this._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__["ToneAudioBuffer"](options.url, function (buffer) {
      _this.buffer = buffer;
      options.onload();
    });
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
      context: _this.context
    });
    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
      context: _this.context
    }); // set if it's already loaded, set it immediately

    if (_this._buffer.loaded) {
      _this.buffer = _this._buffer;
    } // initially set normalization


    _this.normalize = options.normalize; // connect it up

    _this.input.chain(_this._convolver, _this.output);

    return _this;
  }

  _createClass(Convolver, [{
    key: "load",
    value:
    /**
     * Load an impulse response url as an audio buffer.
     * Decodes the audio asynchronously and invokes
     * the callback once the audio buffer loads.
     * @param url The url of the buffer to load. filetype support depends on the browser.
     */
    function load(url) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this._buffer.load(url);

              case 2:
                this.buffer = _context.sent;

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * The convolver's buffer
     */

  }, {
    key: "buffer",
    get: function get() {
      if (this._buffer.length) {
        return this._buffer;
      } else {
        return null;
      }
    },
    set: function set(buffer) {
      if (buffer) {
        this._buffer.set(buffer);
      } // if it's already got a buffer, create a new one


      if (this._convolver.buffer) {
        // disconnect the old one
        this.input.disconnect();

        this._convolver.disconnect(); // create and connect a new one


        this._convolver = this.context.createConvolver();
        this.input.chain(this._convolver, this.output);
      }

      var buff = this._buffer.get();

      this._convolver.buffer = buff ? buff : null;
    }
    /**
     * The normalize property of the ConvolverNode interface is a boolean that
     * controls whether the impulse response from the buffer will be scaled by
     * an equal-power normalization when the buffer attribute is set, or not.
     */

  }, {
    key: "normalize",
    get: function get() {
      return this._convolver.normalize;
    },
    set: function set(norm) {
      this._convolver.normalize = norm;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Convolver.prototype), "dispose", this).call(this);

      this._buffer.dispose();

      this._convolver.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
        normalize: true,
        onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_6__["noOp"]
      });
    }
  }]);

  return Convolver;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/EQ3.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/EQ3.js ***!
  \*************************************************************/
/*! exports provided: EQ3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EQ3", function() { return EQ3; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channel/MultibandSplit */ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * EQ3 provides 3 equalizer bins: Low/Mid/High.
 * @category Component
 */

var EQ3 = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(EQ3, _ToneAudioNode);

  var _super = _createSuper(EQ3);

  function EQ3() {
    var _this;

    _classCallCheck(this, EQ3);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(EQ3.getDefaults(), arguments, ["low", "mid", "high"]));
    _this.name = "EQ3";
    /**
     * the output
     */

    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    _this._internalChannels = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(EQ3.getDefaults(), arguments, ["low", "mid", "high"]);
    _this.input = _this._multibandSplit = new _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__["MultibandSplit"]({
      context: _this.context,
      highFrequency: options.highFrequency,
      lowFrequency: options.lowFrequency
    });
    _this._lowGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: options.low,
      units: "decibels"
    });
    _this._midGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: options.mid,
      units: "decibels"
    });
    _this._highGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: options.high,
      units: "decibels"
    });
    _this.low = _this._lowGain.gain;
    _this.mid = _this._midGain.gain;
    _this.high = _this._highGain.gain;
    _this.Q = _this._multibandSplit.Q;
    _this.lowFrequency = _this._multibandSplit.lowFrequency;
    _this.highFrequency = _this._multibandSplit.highFrequency; // the frequency bands

    _this._multibandSplit.low.chain(_this._lowGain, _this.output);

    _this._multibandSplit.mid.chain(_this._midGain, _this.output);

    _this._multibandSplit.high.chain(_this._highGain, _this.output);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["low", "mid", "high", "lowFrequency", "highFrequency"]);
    _this._internalChannels = [_this._multibandSplit];
    return _this;
  }

  _createClass(EQ3, [{
    key: "dispose",
    value:
    /**
     * Clean up.
     */
    function dispose() {
      _get(_getPrototypeOf(EQ3.prototype), "dispose", this).call(this);

      Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["writable"])(this, ["low", "mid", "high", "lowFrequency", "highFrequency"]);

      this._multibandSplit.dispose();

      this.lowFrequency.dispose();
      this.highFrequency.dispose();

      this._lowGain.dispose();

      this._midGain.dispose();

      this._highGain.dispose();

      this.low.dispose();
      this.mid.dispose();
      this.high.dispose();
      this.Q.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        high: 0,
        highFrequency: 2500,
        low: 0,
        lowFrequency: 400,
        mid: 0
      });
    }
  }]);

  return EQ3;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js ***!
  \****************************************************************************/
/*! exports provided: FeedbackCombFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function() { return FeedbackCombFilter; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/worklet/ToneAudioWorklet */ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js");
/* harmony import */ var _FeedbackCombFilter_worklet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./FeedbackCombFilter.worklet */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * Comb filters are basic building blocks for physical modeling. Read more
 * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).
 *
 * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the
 * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the
 * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.
 * @category Component
 */

var FeedbackCombFilter = /*#__PURE__*/function (_ToneAudioWorklet) {
  _inherits(FeedbackCombFilter, _ToneAudioWorklet);

  var _super = _createSuper(FeedbackCombFilter);

  function FeedbackCombFilter() {
    var _this;

    _classCallCheck(this, FeedbackCombFilter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(FeedbackCombFilter.getDefaults(), arguments, ["delayTime", "resonance"]));
    _this.name = "FeedbackCombFilter";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(FeedbackCombFilter.getDefaults(), arguments, ["delayTime", "resonance"]);
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    _this.delayTime = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      value: options.delayTime,
      units: "time",
      minValue: 0,
      maxValue: 1,
      param: _this._dummyParam,
      swappable: true
    });
    _this.resonance = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      value: options.resonance,
      units: "normalRange",
      param: _this._dummyParam,
      swappable: true
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["resonance", "delayTime"]);
    return _this;
  }

  _createClass(FeedbackCombFilter, [{
    key: "_audioWorkletName",
    value: function _audioWorkletName() {
      return _FeedbackCombFilter_worklet__WEBPACK_IMPORTED_MODULE_6__["workletName"];
    }
    /**
     * The default parameters
     */

  }, {
    key: "onReady",
    value: function onReady(node) {
      Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["connectSeries"])(this.input, node, this.output);
      var delayTime = node.parameters.get("delayTime");
      ;
      this.delayTime.setParam(delayTime);
      var feedback = node.parameters.get("feedback");
      ;
      this.resonance.setParam(feedback);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FeedbackCombFilter.prototype), "dispose", this).call(this);

      this.input.dispose();
      this.output.dispose();
      this.delayTime.dispose();
      this.resonance.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
        delayTime: 0.1,
        resonance: 0.5
      });
    }
  }]);

  return FeedbackCombFilter;
}(_core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_5__["ToneAudioWorklet"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js":
/*!************************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js ***!
  \************************************************************************************/
/*! exports provided: workletName */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "workletName", function() { return workletName; });
/* harmony import */ var _core_worklet_SingleIOProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/worklet/SingleIOProcessor.worklet */ "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js");
/* harmony import */ var _core_worklet_DelayLine_worklet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/worklet/DelayLine.worklet */ "./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js");
/* harmony import */ var _core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/worklet/WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");



var workletName = "feedback-comb-filter";
var feedbackCombFilter =
/* javascript */
"\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t\tautomationRate: \"k-rate\"\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n";
Object(_core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__["registerProcessor"])(workletName, feedbackCombFilter);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/Filter.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/Filter.js ***!
  \****************************************************************/
/*! exports provided: Filter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return Filter; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _BiquadFilter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./BiquadFilter */ "./node_modules/tone/build/esm/component/filter/BiquadFilter.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * Tone.Filter is a filter which allows for all of the same native methods
 * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).
 * Tone.Filter has the added ability to set the filter rolloff at -12
 * (default), -24 and -48.
 * @example
 * const filter = new Tone.Filter(1500, "highpass").toDestination();
 * filter.frequency.rampTo(20000, 10);
 * const noise = new Tone.Noise().connect(filter).start();
 * @category Component
 */

var Filter = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Filter, _ToneAudioNode);

  var _super = _createSuper(Filter);

  function Filter() {
    var _this;

    _classCallCheck(this, Filter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Filter.getDefaults(), arguments, ["frequency", "type", "rolloff"]));
    _this.name = "Filter";
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    _this._filters = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Filter.getDefaults(), arguments, ["frequency", "type", "rolloff"]);
    _this._filters = [];
    _this.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "positive",
      value: options.Q
    });
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.frequency
    });
    _this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "cents",
      value: options.detune
    });
    _this.gain = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "decibels",
      convert: false,
      value: options.gain
    });
    _this._type = options.type;
    _this.rolloff = options.rolloff;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["detune", "frequency", "gain", "Q"]);
    return _this;
  }

  _createClass(Filter, [{
    key: "type",
    get:
    /**
     * The type of the filter. Types: "lowpass", "highpass",
     * "bandpass", "lowshelf", "highshelf", "notch", "allpass", or "peaking".
     */
    function get() {
      return this._type;
    },
    set: function set(type) {
      var types = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "notch", "allpass", "peaking"];
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(types.indexOf(type) !== -1, "Invalid filter type: ".concat(type));
      this._type = type;

      this._filters.forEach(function (filter) {
        return filter.type = type;
      });
    }
    /**
     * The rolloff of the filter which is the drop in db
     * per octave. Implemented internally by cascading filters.
     * Only accepts the values -12, -24, -48 and -96.
     */

  }, {
    key: "rolloff",
    get: function get() {
      return this._rolloff;
    },
    set: function set(rolloff) {
      var rolloffNum = Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isNumber"])(rolloff) ? rolloff : parseInt(rolloff, 10);
      var possibilities = [-12, -24, -48, -96];
      var cascadingCount = possibilities.indexOf(rolloffNum); // check the rolloff is valid

      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(cascadingCount !== -1, "rolloff can only be ".concat(possibilities.join(", ")));
      cascadingCount += 1;
      this._rolloff = rolloffNum;
      this.input.disconnect();

      this._filters.forEach(function (filter) {
        return filter.disconnect();
      });

      this._filters = new Array(cascadingCount);

      for (var count = 0; count < cascadingCount; count++) {
        var filter = new _BiquadFilter__WEBPACK_IMPORTED_MODULE_7__["BiquadFilter"]({
          context: this.context
        });
        filter.type = this._type;
        this.frequency.connect(filter.frequency);
        this.detune.connect(filter.detune);
        this.Q.connect(filter.Q);
        this.gain.connect(filter.gain);
        this._filters[count] = filter;
      }

      this._internalChannels = this._filters;
      _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connectSeries"].apply(void 0, [this.input].concat(_toConsumableArray(this._internalChannels), [this.output]));
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */

  }, {
    key: "getFrequencyResponse",
    value: function getFrequencyResponse() {
      var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
      var filterClone = new _BiquadFilter__WEBPACK_IMPORTED_MODULE_7__["BiquadFilter"]({
        frequency: this.frequency.value,
        gain: this.gain.value,
        Q: this.Q.value,
        type: this._type,
        detune: this.detune.value
      }); // start with all 1s

      var totalResponse = new Float32Array(len).map(function () {
        return 1;
      });

      this._filters.forEach(function () {
        var response = filterClone.getFrequencyResponse(len);
        response.forEach(function (val, i) {
          return totalResponse[i] *= val;
        });
      });

      filterClone.dispose();
      return totalResponse;
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Filter.prototype), "dispose", this).call(this);

      this._filters.forEach(function (filter) {
        filter.dispose();
      });

      Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["writable"])(this, ["detune", "frequency", "gain", "Q"]);
      this.frequency.dispose();
      this.Q.dispose();
      this.detune.dispose();
      this.gain.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        Q: 1,
        detune: 0,
        frequency: 350,
        gain: 0,
        rolloff: -12,
        type: "lowpass"
      });
    }
  }]);

  return Filter;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js":
/*!***************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js ***!
  \***************************************************************************/
/*! exports provided: LowpassCombFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function() { return LowpassCombFilter; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FeedbackCombFilter */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
/* harmony import */ var _OnePoleFilter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OnePoleFilter */ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * A lowpass feedback comb filter. It is similar to
 * [[FeedbackCombFilter]], but includes a lowpass filter.
 * @category Component
 */

var LowpassCombFilter = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(LowpassCombFilter, _ToneAudioNode);

  var _super = _createSuper(LowpassCombFilter);

  function LowpassCombFilter() {
    var _this;

    _classCallCheck(this, LowpassCombFilter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(LowpassCombFilter.getDefaults(), arguments, ["delayTime", "resonance", "dampening"]));
    _this.name = "LowpassCombFilter";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(LowpassCombFilter.getDefaults(), arguments, ["delayTime", "resonance", "dampening"]);
    _this._combFilter = _this.output = new _FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_2__["FeedbackCombFilter"]({
      context: _this.context,
      delayTime: options.delayTime,
      resonance: options.resonance
    });
    _this.delayTime = _this._combFilter.delayTime;
    _this.resonance = _this._combFilter.resonance;
    _this._lowpass = _this.input = new _OnePoleFilter__WEBPACK_IMPORTED_MODULE_3__["OnePoleFilter"]({
      context: _this.context,
      frequency: options.dampening,
      type: "lowpass"
    }); // connections

    _this._lowpass.connect(_this._combFilter);

    return _this;
  }

  _createClass(LowpassCombFilter, [{
    key: "dampening",
    get:
    /**
     * The dampening control of the feedback
     */
    function get() {
      return this._lowpass.frequency;
    },
    set: function set(fq) {
      this._lowpass.frequency = fq;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(LowpassCombFilter.prototype), "dispose", this).call(this);

      this._combFilter.dispose();

      this._lowpass.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        dampening: 3000,
        delayTime: 0.1,
        resonance: 0.5
      });
    }
  }]);

  return LowpassCombFilter;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/OnePoleFilter.js ***!
  \***********************************************************************/
/*! exports provided: OnePoleFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function() { return OnePoleFilter; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * A one pole filter with 6db-per-octave rolloff. Either "highpass" or "lowpass".
 * Note that changing the type or frequency may result in a discontinuity which
 * can sound like a click or pop.
 * References:
 * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/
 * * http://www.dspguide.com/ch19/2.htm
 * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts
 * @category Component
 */

var OnePoleFilter = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(OnePoleFilter, _ToneAudioNode);

  var _super = _createSuper(OnePoleFilter);

  function OnePoleFilter() {
    var _this;

    _classCallCheck(this, OnePoleFilter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(OnePoleFilter.getDefaults(), arguments, ["frequency", "type"]));
    _this.name = "OnePoleFilter";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(OnePoleFilter.getDefaults(), arguments, ["frequency", "type"]);
    _this._frequency = options.frequency;
    _this._type = options.type;
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });
    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });

    _this._createFilter();

    return _this;
  }

  _createClass(OnePoleFilter, [{
    key: "_createFilter",
    value:
    /**
     * Create a filter and dispose the old one
     */
    function _createFilter() {
      var _this2 = this;

      var oldFilter = this._filter;
      var freq = this.toFrequency(this._frequency);
      var t = 1 / (2 * Math.PI * freq);

      if (this._type === "lowpass") {
        var a0 = 1 / (t * this.context.sampleRate);
        var b1 = a0 - 1;
        this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);
      } else {
        var _b = 1 / (t * this.context.sampleRate) - 1;

        this._filter = this.context.createIIRFilter([1, -1], [1, _b]);
      }

      this.input.chain(this._filter, this.output);

      if (oldFilter) {
        // dispose it on the next block
        this.context.setTimeout(function () {
          if (!_this2.disposed) {
            _this2.input.disconnect(oldFilter);

            oldFilter.disconnect();
          }
        }, this.blockTime);
      }
    }
    /**
     * The frequency value.
     */

  }, {
    key: "frequency",
    get: function get() {
      return this._frequency;
    },
    set: function set(fq) {
      this._frequency = fq;

      this._createFilter();
    }
    /**
     * The OnePole Filter type, either "highpass" or "lowpass"
     */

  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(t) {
      this._type = t;

      this._createFilter();
    }
    /**
     * Get the frequency response curve. This curve represents how the filter
     * responses to frequencies between 20hz-20khz.
     * @param  len The number of values to return
     * @return The frequency response curve between 20-20kHz
     */

  }, {
    key: "getFrequencyResponse",
    value: function getFrequencyResponse() {
      var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
      var freqValues = new Float32Array(len);

      for (var i = 0; i < len; i++) {
        var norm = Math.pow(i / len, 2);
        var freq = norm * (20000 - 20) + 20;
        freqValues[i] = freq;
      }

      var magValues = new Float32Array(len);
      var phaseValues = new Float32Array(len);

      this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);

      return magValues;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(OnePoleFilter.prototype), "dispose", this).call(this);

      this.input.dispose();
      this.output.dispose();

      this._filter.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        frequency: 880,
        type: "lowpass"
      });
    }
  }]);

  return OnePoleFilter;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js":
/*!***************************************************************************!*\
  !*** ./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js ***!
  \***************************************************************************/
/*! exports provided: PhaseShiftAllpass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhaseShiftAllpass", function() { return PhaseShiftAllpass; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform
 * using two Allpass filter banks whose outputs have a phase difference of 90°.
 * Here the `offset90` phase is offset by +90° in relation to `output`.
 * Coefficients and structure was developed by Olli Niemitalo.
 * For more details see: http://yehar.com/blog/?p=368
 * @category Component
 */

var PhaseShiftAllpass = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(PhaseShiftAllpass, _ToneAudioNode);

  var _super = _createSuper(PhaseShiftAllpass);

  function PhaseShiftAllpass(options) {
    var _this;

    _classCallCheck(this, PhaseShiftAllpass);

    _this = _super.call(this, options);
    _this.name = "PhaseShiftAllpass";
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    /**
     * The phase shifted output
     */

    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    /**
     * The PhaseShifted allpass output
     */

    _this.offset90 = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    var allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];
    var allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];
    _this._bank0 = _this._createAllPassFilterBank(allpassBank1Values);
    _this._bank1 = _this._createAllPassFilterBank(allpassBank2Values);
    _this._oneSampleDelay = _this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]); // connect Allpass filter banks

    _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connectSeries"].apply(void 0, [_this.input].concat(_toConsumableArray(_this._bank0), [_this._oneSampleDelay, _this.output]));
    _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connectSeries"].apply(void 0, [_this.input].concat(_toConsumableArray(_this._bank1), [_this.offset90]));
    return _this;
  }
  /**
   * Create all of the IIR filters from an array of values using the coefficient calculation.
   */


  _createClass(PhaseShiftAllpass, [{
    key: "_createAllPassFilterBank",
    value: function _createAllPassFilterBank(bankValues) {
      var _this2 = this;

      var nodes = bankValues.map(function (value) {
        var coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];
        return _this2.context.createIIRFilter(coefficients[0], coefficients[1]);
      });
      return nodes;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PhaseShiftAllpass.prototype), "dispose", this).call(this);

      this.input.dispose();
      this.output.dispose();
      this.offset90.dispose();

      this._bank0.forEach(function (f) {
        return f.disconnect();
      });

      this._bank1.forEach(function (f) {
        return f.disconnect();
      });

      this._oneSampleDelay.disconnect();

      return this;
    }
  }]);

  return PhaseShiftAllpass;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/component/index.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/component/index.js ***!
  \********************************************************/
/*! exports provided: Analyser, Meter, FFT, DCMeter, Waveform, Follower, Channel, CrossFade, Merge, MidSideMerge, MidSideSplit, Mono, MultibandSplit, Panner, Panner3D, PanVol, Recorder, Solo, Split, Volume, Compressor, Gate, Limiter, MidSideCompressor, MultibandCompressor, AmplitudeEnvelope, Envelope, FrequencyEnvelope, EQ3, Filter, OnePoleFilter, FeedbackCombFilter, LowpassCombFilter, Convolver, BiquadFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _analysis_Analyser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./analysis/Analyser */ "./node_modules/tone/build/esm/component/analysis/Analyser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Analyser", function() { return _analysis_Analyser__WEBPACK_IMPORTED_MODULE_0__["Analyser"]; });

/* harmony import */ var _analysis_Meter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./analysis/Meter */ "./node_modules/tone/build/esm/component/analysis/Meter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Meter", function() { return _analysis_Meter__WEBPACK_IMPORTED_MODULE_1__["Meter"]; });

/* harmony import */ var _analysis_FFT__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./analysis/FFT */ "./node_modules/tone/build/esm/component/analysis/FFT.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FFT", function() { return _analysis_FFT__WEBPACK_IMPORTED_MODULE_2__["FFT"]; });

/* harmony import */ var _analysis_DCMeter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./analysis/DCMeter */ "./node_modules/tone/build/esm/component/analysis/DCMeter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DCMeter", function() { return _analysis_DCMeter__WEBPACK_IMPORTED_MODULE_3__["DCMeter"]; });

/* harmony import */ var _analysis_Waveform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./analysis/Waveform */ "./node_modules/tone/build/esm/component/analysis/Waveform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Waveform", function() { return _analysis_Waveform__WEBPACK_IMPORTED_MODULE_4__["Waveform"]; });

/* harmony import */ var _analysis_Follower__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./analysis/Follower */ "./node_modules/tone/build/esm/component/analysis/Follower.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Follower", function() { return _analysis_Follower__WEBPACK_IMPORTED_MODULE_5__["Follower"]; });

/* harmony import */ var _channel_Channel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./channel/Channel */ "./node_modules/tone/build/esm/component/channel/Channel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Channel", function() { return _channel_Channel__WEBPACK_IMPORTED_MODULE_6__["Channel"]; });

/* harmony import */ var _channel_CrossFade__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CrossFade", function() { return _channel_CrossFade__WEBPACK_IMPORTED_MODULE_7__["CrossFade"]; });

/* harmony import */ var _channel_Merge__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Merge", function() { return _channel_Merge__WEBPACK_IMPORTED_MODULE_8__["Merge"]; });

/* harmony import */ var _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./channel/MidSideMerge */ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideMerge", function() { return _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_9__["MidSideMerge"]; });

/* harmony import */ var _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./channel/MidSideSplit */ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideSplit", function() { return _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_10__["MidSideSplit"]; });

/* harmony import */ var _channel_Mono__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./channel/Mono */ "./node_modules/tone/build/esm/component/channel/Mono.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Mono", function() { return _channel_Mono__WEBPACK_IMPORTED_MODULE_11__["Mono"]; });

/* harmony import */ var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./channel/MultibandSplit */ "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultibandSplit", function() { return _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_12__["MultibandSplit"]; });

/* harmony import */ var _channel_Panner__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./channel/Panner */ "./node_modules/tone/build/esm/component/channel/Panner.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Panner", function() { return _channel_Panner__WEBPACK_IMPORTED_MODULE_13__["Panner"]; });

/* harmony import */ var _channel_Panner3D__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./channel/Panner3D */ "./node_modules/tone/build/esm/component/channel/Panner3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Panner3D", function() { return _channel_Panner3D__WEBPACK_IMPORTED_MODULE_14__["Panner3D"]; });

/* harmony import */ var _channel_PanVol__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./channel/PanVol */ "./node_modules/tone/build/esm/component/channel/PanVol.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PanVol", function() { return _channel_PanVol__WEBPACK_IMPORTED_MODULE_15__["PanVol"]; });

/* harmony import */ var _channel_Recorder__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./channel/Recorder */ "./node_modules/tone/build/esm/component/channel/Recorder.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Recorder", function() { return _channel_Recorder__WEBPACK_IMPORTED_MODULE_16__["Recorder"]; });

/* harmony import */ var _channel_Solo__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./channel/Solo */ "./node_modules/tone/build/esm/component/channel/Solo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Solo", function() { return _channel_Solo__WEBPACK_IMPORTED_MODULE_17__["Solo"]; });

/* harmony import */ var _channel_Split__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Split", function() { return _channel_Split__WEBPACK_IMPORTED_MODULE_18__["Split"]; });

/* harmony import */ var _channel_Volume__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Volume", function() { return _channel_Volume__WEBPACK_IMPORTED_MODULE_19__["Volume"]; });

/* harmony import */ var _dynamics_Compressor__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./dynamics/Compressor */ "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Compressor", function() { return _dynamics_Compressor__WEBPACK_IMPORTED_MODULE_20__["Compressor"]; });

/* harmony import */ var _dynamics_Gate__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./dynamics/Gate */ "./node_modules/tone/build/esm/component/dynamics/Gate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gate", function() { return _dynamics_Gate__WEBPACK_IMPORTED_MODULE_21__["Gate"]; });

/* harmony import */ var _dynamics_Limiter__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./dynamics/Limiter */ "./node_modules/tone/build/esm/component/dynamics/Limiter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Limiter", function() { return _dynamics_Limiter__WEBPACK_IMPORTED_MODULE_22__["Limiter"]; });

/* harmony import */ var _dynamics_MidSideCompressor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./dynamics/MidSideCompressor */ "./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function() { return _dynamics_MidSideCompressor__WEBPACK_IMPORTED_MODULE_23__["MidSideCompressor"]; });

/* harmony import */ var _dynamics_MultibandCompressor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./dynamics/MultibandCompressor */ "./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function() { return _dynamics_MultibandCompressor__WEBPACK_IMPORTED_MODULE_24__["MultibandCompressor"]; });

/* harmony import */ var _envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function() { return _envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_25__["AmplitudeEnvelope"]; });

/* harmony import */ var _envelope_Envelope__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return _envelope_Envelope__WEBPACK_IMPORTED_MODULE_26__["Envelope"]; });

/* harmony import */ var _envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./envelope/FrequencyEnvelope */ "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function() { return _envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_27__["FrequencyEnvelope"]; });

/* harmony import */ var _filter_EQ3__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./filter/EQ3 */ "./node_modules/tone/build/esm/component/filter/EQ3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EQ3", function() { return _filter_EQ3__WEBPACK_IMPORTED_MODULE_28__["EQ3"]; });

/* harmony import */ var _filter_Filter__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return _filter_Filter__WEBPACK_IMPORTED_MODULE_29__["Filter"]; });

/* harmony import */ var _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./filter/OnePoleFilter */ "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function() { return _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_30__["OnePoleFilter"]; });

/* harmony import */ var _filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./filter/FeedbackCombFilter */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function() { return _filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_31__["FeedbackCombFilter"]; });

/* harmony import */ var _filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./filter/LowpassCombFilter */ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function() { return _filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_32__["LowpassCombFilter"]; });

/* harmony import */ var _filter_Convolver__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./filter/Convolver */ "./node_modules/tone/build/esm/component/filter/Convolver.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Convolver", function() { return _filter_Convolver__WEBPACK_IMPORTED_MODULE_33__["Convolver"]; });

/* harmony import */ var _filter_BiquadFilter__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./filter/BiquadFilter */ "./node_modules/tone/build/esm/component/filter/BiquadFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BiquadFilter", function() { return _filter_BiquadFilter__WEBPACK_IMPORTED_MODULE_34__["BiquadFilter"]; });





































/***/ }),

/***/ "./node_modules/tone/build/esm/core/Global.js":
/*!****************************************************!*\
  !*** ./node_modules/tone/build/esm/core/Global.js ***!
  \****************************************************/
/*! exports provided: getContext, setContext, start */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getContext", function() { return getContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setContext", function() { return setContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "start", function() { return start; });
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ "./node_modules/tone/build/esm/version.js");
/* harmony import */ var _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _context_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context/Context */ "./node_modules/tone/build/esm/core/context/Context.js");
/* harmony import */ var _context_DummyContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context/DummyContext */ "./node_modules/tone/build/esm/core/context/DummyContext.js");
/* harmony import */ var _context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");






/**
 * This dummy context is used to avoid throwing immediate errors when importing in Node.js
 */

var dummyContext = new _context_DummyContext__WEBPACK_IMPORTED_MODULE_3__["DummyContext"]();
/**
 * The global audio context which is getable and assignable through
 * getContext and setContext
 */

var globalContext = dummyContext;
/**
 * Returns the default system-wide [[Context]]
 * @category Core
 */

function getContext() {
  if (globalContext === dummyContext && _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["hasAudioContext"]) {
    setContext(new _context_Context__WEBPACK_IMPORTED_MODULE_2__["Context"]());
  }

  return globalContext;
}
/**
 * Set the default audio context
 * @category Core
 */

function setContext(context) {
  if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__["isAudioContext"])(context)) {
    globalContext = new _context_Context__WEBPACK_IMPORTED_MODULE_2__["Context"](context);
  } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__["isOfflineAudioContext"])(context)) {
    globalContext = new _context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__["OfflineContext"](context);
  } else {
    globalContext = context;
  }
}
/**
 * Most browsers will not play _any_ audio until a user
 * clicks something (like a play button). Invoke this method
 * on a click or keypress event handler to start the audio context.
 * More about the Autoplay policy
 * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)
 * @example
 * document.querySelector("button").addEventListener("click", async () => {
 * 	await Tone.start();
 * 	console.log("context started");
 * });
 * @category Core
 */

function start() {
  return globalContext.resume();
}
/**
 * Log Tone.js + version in the console.
 */

if (_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"] && !_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"].TONE_SILENCE_LOGGING) {
  var prefix = "v";

  if (_version__WEBPACK_IMPORTED_MODULE_0__["version"] === "dev") {
    prefix = "";
  }

  var printString = " * Tone.js ".concat(prefix).concat(_version__WEBPACK_IMPORTED_MODULE_0__["version"], " * "); // eslint-disable-next-line no-console

  console.log("%c".concat(printString), "background: #000; color: #fff");
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/Tone.js":
/*!**************************************************!*\
  !*** ./node_modules/tone/build/esm/core/Tone.js ***!
  \**************************************************/
/*! exports provided: Tone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tone", function() { return Tone; });
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ "./node_modules/tone/build/esm/version.js");
/* harmony import */ var _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */



/**
 * @class  Tone is the base class of all other classes.
 * @category Core
 * @constructor
 */

var Tone = /*#__PURE__*/function () {
  function Tone() {
    _classCallCheck(this, Tone);

    //-------------------------------------
    // 	DEBUGGING
    //-------------------------------------

    /**
     * Set this debug flag to log all events that happen in this class.
     */
    this.debug = false; //-------------------------------------
    // 	DISPOSING
    //-------------------------------------

    /**
     * Indicates if the instance was disposed
     */

    this._wasDisposed = false;
  }
  /**
   * Returns all of the default options belonging to the class.
   */


  _createClass(Tone, [{
    key: "log",
    value:
    /**
     * Prints the outputs to the console log for debugging purposes.
     * Prints the contents only if either the object has a property
     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS
     * is set to the name of the class.
     * @example
     * const osc = new Tone.Oscillator();
     * // prints all logs originating from this oscillator
     * osc.debug = true;
     * // calls to start/stop will print in the console
     * osc.start();
     */
    function log() {
      // if the object is either set to debug = true
      // or if there is a string on the Tone.global.with the class name
      if (this.debug || _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"] && this.toString() === _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"].TONE_DEBUG_CLASS) {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _util_Debug__WEBPACK_IMPORTED_MODULE_2__["log"].apply(void 0, [this].concat(args));
      }
    }
    /**
     * disconnect and dispose.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      this._wasDisposed = true;
      return this;
    }
    /**
     * Indicates if the instance was disposed. 'Disposing' an
     * instance means that all of the Web Audio nodes that were
     * created for the instance are disconnected and freed for garbage collection.
     */

  }, {
    key: "disposed",
    get: function get() {
      return this._wasDisposed;
    }
    /**
     * Convert the class to a string
     * @example
     * const osc = new Tone.Oscillator();
     * console.log(osc.toString());
     */

  }, {
    key: "toString",
    value: function toString() {
      return this.name;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return {};
    }
  }]);

  return Tone;
}();
/**
 * The version number semver
 */

Tone.version = _version__WEBPACK_IMPORTED_MODULE_0__["version"];

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/Clock.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/Clock.js ***!
  \*********************************************************/
/*! exports provided: Clock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Clock", function() { return Clock; });
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _TickSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TickSource */ "./node_modules/tone/build/esm/core/clock/TickSource.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * A sample accurate clock which provides a callback at the given rate.
 * While the callback is not sample-accurate (it is still susceptible to
 * loose JS timing), the time passed in as the argument to the callback
 * is precise. For most applications, it is better to use Tone.Transport
 * instead of the Clock by itself since you can synchronize multiple callbacks.
 * @example
 * // the callback will be invoked approximately once a second
 * // and will print the time exactly once a second apart.
 * const clock = new Tone.Clock(time => {
 * 	console.log(time);
 * }, 1);
 * clock.start();
 * @category Core
 */

var Clock = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(Clock, _ToneWithContext);

  var _super = _createSuper(Clock);

  function Clock() {
    var _this;

    _classCallCheck(this, Clock);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Clock.getDefaults(), arguments, ["callback", "frequency"]));
    _this.name = "Clock";
    /**
     * The callback function to invoke at the scheduled tick.
     */

    _this.callback = _util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"];
    /**
     * The last time the loop callback was invoked
     */

    _this._lastUpdate = 0;
    /**
     * Keep track of the playback state
     */

    _this._state = new _util_StateTimeline__WEBPACK_IMPORTED_MODULE_4__["StateTimeline"]("stopped");
    /**
     * Context bound reference to the _loop method
     * This is necessary to remove the event in the end.
     */

    _this._boundLoop = _this._loop.bind(_assertThisInitialized(_this));
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Clock.getDefaults(), arguments, ["callback", "frequency"]);
    _this.callback = options.callback;
    _this._tickSource = new _TickSource__WEBPACK_IMPORTED_MODULE_5__["TickSource"]({
      context: _this.context,
      frequency: options.frequency,
      units: options.units
    });
    _this._lastUpdate = 0;
    _this.frequency = _this._tickSource.frequency;
    Object(_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "frequency"); // add an initial state

    _this._state.setStateAtTime("stopped", 0); // bind a callback to the worker thread


    _this.context.on("tick", _this._boundLoop);

    return _this;
  }

  _createClass(Clock, [{
    key: "state",
    get:
    /**
     * Returns the playback state of the source, either "started", "stopped" or "paused".
     */
    function get() {
      return this._state.getValueAtTime(this.now());
    }
    /**
     * Start the clock at the given time. Optionally pass in an offset
     * of where to start the tick counter from.
     * @param  time    The time the clock should start
     * @param offset  Where the tick counter starts counting from.
     */

  }, {
    key: "start",
    value: function start(time, offset) {
      // make sure the context is running
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assertContextRunning"])(this.context); // start the loop

      var computedTime = this.toSeconds(time);
      this.log("start", computedTime);

      if (this._state.getValueAtTime(computedTime) !== "started") {
        this._state.setStateAtTime("started", computedTime);

        this._tickSource.start(computedTime, offset);

        if (computedTime < this._lastUpdate) {
          this.emit("start", computedTime, offset);
        }
      }

      return this;
    }
    /**
     * Stop the clock. Stopping the clock resets the tick counter to 0.
     * @param time The time when the clock should stop.
     * @example
     * const clock = new Tone.Clock(time => {
     * 	console.log(time);
     * }, 1);
     * clock.start();
     * // stop the clock after 10 seconds
     * clock.stop("+10");
     */

  }, {
    key: "stop",
    value: function stop(time) {
      var computedTime = this.toSeconds(time);
      this.log("stop", computedTime);

      this._state.cancel(computedTime);

      this._state.setStateAtTime("stopped", computedTime);

      this._tickSource.stop(computedTime);

      if (computedTime < this._lastUpdate) {
        this.emit("stop", computedTime);
      }

      return this;
    }
    /**
     * Pause the clock. Pausing does not reset the tick counter.
     * @param time The time when the clock should stop.
     */

  }, {
    key: "pause",
    value: function pause(time) {
      var computedTime = this.toSeconds(time);

      if (this._state.getValueAtTime(computedTime) === "started") {
        this._state.setStateAtTime("paused", computedTime);

        this._tickSource.pause(computedTime);

        if (computedTime < this._lastUpdate) {
          this.emit("pause", computedTime);
        }
      }

      return this;
    }
    /**
     * The number of times the callback was invoked. Starts counting at 0
     * and increments after the callback was invoked.
     */

  }, {
    key: "ticks",
    get: function get() {
      return Math.ceil(this.getTicksAtTime(this.now()));
    },
    set: function set(t) {
      this._tickSource.ticks = t;
    }
    /**
     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves
     */

  }, {
    key: "seconds",
    get: function get() {
      return this._tickSource.seconds;
    },
    set: function set(s) {
      this._tickSource.seconds = s;
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */

  }, {
    key: "getSecondsAtTime",
    value: function getSecondsAtTime(time) {
      return this._tickSource.getSecondsAtTime(time);
    }
    /**
     * Set the clock's ticks at the given time.
     * @param  ticks The tick value to set
     * @param  time  When to set the tick value
     */

  }, {
    key: "setTicksAtTime",
    value: function setTicksAtTime(ticks, time) {
      this._tickSource.setTicksAtTime(ticks, time);

      return this;
    }
    /**
     * Get the time of the given tick. The second argument
     * is when to test before. Since ticks can be set (with setTicksAtTime)
     * there may be multiple times for a given tick value.
     * @param  tick The tick number.
     * @param  before When to measure the tick value from.
     * @return The time of the tick
     */

  }, {
    key: "getTimeOfTick",
    value: function getTimeOfTick(tick) {
      var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.now();
      return this._tickSource.getTimeOfTick(tick, before);
    }
    /**
     * Get the clock's ticks at the given time.
     * @param  time  When to get the tick value
     * @return The tick value at the given time.
     */

  }, {
    key: "getTicksAtTime",
    value: function getTicksAtTime(time) {
      return this._tickSource.getTicksAtTime(time);
    }
    /**
     * Get the time of the next tick
     * @param  offset The tick number.
     */

  }, {
    key: "nextTickTime",
    value: function nextTickTime(offset, when) {
      var computedTime = this.toSeconds(when);
      var currentTick = this.getTicksAtTime(computedTime);
      return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);
    }
    /**
     * The scheduling loop.
     */

  }, {
    key: "_loop",
    value: function _loop() {
      var _this2 = this;

      var startTime = this._lastUpdate;
      var endTime = this.now();
      this._lastUpdate = endTime;
      this.log("loop", startTime, endTime);

      if (startTime !== endTime) {
        // the state change events
        this._state.forEachBetween(startTime, endTime, function (e) {
          switch (e.state) {
            case "started":
              var offset = _this2._tickSource.getTicksAtTime(e.time);

              _this2.emit("start", e.time, offset);

              break;

            case "stopped":
              if (e.time !== 0) {
                _this2.emit("stop", e.time);
              }

              break;

            case "paused":
              _this2.emit("pause", e.time);

              break;
          }
        }); // the tick callbacks


        this._tickSource.forEachTickBetween(startTime, endTime, function (time, ticks) {
          _this2.callback(time, ticks);
        });
      }
    }
    /**
     * Returns the scheduled state at the given time.
     * @param  time  The time to query.
     * @return  The name of the state input in setStateAtTime.
     * @example
     * const clock = new Tone.Clock();
     * clock.start("+0.1");
     * clock.getStateAtTime("+0.1"); // returns "started"
     */

  }, {
    key: "getStateAtTime",
    value: function getStateAtTime(time) {
      var computedTime = this.toSeconds(time);
      return this._state.getValueAtTime(computedTime);
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Clock.prototype), "dispose", this).call(this);

      this.context.off("tick", this._boundLoop);

      this._tickSource.dispose();

      this._state.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"].getDefaults(), {
        callback: _util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
        frequency: 1,
        units: "hertz"
      });
    }
  }]);

  return Clock;
}(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"]);
_util_Emitter__WEBPACK_IMPORTED_MODULE_2__["Emitter"].mixin(Clock);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TickParam.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TickParam.js ***!
  \*************************************************************/
/*! exports provided: TickParam */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TickParam", function() { return TickParam; });
/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * A Param class just for computing ticks. Similar to the [[Param]] class,
 * but offers conversion to BPM values as well as ability to compute tick
 * duration and elapsed ticks
 */

var TickParam = /*#__PURE__*/function (_Param) {
  _inherits(TickParam, _Param);

  var _super = _createSuper(TickParam);

  function TickParam() {
    var _this;

    _classCallCheck(this, TickParam);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickParam.getDefaults(), arguments, ["value"]));
    _this.name = "TickParam";
    /**
     * The timeline which tracks all of the automations.
     */

    _this._events = new _util_Timeline__WEBPACK_IMPORTED_MODULE_2__["Timeline"](Infinity);
    /**
     * The internal holder for the multiplier value
     */

    _this._multiplier = 1;
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickParam.getDefaults(), arguments, ["value"]); // set the multiplier

    _this._multiplier = options.multiplier; // clear the ticks from the beginning

    _this._events.cancel(0); // set an initial event


    _this._events.add({
      ticks: 0,
      time: 0,
      type: "setValueAtTime",
      value: _this._fromType(options.value)
    });

    _this.setValueAtTime(options.value, 0);

    return _this;
  }

  _createClass(TickParam, [{
    key: "setTargetAtTime",
    value: function setTargetAtTime(value, time, constant) {
      // approximate it with multiple linear ramps
      time = this.toSeconds(time);
      this.setRampPoint(time);

      var computedValue = this._fromType(value); // start from previously scheduled value


      var prevEvent = this._events.get(time);

      var segments = Math.round(Math.max(1 / constant, 1));

      for (var i = 0; i <= segments; i++) {
        var segTime = constant * i + time;

        var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);

        this.linearRampToValueAtTime(this._toType(rampVal), segTime);
      }

      return this;
    }
  }, {
    key: "setValueAtTime",
    value: function setValueAtTime(value, time) {
      var computedTime = this.toSeconds(time);

      _get(_getPrototypeOf(TickParam.prototype), "setValueAtTime", this).call(this, value, time);

      var event = this._events.get(computedTime);

      var previousEvent = this._events.previousEvent(event);

      var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);

      event.ticks = Math.max(ticksUntilTime, 0);
      return this;
    }
  }, {
    key: "linearRampToValueAtTime",
    value: function linearRampToValueAtTime(value, time) {
      var computedTime = this.toSeconds(time);

      _get(_getPrototypeOf(TickParam.prototype), "linearRampToValueAtTime", this).call(this, value, time);

      var event = this._events.get(computedTime);

      var previousEvent = this._events.previousEvent(event);

      var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);

      event.ticks = Math.max(ticksUntilTime, 0);
      return this;
    }
  }, {
    key: "exponentialRampToValueAtTime",
    value: function exponentialRampToValueAtTime(value, time) {
      // aproximate it with multiple linear ramps
      time = this.toSeconds(time);

      var computedVal = this._fromType(value); // start from previously scheduled value


      var prevEvent = this._events.get(time); // approx 10 segments per second


      var segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));
      var segmentDur = (time - prevEvent.time) / segments;

      for (var i = 0; i <= segments; i++) {
        var segTime = segmentDur * i + prevEvent.time;

        var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);

        this.linearRampToValueAtTime(this._toType(rampVal), segTime);
      }

      return this;
    }
    /**
     * Returns the tick value at the time. Takes into account
     * any automation curves scheduled on the signal.
     * @param  event The time to get the tick count at
     * @return The number of ticks which have elapsed at the time given any automations.
     */

  }, {
    key: "_getTicksUntilEvent",
    value: function _getTicksUntilEvent(event, time) {
      if (event === null) {
        event = {
          ticks: 0,
          time: 0,
          type: "setValueAtTime",
          value: 0
        };
      } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isUndef"])(event.ticks)) {
        var previousEvent = this._events.previousEvent(event);

        event.ticks = this._getTicksUntilEvent(previousEvent, event.time);
      }

      var val0 = this._fromType(this.getValueAtTime(event.time));

      var val1 = this._fromType(this.getValueAtTime(time)); // if it's right on the line, take the previous value


      var onTheLineEvent = this._events.get(time);

      if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === "setValueAtTime") {
        val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));
      }

      return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;
    }
    /**
     * Returns the tick value at the time. Takes into account
     * any automation curves scheduled on the signal.
     * @param  time The time to get the tick count at
     * @return The number of ticks which have elapsed at the time given any automations.
     */

  }, {
    key: "getTicksAtTime",
    value: function getTicksAtTime(time) {
      var computedTime = this.toSeconds(time);

      var event = this._events.get(computedTime);

      return Math.max(this._getTicksUntilEvent(event, computedTime), 0);
    }
    /**
     * Return the elapsed time of the number of ticks from the given time
     * @param ticks The number of ticks to calculate
     * @param  time The time to get the next tick from
     * @return The duration of the number of ticks from the given time in seconds
     */

  }, {
    key: "getDurationOfTicks",
    value: function getDurationOfTicks(ticks, time) {
      var computedTime = this.toSeconds(time);
      var currentTick = this.getTicksAtTime(time);
      return this.getTimeOfTick(currentTick + ticks) - computedTime;
    }
    /**
     * Given a tick, returns the time that tick occurs at.
     * @return The time that the tick occurs.
     */

  }, {
    key: "getTimeOfTick",
    value: function getTimeOfTick(tick) {
      var before = this._events.get(tick, "ticks");

      var after = this._events.getAfter(tick, "ticks");

      if (before && before.ticks === tick) {
        return before.time;
      } else if (before && after && after.type === "linearRampToValueAtTime" && before.value !== after.value) {
        var val0 = this._fromType(this.getValueAtTime(before.time));

        var val1 = this._fromType(this.getValueAtTime(after.time));

        var delta = (val1 - val0) / (after.time - before.time);
        var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));
        var sol1 = (-val0 + k) / delta;
        var sol2 = (-val0 - k) / delta;
        return (sol1 > 0 ? sol1 : sol2) + before.time;
      } else if (before) {
        if (before.value === 0) {
          return Infinity;
        } else {
          return before.time + (tick - before.ticks) / before.value;
        }
      } else {
        return tick / this._initialValue;
      }
    }
    /**
     * Convert some number of ticks their the duration in seconds accounting
     * for any automation curves starting at the given time.
     * @param  ticks The number of ticks to convert to seconds.
     * @param  when  When along the automation timeline to convert the ticks.
     * @return The duration in seconds of the ticks.
     */

  }, {
    key: "ticksToTime",
    value: function ticksToTime(ticks, when) {
      return this.getDurationOfTicks(ticks, when);
    }
    /**
     * The inverse of [[ticksToTime]]. Convert a duration in
     * seconds to the corresponding number of ticks accounting for any
     * automation curves starting at the given time.
     * @param  duration The time interval to convert to ticks.
     * @param  when When along the automation timeline to convert the ticks.
     * @return The duration in ticks.
     */

  }, {
    key: "timeToTicks",
    value: function timeToTicks(duration, when) {
      var computedTime = this.toSeconds(when);
      var computedDuration = this.toSeconds(duration);
      var startTicks = this.getTicksAtTime(computedTime);
      var endTicks = this.getTicksAtTime(computedTime + computedDuration);
      return endTicks - startTicks;
    }
    /**
     * Convert from the type when the unit value is BPM
     */

  }, {
    key: "_fromType",
    value: function _fromType(val) {
      if (this.units === "bpm" && this.multiplier) {
        return 1 / (60 / val / this.multiplier);
      } else {
        return _get(_getPrototypeOf(TickParam.prototype), "_fromType", this).call(this, val);
      }
    }
    /**
     * Special case of type conversion where the units === "bpm"
     */

  }, {
    key: "_toType",
    value: function _toType(val) {
      if (this.units === "bpm" && this.multiplier) {
        return val / this.multiplier * 60;
      } else {
        return _get(_getPrototypeOf(TickParam.prototype), "_toType", this).call(this, val);
      }
    }
    /**
     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
     */

  }, {
    key: "multiplier",
    get: function get() {
      return this._multiplier;
    },
    set: function set(m) {
      // get and reset the current value with the new multiplier
      // might be necessary to clear all the previous values
      var currentVal = this.value;
      this._multiplier = m;
      this.cancelScheduledValues(0);
      this.setValueAtTime(currentVal, 0);
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"].getDefaults(), {
        multiplier: 1,
        units: "hertz",
        value: 1
      });
    }
  }]);

  return TickParam;
}(_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TickSignal.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TickSignal.js ***!
  \**************************************************************/
/*! exports provided: TickSignal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TickSignal", function() { return TickSignal; });
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _TickParam__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TickParam */ "./node_modules/tone/build/esm/core/clock/TickParam.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * TickSignal extends Tone.Signal, but adds the capability
 * to calculate the number of elapsed ticks. exponential and target curves
 * are approximated with multiple linear ramps.
 *
 * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,
 * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)
 * describing integrating timing functions for tempo calculations.
 */

var TickSignal = /*#__PURE__*/function (_Signal) {
  _inherits(TickSignal, _Signal);

  var _super = _createSuper(TickSignal);

  function TickSignal() {
    var _this;

    _classCallCheck(this, TickSignal);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSignal.getDefaults(), arguments, ["value"]));
    _this.name = "TickSignal";
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSignal.getDefaults(), arguments, ["value"]);
    _this.input = _this._param = new _TickParam__WEBPACK_IMPORTED_MODULE_2__["TickParam"]({
      context: _this.context,
      convert: options.convert,
      multiplier: options.multiplier,
      param: _this._constantSource.offset,
      units: options.units,
      value: options.value
    });
    return _this;
  }

  _createClass(TickSignal, [{
    key: "ticksToTime",
    value: function ticksToTime(ticks, when) {
      return this._param.ticksToTime(ticks, when);
    }
  }, {
    key: "timeToTicks",
    value: function timeToTicks(duration, when) {
      return this._param.timeToTicks(duration, when);
    }
  }, {
    key: "getTimeOfTick",
    value: function getTimeOfTick(tick) {
      return this._param.getTimeOfTick(tick);
    }
  }, {
    key: "getDurationOfTicks",
    value: function getDurationOfTicks(ticks, time) {
      return this._param.getDurationOfTicks(ticks, time);
    }
  }, {
    key: "getTicksAtTime",
    value: function getTicksAtTime(time) {
      return this._param.getTicksAtTime(time);
    }
    /**
     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
     */

  }, {
    key: "multiplier",
    get: function get() {
      return this._param.multiplier;
    },
    set: function set(m) {
      this._param.multiplier = m;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(TickSignal.prototype), "dispose", this).call(this);

      this._param.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"].getDefaults(), {
        multiplier: 1,
        units: "hertz",
        value: 1
      });
    }
  }]);

  return TickSignal;
}(_signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TickSource.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TickSource.js ***!
  \**************************************************************/
/*! exports provided: TickSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TickSource", function() { return TickSource; });
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _TickSignal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TickSignal */ "./node_modules/tone/build/esm/core/clock/TickSignal.js");
/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.
 */

var TickSource = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(TickSource, _ToneWithContext);

  var _super = _createSuper(TickSource);

  function TickSource() {
    var _this;

    _classCallCheck(this, TickSource);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSource.getDefaults(), arguments, ["frequency"]));
    _this.name = "TickSource";
    /**
     * The state timeline
     */

    _this._state = new _util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__["StateTimeline"]();
    /**
     * The offset values of the ticks
     */

    _this._tickOffset = new _util_Timeline__WEBPACK_IMPORTED_MODULE_4__["Timeline"]();
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSource.getDefaults(), arguments, ["frequency"]);
    _this.frequency = new _TickSignal__WEBPACK_IMPORTED_MODULE_6__["TickSignal"]({
      context: _this.context,
      units: options.units,
      value: options.frequency
    });
    Object(_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this), "frequency"); // set the initial state

    _this._state.setStateAtTime("stopped", 0); // add the first event


    _this.setTicksAtTime(0, 0);

    return _this;
  }

  _createClass(TickSource, [{
    key: "state",
    get:
    /**
     * Returns the playback state of the source, either "started", "stopped" or "paused".
     */
    function get() {
      return this.getStateAtTime(this.now());
    }
    /**
     * Start the clock at the given time. Optionally pass in an offset
     * of where to start the tick counter from.
     * @param  time    The time the clock should start
     * @param offset The number of ticks to start the source at
     */

  }, {
    key: "start",
    value: function start(time, offset) {
      var computedTime = this.toSeconds(time);

      if (this._state.getValueAtTime(computedTime) !== "started") {
        this._state.setStateAtTime("started", computedTime);

        if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__["isDefined"])(offset)) {
          this.setTicksAtTime(offset, computedTime);
        }
      }

      return this;
    }
    /**
     * Stop the clock. Stopping the clock resets the tick counter to 0.
     * @param time The time when the clock should stop.
     */

  }, {
    key: "stop",
    value: function stop(time) {
      var computedTime = this.toSeconds(time); // cancel the previous stop

      if (this._state.getValueAtTime(computedTime) === "stopped") {
        var event = this._state.get(computedTime);

        if (event && event.time > 0) {
          this._tickOffset.cancel(event.time);

          this._state.cancel(event.time);
        }
      }

      this._state.cancel(computedTime);

      this._state.setStateAtTime("stopped", computedTime);

      this.setTicksAtTime(0, computedTime);
      return this;
    }
    /**
     * Pause the clock. Pausing does not reset the tick counter.
     * @param time The time when the clock should stop.
     */

  }, {
    key: "pause",
    value: function pause(time) {
      var computedTime = this.toSeconds(time);

      if (this._state.getValueAtTime(computedTime) === "started") {
        this._state.setStateAtTime("paused", computedTime);
      }

      return this;
    }
    /**
     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.
     * @param time When to clear the events after
     */

  }, {
    key: "cancel",
    value: function cancel(time) {
      time = this.toSeconds(time);

      this._state.cancel(time);

      this._tickOffset.cancel(time);

      return this;
    }
    /**
     * Get the elapsed ticks at the given time
     * @param  time  When to get the tick value
     * @return The number of ticks
     */

  }, {
    key: "getTicksAtTime",
    value: function getTicksAtTime(time) {
      var _this2 = this;

      var computedTime = this.toSeconds(time);

      var stopEvent = this._state.getLastState("stopped", computedTime); // this event allows forEachBetween to iterate until the current time


      var tmpEvent = {
        state: "paused",
        time: computedTime
      };

      this._state.add(tmpEvent); // keep track of the previous offset event


      var lastState = stopEvent;
      var elapsedTicks = 0; // iterate through all the events since the last stop

      this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, function (e) {
        var periodStartTime = lastState.time; // if there is an offset event in this period use that

        var offsetEvent = _this2._tickOffset.get(e.time);

        if (offsetEvent && offsetEvent.time >= lastState.time) {
          elapsedTicks = offsetEvent.ticks;
          periodStartTime = offsetEvent.time;
        }

        if (lastState.state === "started" && e.state !== "started") {
          elapsedTicks += _this2.frequency.getTicksAtTime(e.time) - _this2.frequency.getTicksAtTime(periodStartTime);
        }

        lastState = e;
      }); // remove the temporary event


      this._state.remove(tmpEvent); // return the ticks


      return elapsedTicks;
    }
    /**
     * The number of times the callback was invoked. Starts counting at 0
     * and increments after the callback was invoked. Returns -1 when stopped.
     */

  }, {
    key: "ticks",
    get: function get() {
      return this.getTicksAtTime(this.now());
    },
    set: function set(t) {
      this.setTicksAtTime(t, this.now());
    }
    /**
     * The time since ticks=0 that the TickSource has been running. Accounts
     * for tempo curves
     */

  }, {
    key: "seconds",
    get: function get() {
      return this.getSecondsAtTime(this.now());
    },
    set: function set(s) {
      var now = this.now();
      var ticks = this.frequency.timeToTicks(s, now);
      this.setTicksAtTime(ticks, now);
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */

  }, {
    key: "getSecondsAtTime",
    value: function getSecondsAtTime(time) {
      var _this3 = this;

      time = this.toSeconds(time);

      var stopEvent = this._state.getLastState("stopped", time); // this event allows forEachBetween to iterate until the current time


      var tmpEvent = {
        state: "paused",
        time: time
      };

      this._state.add(tmpEvent); // keep track of the previous offset event


      var lastState = stopEvent;
      var elapsedSeconds = 0; // iterate through all the events since the last stop

      this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {
        var periodStartTime = lastState.time; // if there is an offset event in this period use that

        var offsetEvent = _this3._tickOffset.get(e.time);

        if (offsetEvent && offsetEvent.time >= lastState.time) {
          elapsedSeconds = offsetEvent.seconds;
          periodStartTime = offsetEvent.time;
        }

        if (lastState.state === "started" && e.state !== "started") {
          elapsedSeconds += e.time - periodStartTime;
        }

        lastState = e;
      }); // remove the temporary event


      this._state.remove(tmpEvent); // return the ticks


      return elapsedSeconds;
    }
    /**
     * Set the clock's ticks at the given time.
     * @param  ticks The tick value to set
     * @param  time  When to set the tick value
     */

  }, {
    key: "setTicksAtTime",
    value: function setTicksAtTime(ticks, time) {
      time = this.toSeconds(time);

      this._tickOffset.cancel(time);

      this._tickOffset.add({
        seconds: this.frequency.getDurationOfTicks(ticks, time),
        ticks: ticks,
        time: time
      });

      return this;
    }
    /**
     * Returns the scheduled state at the given time.
     * @param  time  The time to query.
     */

  }, {
    key: "getStateAtTime",
    value: function getStateAtTime(time) {
      time = this.toSeconds(time);
      return this._state.getValueAtTime(time);
    }
    /**
     * Get the time of the given tick. The second argument
     * is when to test before. Since ticks can be set (with setTicksAtTime)
     * there may be multiple times for a given tick value.
     * @param  tick The tick number.
     * @param  before When to measure the tick value from.
     * @return The time of the tick
     */

  }, {
    key: "getTimeOfTick",
    value: function getTimeOfTick(tick) {
      var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.now();

      var offset = this._tickOffset.get(before);

      var event = this._state.get(before);

      var startTime = Math.max(offset.time, event.time);
      var absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;
      return this.frequency.getTimeOfTick(absoluteTicks);
    }
    /**
     * Invoke the callback event at all scheduled ticks between the
     * start time and the end time
     * @param  startTime  The beginning of the search range
     * @param  endTime    The end of the search range
     * @param  callback   The callback to invoke with each tick
     */

  }, {
    key: "forEachTickBetween",
    value: function forEachTickBetween(startTime, endTime, callback) {
      var _this4 = this;

      // only iterate through the sections where it is "started"
      var lastStateEvent = this._state.get(startTime);

      this._state.forEachBetween(startTime, endTime, function (event) {
        if (lastStateEvent && lastStateEvent.state === "started" && event.state !== "started") {
          _this4.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - _this4.sampleTime, callback);
        }

        lastStateEvent = event;
      });

      var error = null;

      if (lastStateEvent && lastStateEvent.state === "started") {
        var maxStartTime = Math.max(lastStateEvent.time, startTime); // figure out the difference between the frequency ticks and the

        var startTicks = this.frequency.getTicksAtTime(maxStartTime);
        var ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);
        var diff = startTicks - ticksAtStart;
        var offset = Math.ceil(diff) - diff; // guard against floating point issues

        offset = Object(_util_Math__WEBPACK_IMPORTED_MODULE_7__["EQ"])(offset, 1) ? 0 : offset;
        var nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);

        while (nextTickTime < endTime) {
          try {
            callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));
          } catch (e) {
            error = e;
            break;
          }

          nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);
        }
      }

      if (error) {
        throw error;
      }

      return this;
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(TickSource.prototype), "dispose", this).call(this);

      this._state.dispose();

      this._tickOffset.dispose();

      this.frequency.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign({
        frequency: 1,
        units: "hertz"
      }, _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"].getDefaults());
    }
  }]);

  return TickSource;
}(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/Ticker.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/Ticker.js ***!
  \**********************************************************/
/*! exports provided: Ticker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ticker", function() { return Ticker; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * A class which provides a reliable callback using either
 * a Web Worker, or if that isn't supported, falls back to setTimeout.
 */
var Ticker = /*#__PURE__*/function () {
  function Ticker(callback, type, updateInterval) {
    _classCallCheck(this, Ticker);

    this._callback = callback;
    this._type = type;
    this._updateInterval = updateInterval; // create the clock source for the first time

    this._createClock();
  }
  /**
   * Generate a web worker
   */


  _createClass(Ticker, [{
    key: "_createWorker",
    value: function _createWorker() {
      var blob = new Blob([
      /* javascript */
      "\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ".concat((this._updateInterval * 1000).toFixed(1), ";\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t")], {
        type: "text/javascript"
      });
      var blobUrl = URL.createObjectURL(blob);
      var worker = new Worker(blobUrl);
      worker.onmessage = this._callback.bind(this);
      this._worker = worker;
    }
    /**
     * Create a timeout loop
     */

  }, {
    key: "_createTimeout",
    value: function _createTimeout() {
      var _this = this;

      this._timeout = setTimeout(function () {
        _this._createTimeout();

        _this._callback();
      }, this._updateInterval * 1000);
    }
    /**
     * Create the clock source.
     */

  }, {
    key: "_createClock",
    value: function _createClock() {
      if (this._type === "worker") {
        try {
          this._createWorker();
        } catch (e) {
          // workers not supported, fallback to timeout
          this._type = "timeout";

          this._createClock();
        }
      } else if (this._type === "timeout") {
        this._createTimeout();
      }
    }
    /**
     * Clean up the current clock source
     */

  }, {
    key: "_disposeClock",
    value: function _disposeClock() {
      if (this._timeout) {
        clearTimeout(this._timeout);
        this._timeout = 0;
      }

      if (this._worker) {
        this._worker.terminate();

        this._worker.onmessage = null;
      }
    }
    /**
     * The rate in seconds the ticker will update
     */

  }, {
    key: "updateInterval",
    get: function get() {
      return this._updateInterval;
    },
    set: function set(interval) {
      this._updateInterval = Math.max(interval, 128 / 44100);

      if (this._type === "worker") {
        this._worker.postMessage(Math.max(interval * 1000, 1));
      }
    }
    /**
     * The type of the ticker, either a worker or a timeout
     */

  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(type) {
      this._disposeClock();

      this._type = type;

      this._createClock();
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      this._disposeClock();
    }
  }]);

  return Ticker;
}();

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/Transport.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/Transport.js ***!
  \*************************************************************/
/*! exports provided: Transport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Transport", function() { return Transport; });
/* harmony import */ var _core_type_Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/type/Time */ "./node_modules/tone/build/esm/core/type/Time.js");
/* harmony import */ var _core_util_TimelineValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/TimelineValue */ "./node_modules/tone/build/esm/core/util/TimelineValue.js");
/* harmony import */ var _context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
/* harmony import */ var _context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _type_Ticks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/IntervalTimeline */ "./node_modules/tone/build/esm/core/util/IntervalTimeline.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Clock__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Clock */ "./node_modules/tone/build/esm/core/clock/Clock.js");
/* harmony import */ var _TransportEvent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./TransportEvent */ "./node_modules/tone/build/esm/core/clock/TransportEvent.js");
/* harmony import */ var _TransportRepeatEvent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./TransportRepeatEvent */ "./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

















/**
 * Transport for timing musical events.
 * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)
 * Transport timing events pass in the exact time of the scheduled event
 * in the argument of the callback function. Pass that time value to the object
 * you're scheduling. <br><br>
 * A single transport is created for you when the library is initialized.
 * <br><br>
 * The transport emits the events: "start", "stop", "pause", and "loop" which are
 * called with the time of that event as the argument.
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination();
 * // repeated event every 8th note
 * Tone.Transport.scheduleRepeat((time) => {
 * 	// use the callback time to schedule events
 * 	osc.start(time).stop(time + 0.1);
 * }, "8n");
 * // transport must be started before it starts invoking events
 * Tone.Transport.start();
 * @category Core
 */

var Transport = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(Transport, _ToneWithContext);

  var _super = _createSuper(Transport);

  function Transport() {
    var _this;

    _classCallCheck(this, Transport);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(Transport.getDefaults(), arguments));
    _this.name = "Transport"; //-------------------------------------
    // 	LOOPING
    //-------------------------------------

    /**
     * If the transport loops or not.
     */

    _this._loop = new _core_util_TimelineValue__WEBPACK_IMPORTED_MODULE_1__["TimelineValue"](false);
    /**
     * The loop start position in ticks
     */

    _this._loopStart = 0;
    /**
     * The loop end position in ticks
     */

    _this._loopEnd = 0; //-------------------------------------
    // 	TIMELINE EVENTS
    //-------------------------------------

    /**
     * All the events in an object to keep track by ID
     */

    _this._scheduledEvents = {};
    /**
     * The scheduled events.
     */

    _this._timeline = new _util_Timeline__WEBPACK_IMPORTED_MODULE_11__["Timeline"]();
    /**
     * Repeated events
     */

    _this._repeatedEvents = new _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_10__["IntervalTimeline"]();
    /**
     * All of the synced Signals
     */

    _this._syncedSignals = [];
    /**
     * The swing amount
     */

    _this._swingAmount = 0;
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(Transport.getDefaults(), arguments); // CLOCK/TEMPO

    _this._ppq = options.ppq;
    _this._clock = new _Clock__WEBPACK_IMPORTED_MODULE_13__["Clock"]({
      callback: _this._processTick.bind(_assertThisInitialized(_this)),
      context: _this.context,
      frequency: 0,
      units: "bpm"
    });

    _this._bindClockEvents();

    _this.bpm = _this._clock.frequency;
    _this._clock.frequency.multiplier = options.ppq;

    _this.bpm.setValueAtTime(options.bpm, 0);

    Object(_util_Interface__WEBPACK_IMPORTED_MODULE_9__["readOnly"])(_assertThisInitialized(_this), "bpm");
    _this._timeSignature = options.timeSignature; // SWING

    _this._swingTicks = options.ppq / 2; // 8n

    return _this;
  }

  _createClass(Transport, [{
    key: "_processTick",
    value: //-------------------------------------
    // 	TICKS
    //-------------------------------------

    /**
     * called on every tick
     * @param  tickTime clock relative tick time
     */
    function _processTick(tickTime, ticks) {
      // do the loop test
      if (this._loop.get(tickTime)) {
        if (ticks >= this._loopEnd) {
          this.emit("loopEnd", tickTime);

          this._clock.setTicksAtTime(this._loopStart, tickTime);

          ticks = this._loopStart;
          this.emit("loopStart", tickTime, this._clock.getSecondsAtTime(tickTime));
          this.emit("loop", tickTime);
        }
      } // handle swing


      if (this._swingAmount > 0 && ticks % this._ppq !== 0 && // not on a downbeat
      ticks % (this._swingTicks * 2) !== 0) {
        // add some swing
        var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);

        var amount = Math.sin(progress * Math.PI) * this._swingAmount;

        tickTime += new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](this.context, this._swingTicks * 2 / 3).toSeconds() * amount;
      } // invoke the timeline events scheduled on this tick


      this._timeline.forEachAtTime(ticks, function (event) {
        return event.invoke(tickTime);
      });
    } //-------------------------------------
    // 	SCHEDULABLE EVENTS
    //-------------------------------------

    /**
     * Schedule an event along the timeline.
     * @param callback The callback to be invoked at the time.
     * @param time The time to invoke the callback at.
     * @return The id of the event which can be used for canceling the event.
     * @example
     * // schedule an event on the 16th measure
     * Tone.Transport.schedule((time) => {
     * 	// invoked on measure 16
     * 	console.log("measure 16!");
     * }, "16:0:0");
     */

  }, {
    key: "schedule",
    value: function schedule(callback, time) {
      var event = new _TransportEvent__WEBPACK_IMPORTED_MODULE_14__["TransportEvent"](this, {
        callback: callback,
        time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__["TransportTimeClass"](this.context, time).toTicks()
      });
      return this._addEvent(event, this._timeline);
    }
    /**
     * Schedule a repeated event along the timeline. The event will fire
     * at the `interval` starting at the `startTime` and for the specified
     * `duration`.
     * @param  callback   The callback to invoke.
     * @param  interval   The duration between successive callbacks. Must be a positive number.
     * @param  startTime  When along the timeline the events should start being invoked.
     * @param  duration How long the event should repeat.
     * @return  The ID of the scheduled event. Use this to cancel the event.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // a callback invoked every eighth note after the first measure
     * Tone.Transport.scheduleRepeat((time) => {
     * 	osc.start(time).stop(time + 0.1);
     * }, "8n", "1m");
     */

  }, {
    key: "scheduleRepeat",
    value: function scheduleRepeat(callback, interval, startTime) {
      var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
      var event = new _TransportRepeatEvent__WEBPACK_IMPORTED_MODULE_15__["TransportRepeatEvent"](this, {
        callback: callback,
        duration: new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, duration).toTicks(),
        interval: new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, interval).toTicks(),
        time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__["TransportTimeClass"](this.context, startTime).toTicks()
      }); // kick it off if the Transport is started
      // @ts-ignore

      return this._addEvent(event, this._repeatedEvents);
    }
    /**
     * Schedule an event that will be removed after it is invoked.
     * @param callback The callback to invoke once.
     * @param time The time the callback should be invoked.
     * @returns The ID of the scheduled event.
     */

  }, {
    key: "scheduleOnce",
    value: function scheduleOnce(callback, time) {
      var event = new _TransportEvent__WEBPACK_IMPORTED_MODULE_14__["TransportEvent"](this, {
        callback: callback,
        once: true,
        time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__["TransportTimeClass"](this.context, time).toTicks()
      });
      return this._addEvent(event, this._timeline);
    }
    /**
     * Clear the passed in event id from the timeline
     * @param eventId The id of the event.
     */

  }, {
    key: "clear",
    value: function clear(eventId) {
      if (this._scheduledEvents.hasOwnProperty(eventId)) {
        var item = this._scheduledEvents[eventId.toString()];

        item.timeline.remove(item.event);
        item.event.dispose();
        delete this._scheduledEvents[eventId.toString()];
      }

      return this;
    }
    /**
     * Add an event to the correct timeline. Keep track of the
     * timeline it was added to.
     * @returns the event id which was just added
     */

  }, {
    key: "_addEvent",
    value: function _addEvent(event, timeline) {
      this._scheduledEvents[event.id.toString()] = {
        event: event,
        timeline: timeline
      };
      timeline.add(event);
      return event.id;
    }
    /**
     * Remove scheduled events from the timeline after
     * the given time. Repeated events will be removed
     * if their startTime is after the given time
     * @param after Clear all events after this time.
     */

  }, {
    key: "cancel",
    value: function cancel() {
      var _this2 = this;

      var after = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var computedAfter = this.toTicks(after);

      this._timeline.forEachFrom(computedAfter, function (event) {
        return _this2.clear(event.id);
      });

      this._repeatedEvents.forEachFrom(computedAfter, function (event) {
        return _this2.clear(event.id);
      });

      return this;
    } //-------------------------------------
    // 	START/STOP/PAUSE
    //-------------------------------------

    /**
     * Bind start/stop/pause events from the clock and emit them.
     */

  }, {
    key: "_bindClockEvents",
    value: function _bindClockEvents() {
      var _this3 = this;

      this._clock.on("start", function (time, offset) {
        offset = new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](_this3.context, offset).toSeconds();

        _this3.emit("start", time, offset);
      });

      this._clock.on("stop", function (time) {
        _this3.emit("stop", time);
      });

      this._clock.on("pause", function (time) {
        _this3.emit("pause", time);
      });
    }
    /**
     * Returns the playback state of the source, either "started", "stopped", or "paused"
     */

  }, {
    key: "state",
    get: function get() {
      return this._clock.getStateAtTime(this.now());
    }
    /**
     * Start the transport and all sources synced to the transport.
     * @param  time The time when the transport should start.
     * @param  offset The timeline offset to start the transport.
     * @example
     * // start the transport in one second starting at beginning of the 5th measure.
     * Tone.Transport.start("+1", "4:0:0");
     */

  }, {
    key: "start",
    value: function start(time, offset) {
      var offsetTicks;

      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__["isDefined"])(offset)) {
        offsetTicks = this.toTicks(offset);
      } // start the clock


      this._clock.start(time, offsetTicks);

      return this;
    }
    /**
     * Stop the transport and all sources synced to the transport.
     * @param time The time when the transport should stop.
     * @example
     * Tone.Transport.stop();
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this._clock.stop(time);

      return this;
    }
    /**
     * Pause the transport and all sources synced to the transport.
     */

  }, {
    key: "pause",
    value: function pause(time) {
      this._clock.pause(time);

      return this;
    }
    /**
     * Toggle the current state of the transport. If it is
     * started, it will stop it, otherwise it will start the Transport.
     * @param  time The time of the event
     */

  }, {
    key: "toggle",
    value: function toggle(time) {
      time = this.toSeconds(time);

      if (this._clock.getStateAtTime(time) !== "started") {
        this.start(time);
      } else {
        this.stop(time);
      }

      return this;
    } //-------------------------------------
    // 	SETTERS/GETTERS
    //-------------------------------------

    /**
     * The time signature as just the numerator over 4.
     * For example 4/4 would be just 4 and 6/8 would be 3.
     * @example
     * // common time
     * Tone.Transport.timeSignature = 4;
     * // 7/8
     * Tone.Transport.timeSignature = [7, 8];
     * // this will be reduced to a single number
     * Tone.Transport.timeSignature; // returns 3.5
     */

  }, {
    key: "timeSignature",
    get: function get() {
      return this._timeSignature;
    },
    set: function set(timeSig) {
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__["isArray"])(timeSig)) {
        timeSig = timeSig[0] / timeSig[1] * 4;
      }

      this._timeSignature = timeSig;
    }
    /**
     * When the Transport.loop = true, this is the starting position of the loop.
     */

  }, {
    key: "loopStart",
    get: function get() {
      return new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, this._loopStart, "i").toSeconds();
    },
    set: function set(startPosition) {
      this._loopStart = this.toTicks(startPosition);
    }
    /**
     * When the Transport.loop = true, this is the ending position of the loop.
     */

  }, {
    key: "loopEnd",
    get: function get() {
      return new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, this._loopEnd, "i").toSeconds();
    },
    set: function set(endPosition) {
      this._loopEnd = this.toTicks(endPosition);
    }
    /**
     * If the transport loops or not.
     */

  }, {
    key: "loop",
    get: function get() {
      return this._loop.get(this.now());
    },
    set: function set(loop) {
      this._loop.set(loop, this.now());
    }
    /**
     * Set the loop start and stop at the same time.
     * @example
     * // loop over the first measure
     * Tone.Transport.setLoopPoints(0, "1m");
     * Tone.Transport.loop = true;
     */

  }, {
    key: "setLoopPoints",
    value: function setLoopPoints(startPosition, endPosition) {
      this.loopStart = startPosition;
      this.loopEnd = endPosition;
      return this;
    }
    /**
     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.
     */

  }, {
    key: "swing",
    get: function get() {
      return this._swingAmount;
    },
    set: function set(amount) {
      // scale the values to a normal range
      this._swingAmount = amount;
    }
    /**
     * Set the subdivision which the swing will be applied to.
     * The default value is an 8th note. Value must be less
     * than a quarter note.
     */

  }, {
    key: "swingSubdivision",
    get: function get() {
      return new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](this.context, this._swingTicks).toNotation();
    },
    set: function set(subdivision) {
      this._swingTicks = this.toTicks(subdivision);
    }
    /**
     * The Transport's position in Bars:Beats:Sixteenths.
     * Setting the value will jump to that position right away.
     */

  }, {
    key: "position",
    get: function get() {
      var now = this.now();

      var ticks = this._clock.getTicksAtTime(now);

      return new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](this.context, ticks).toBarsBeatsSixteenths();
    },
    set: function set(progress) {
      var ticks = this.toTicks(progress);
      this.ticks = ticks;
    }
    /**
     * The Transport's position in seconds
     * Setting the value will jump to that position right away.
     */

  }, {
    key: "seconds",
    get: function get() {
      return this._clock.seconds;
    },
    set: function set(s) {
      var now = this.now();

      var ticks = this._clock.frequency.timeToTicks(s, now);

      this.ticks = ticks;
    }
    /**
     * The Transport's loop position as a normalized value. Always
     * returns 0 if the transport if loop is not true.
     */

  }, {
    key: "progress",
    get: function get() {
      if (this.loop) {
        var now = this.now();

        var ticks = this._clock.getTicksAtTime(now);

        return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);
      } else {
        return 0;
      }
    }
    /**
     * The transports current tick position.
     */

  }, {
    key: "ticks",
    get: function get() {
      return this._clock.ticks;
    },
    set: function set(t) {
      if (this._clock.ticks !== t) {
        var now = this.now(); // stop everything synced to the transport

        if (this.state === "started") {
          var ticks = this._clock.getTicksAtTime(now); // schedule to start on the next tick, #573


          var remainingTick = this._clock.frequency.getDurationOfTicks(Math.ceil(ticks) - ticks, now);

          var time = now + remainingTick;
          this.emit("stop", time);

          this._clock.setTicksAtTime(t, time); // restart it with the new time


          this.emit("start", time, this._clock.getSecondsAtTime(time));
        } else {
          this._clock.setTicksAtTime(t, now);
        }
      }
    }
    /**
     * Get the clock's ticks at the given time.
     * @param  time  When to get the tick value
     * @return The tick value at the given time.
     */

  }, {
    key: "getTicksAtTime",
    value: function getTicksAtTime(time) {
      return Math.round(this._clock.getTicksAtTime(time));
    }
    /**
     * Return the elapsed seconds at the given time.
     * @param  time  When to get the elapsed seconds
     * @return  The number of elapsed seconds
     */

  }, {
    key: "getSecondsAtTime",
    value: function getSecondsAtTime(time) {
      return this._clock.getSecondsAtTime(time);
    }
    /**
     * Pulses Per Quarter note. This is the smallest resolution
     * the Transport timing supports. This should be set once
     * on initialization and not set again. Changing this value
     * after other objects have been created can cause problems.
     */

  }, {
    key: "PPQ",
    get: function get() {
      return this._clock.frequency.multiplier;
    },
    set: function set(ppq) {
      this._clock.frequency.multiplier = ppq;
    } //-------------------------------------
    // 	SYNCING
    //-------------------------------------

    /**
     * Returns the time aligned to the next subdivision
     * of the Transport. If the Transport is not started,
     * it will return 0.
     * Note: this will not work precisely during tempo ramps.
     * @param  subdivision  The subdivision to quantize to
     * @return  The context time of the next subdivision.
     * @example
     * // the transport must be started, otherwise returns 0
     * Tone.Transport.start();
     * Tone.Transport.nextSubdivision("4n");
     */

  }, {
    key: "nextSubdivision",
    value: function nextSubdivision(subdivision) {
      subdivision = this.toTicks(subdivision);

      if (this.state !== "started") {
        // if the transport's not started, return 0
        return 0;
      } else {
        var now = this.now(); // the remainder of the current ticks and the subdivision

        var transportPos = this.getTicksAtTime(now);
        var remainingTicks = subdivision - transportPos % subdivision;
        return this._clock.nextTickTime(remainingTicks, now);
      }
    }
    /**
     * Attaches the signal to the tempo control signal so that
     * any changes in the tempo will change the signal in the same
     * ratio.
     *
     * @param signal
     * @param ratio Optionally pass in the ratio between the two signals.
     * 			Otherwise it will be computed based on their current values.
     */

  }, {
    key: "syncSignal",
    value: function syncSignal(signal, ratio) {
      if (!ratio) {
        // get the sync ratio
        var now = this.now();

        if (signal.getValueAtTime(now) !== 0) {
          var bpm = this.bpm.getValueAtTime(now);
          var computedFreq = 1 / (60 / bpm / this.PPQ);
          ratio = signal.getValueAtTime(now) / computedFreq;
        } else {
          ratio = 0;
        }
      }

      var ratioSignal = new _context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"](ratio); // @ts-ignore

      this.bpm.connect(ratioSignal); // @ts-ignore

      ratioSignal.connect(signal._param);

      this._syncedSignals.push({
        initial: signal.value,
        ratio: ratioSignal,
        signal: signal
      });

      signal.value = 0;
      return this;
    }
    /**
     * Unsyncs a previously synced signal from the transport's control.
     * See Transport.syncSignal.
     */

  }, {
    key: "unsyncSignal",
    value: function unsyncSignal(signal) {
      for (var i = this._syncedSignals.length - 1; i >= 0; i--) {
        var syncedSignal = this._syncedSignals[i];

        if (syncedSignal.signal === signal) {
          syncedSignal.ratio.dispose();
          syncedSignal.signal.value = syncedSignal.initial;

          this._syncedSignals.splice(i, 1);
        }
      }

      return this;
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Transport.prototype), "dispose", this).call(this);

      this._clock.dispose();

      Object(_util_Interface__WEBPACK_IMPORTED_MODULE_9__["writable"])(this, "bpm");

      this._timeline.dispose();

      this._repeatedEvents.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__["ToneWithContext"].getDefaults(), {
        bpm: 120,
        loopEnd: "4m",
        loopStart: 0,
        ppq: 192,
        swing: 0,
        swingSubdivision: "8n",
        timeSignature: 4
      });
    }
  }]);

  return Transport;
}(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__["ToneWithContext"]);
_util_Emitter__WEBPACK_IMPORTED_MODULE_8__["Emitter"].mixin(Transport); //-------------------------------------
// 	INITIALIZATION
//-------------------------------------

Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
  context.transport = new Transport({
    context: context
  });
});
Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
  context.transport.dispose();
});

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TransportEvent.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TransportEvent.js ***!
  \******************************************************************/
/*! exports provided: TransportEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransportEvent", function() { return TransportEvent; });
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


/**
 * TransportEvent is an internal class used by [[Transport]]
 * to schedule events. Do no invoke this class directly, it is
 * handled from within Tone.Transport.
 */

var TransportEvent = /*#__PURE__*/function () {
  /**
   * @param transport The transport object which the event belongs to
   */
  function TransportEvent(transport, opts) {
    _classCallCheck(this, TransportEvent);

    /**
     * The unique id of the event
     */
    this.id = TransportEvent._eventId++;
    var options = Object.assign(TransportEvent.getDefaults(), opts);
    this.transport = transport;
    this.callback = options.callback;
    this._once = options.once;
    this.time = options.time;
  }

  _createClass(TransportEvent, [{
    key: "invoke",
    value:
    /**
     * Invoke the event callback.
     * @param  time  The AudioContext time in seconds of the event
     */
    function invoke(time) {
      if (this.callback) {
        this.callback(time);

        if (this._once) {
          this.transport.clear(this.id);
        }
      }
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      this.callback = undefined;
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return {
        callback: _util_Interface__WEBPACK_IMPORTED_MODULE_0__["noOp"],
        once: false,
        time: 0
      };
    }
  }]);

  return TransportEvent;
}();
/**
 * Current ID counter
 */

TransportEvent._eventId = 0;

/***/ }),

/***/ "./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js ***!
  \************************************************************************/
/*! exports provided: TransportRepeatEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransportRepeatEvent", function() { return TransportRepeatEvent; });
/* harmony import */ var _type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _TransportEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransportEvent */ "./node_modules/tone/build/esm/core/clock/TransportEvent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * TransportRepeatEvent is an internal class used by Tone.Transport
 * to schedule repeat events. This class should not be instantiated directly.
 */

var TransportRepeatEvent = /*#__PURE__*/function (_TransportEvent) {
  _inherits(TransportRepeatEvent, _TransportEvent);

  var _super = _createSuper(TransportRepeatEvent);

  /**
   * @param transport The transport object which the event belongs to
   */
  function TransportRepeatEvent(transport, opts) {
    var _this;

    _classCallCheck(this, TransportRepeatEvent);

    _this = _super.call(this, transport, opts);
    /**
     * The ID of the current timeline event
     */

    _this._currentId = -1;
    /**
     * The ID of the next timeline event
     */

    _this._nextId = -1;
    /**
     * The time of the next event
     */

    _this._nextTick = _this.time;
    /**
     * a reference to the bound start method
     */

    _this._boundRestart = _this._restart.bind(_assertThisInitialized(_this));
    var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);
    _this.duration = new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](transport.context, options.duration).valueOf();
    _this._interval = new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](transport.context, options.interval).valueOf();
    _this._nextTick = options.time;

    _this.transport.on("start", _this._boundRestart);

    _this.transport.on("loopStart", _this._boundRestart);

    _this.context = _this.transport.context;

    _this._restart();

    return _this;
  }

  _createClass(TransportRepeatEvent, [{
    key: "invoke",
    value:
    /**
     * Invoke the callback. Returns the tick time which
     * the next event should be scheduled at.
     * @param  time  The AudioContext time in seconds of the event
     */
    function invoke(time) {
      // create more events if necessary
      this._createEvents(time); // call the super class


      _get(_getPrototypeOf(TransportRepeatEvent.prototype), "invoke", this).call(this, time);
    }
    /**
     * Push more events onto the timeline to keep up with the position of the timeline
     */

  }, {
    key: "_createEvents",
    value: function _createEvents(time) {
      // schedule the next event
      var ticks = this.transport.getTicksAtTime(time);

      if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {
        this._nextTick += this._interval;
        this._currentId = this._nextId;
        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._nextTick).toSeconds());
      }
    }
    /**
     * Push more events onto the timeline to keep up with the position of the timeline
     */

  }, {
    key: "_restart",
    value: function _restart(time) {
      this.transport.clear(this._currentId);
      this.transport.clear(this._nextId);
      this._nextTick = this.time;
      var ticks = this.transport.getTicksAtTime(time);

      if (ticks > this.time) {
        this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;
      }

      this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._nextTick).toSeconds());
      this._nextTick += this._interval;
      this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._nextTick).toSeconds());
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(TransportRepeatEvent.prototype), "dispose", this).call(this);

      this.transport.clear(this._currentId);
      this.transport.clear(this._nextId);
      this.transport.off("start", this._boundRestart);
      this.transport.off("loopStart", this._boundRestart);
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign({}, _TransportEvent__WEBPACK_IMPORTED_MODULE_1__["TransportEvent"].getDefaults(), {
        duration: Infinity,
        interval: 1,
        once: false
      });
    }
  }]);

  return TransportRepeatEvent;
}(_TransportEvent__WEBPACK_IMPORTED_MODULE_1__["TransportEvent"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/AudioContext.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/AudioContext.js ***!
  \******************************************************************/
/*! exports provided: createAudioContext, createOfflineAudioContext, theWindow, hasAudioContext, createAudioWorkletNode, supported */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioContext", function() { return createAudioContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createOfflineAudioContext", function() { return createOfflineAudioContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "theWindow", function() { return theWindow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasAudioContext", function() { return hasAudioContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAudioWorkletNode", function() { return createAudioWorkletNode; });
/* harmony import */ var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! standardized-audio-context */ "./node_modules/standardized-audio-context/build/es2019/module.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "supported", function() { return standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isSupported"]; });

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }




/**
 * Create a new AudioContext
 */

function createAudioContext(options) {
  return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["AudioContext"](options);
}
/**
 * Create a new OfflineAudioContext
 */

function createOfflineAudioContext(channels, length, sampleRate) {
  return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["OfflineAudioContext"](channels, length, sampleRate);
}
/**
 * A reference to the window object
 * @hidden
 */

var theWindow = (typeof self === "undefined" ? "undefined" : _typeof(self)) === "object" ? self : null;
/**
 * If the browser has a window object which has an AudioContext
 * @hidden
 */

var hasAudioContext = theWindow && (theWindow.hasOwnProperty("AudioContext") || theWindow.hasOwnProperty("webkitAudioContext"));
function createAudioWorkletNode(context, name, options) {
  Object(_util_Debug__WEBPACK_IMPORTED_MODULE_1__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isDefined"])(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["AudioWorkletNode"]), "This node only works in a secure context (https or localhost)"); // @ts-ignore

  return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["AudioWorkletNode"](context, name, options);
}
/**
 * This promise resolves to a boolean which indicates if the
 * functionality is supported within the currently used browse.
 * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)
 */



/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/BaseContext.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/BaseContext.js ***!
  \*****************************************************************/
/*! exports provided: BaseContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseContext", function() { return BaseContext; });
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var BaseContext = /*#__PURE__*/function (_Emitter) {
  _inherits(BaseContext, _Emitter);

  var _super = _createSuper(BaseContext);

  function BaseContext() {
    var _this;

    _classCallCheck(this, BaseContext);

    _this = _super.apply(this, arguments);
    _this.isOffline = false;
    return _this;
  }
  /*
   * This is a placeholder so that JSON.stringify does not throw an error
   * This matches what JSON.stringify(audioContext) returns on a native
   * audioContext instance.
   */


  _createClass(BaseContext, [{
    key: "toJSON",
    value: function toJSON() {
      return {};
    }
  }]);

  return BaseContext;
}(_util_Emitter__WEBPACK_IMPORTED_MODULE_0__["Emitter"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Context.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Context.js ***!
  \*************************************************************/
/*! exports provided: Context */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return Context; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _clock_Ticker__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clock/Ticker */ "./node_modules/tone/build/esm/core/clock/Ticker.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _ContextInitialization__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
/* harmony import */ var _BaseContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./BaseContext */ "./node_modules/tone/build/esm/core/context/BaseContext.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }











/**
 * Wrapper around the native AudioContext.
 * @category Core
 */

var Context = /*#__PURE__*/function (_BaseContext) {
  _inherits(Context, _BaseContext);

  var _super = _createSuper(Context);

  function Context() {
    var _this;

    _classCallCheck(this, Context);

    _this = _super.call(this);
    _this.name = "Context";
    /**
     * An object containing all of the constants AudioBufferSourceNodes
     */

    _this._constants = new Map();
    /**
     * All of the setTimeout events.
     */

    _this._timeouts = new _util_Timeline__WEBPACK_IMPORTED_MODULE_5__["Timeline"]();
    /**
     * The timeout id counter
     */

    _this._timeoutIds = 0;
    /**
     * Private indicator if the context has been initialized
     */

    _this._initialized = false;
    /**
     * Indicates if the context is an OfflineAudioContext or an AudioContext
     */

    _this.isOffline = false; //--------------------------------------------
    // AUDIO WORKLET
    //--------------------------------------------

    /**
     * Maps a module name to promise of the addModule method
     */

    _this._workletModules = new Map();
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Context.getDefaults(), arguments, ["context"]);

    if (options.context) {
      _this._context = options.context;
    } else {
      _this._context = Object(_AudioContext__WEBPACK_IMPORTED_MODULE_7__["createAudioContext"])({
        latencyHint: options.latencyHint
      });
    }

    _this._ticker = new _clock_Ticker__WEBPACK_IMPORTED_MODULE_2__["Ticker"](_this.emit.bind(_assertThisInitialized(_this), "tick"), options.clockSource, options.updateInterval);

    _this.on("tick", _this._timeoutLoop.bind(_assertThisInitialized(_this))); // fwd events from the context


    _this._context.onstatechange = function () {
      _this.emit("statechange", _this.state);
    };

    _this._setLatencyHint(options.latencyHint);

    _this.lookAhead = options.lookAhead;
    return _this;
  }

  _createClass(Context, [{
    key: "initialize",
    value:
    /**
     * Finish setting up the context. **You usually do not need to do this manually.**
     */
    function initialize() {
      if (!this._initialized) {
        // add any additional modules
        Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_8__["initializeContext"])(this);
        this._initialized = true;
      }

      return this;
    } //---------------------------
    // BASE AUDIO CONTEXT METHODS
    //---------------------------

  }, {
    key: "createAnalyser",
    value: function createAnalyser() {
      return this._context.createAnalyser();
    }
  }, {
    key: "createOscillator",
    value: function createOscillator() {
      return this._context.createOscillator();
    }
  }, {
    key: "createBufferSource",
    value: function createBufferSource() {
      return this._context.createBufferSource();
    }
  }, {
    key: "createBiquadFilter",
    value: function createBiquadFilter() {
      return this._context.createBiquadFilter();
    }
  }, {
    key: "createBuffer",
    value: function createBuffer(numberOfChannels, length, sampleRate) {
      return this._context.createBuffer(numberOfChannels, length, sampleRate);
    }
  }, {
    key: "createChannelMerger",
    value: function createChannelMerger(numberOfInputs) {
      return this._context.createChannelMerger(numberOfInputs);
    }
  }, {
    key: "createChannelSplitter",
    value: function createChannelSplitter(numberOfOutputs) {
      return this._context.createChannelSplitter(numberOfOutputs);
    }
  }, {
    key: "createConstantSource",
    value: function createConstantSource() {
      return this._context.createConstantSource();
    }
  }, {
    key: "createConvolver",
    value: function createConvolver() {
      return this._context.createConvolver();
    }
  }, {
    key: "createDelay",
    value: function createDelay(maxDelayTime) {
      return this._context.createDelay(maxDelayTime);
    }
  }, {
    key: "createDynamicsCompressor",
    value: function createDynamicsCompressor() {
      return this._context.createDynamicsCompressor();
    }
  }, {
    key: "createGain",
    value: function createGain() {
      return this._context.createGain();
    }
  }, {
    key: "createIIRFilter",
    value: function createIIRFilter(feedForward, feedback) {
      // @ts-ignore
      return this._context.createIIRFilter(feedForward, feedback);
    }
  }, {
    key: "createPanner",
    value: function createPanner() {
      return this._context.createPanner();
    }
  }, {
    key: "createPeriodicWave",
    value: function createPeriodicWave(real, imag, constraints) {
      return this._context.createPeriodicWave(real, imag, constraints);
    }
  }, {
    key: "createStereoPanner",
    value: function createStereoPanner() {
      return this._context.createStereoPanner();
    }
  }, {
    key: "createWaveShaper",
    value: function createWaveShaper() {
      return this._context.createWaveShaper();
    }
  }, {
    key: "createMediaStreamSource",
    value: function createMediaStreamSource(stream) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isAudioContext"])(this._context), "Not available if OfflineAudioContext");
      var context = this._context;
      return context.createMediaStreamSource(stream);
    }
  }, {
    key: "createMediaElementSource",
    value: function createMediaElementSource(element) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isAudioContext"])(this._context), "Not available if OfflineAudioContext");
      var context = this._context;
      return context.createMediaElementSource(element);
    }
  }, {
    key: "createMediaStreamDestination",
    value: function createMediaStreamDestination() {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isAudioContext"])(this._context), "Not available if OfflineAudioContext");
      var context = this._context;
      return context.createMediaStreamDestination();
    }
  }, {
    key: "decodeAudioData",
    value: function decodeAudioData(audioData) {
      return this._context.decodeAudioData(audioData);
    }
    /**
     * The current time in seconds of the AudioContext.
     */

  }, {
    key: "currentTime",
    get: function get() {
      return this._context.currentTime;
    }
    /**
     * The current time in seconds of the AudioContext.
     */

  }, {
    key: "state",
    get: function get() {
      return this._context.state;
    }
    /**
     * The current time in seconds of the AudioContext.
     */

  }, {
    key: "sampleRate",
    get: function get() {
      return this._context.sampleRate;
    }
    /**
     * The listener
     */

  }, {
    key: "listener",
    get: function get() {
      this.initialize();
      return this._listener;
    },
    set: function set(l) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(!this._initialized, "The listener cannot be set after initialization.");
      this._listener = l;
    }
    /**
     * There is only one Transport per Context. It is created on initialization.
     */

  }, {
    key: "transport",
    get: function get() {
      this.initialize();
      return this._transport;
    },
    set: function set(t) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(!this._initialized, "The transport cannot be set after initialization.");
      this._transport = t;
    }
    /**
     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.
     */

  }, {
    key: "draw",
    get: function get() {
      this.initialize();
      return this._draw;
    },
    set: function set(d) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(!this._initialized, "Draw cannot be set after initialization.");
      this._draw = d;
    }
    /**
     * A reference to the Context's destination node.
     */

  }, {
    key: "destination",
    get: function get() {
      this.initialize();
      return this._destination;
    },
    set: function set(d) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(!this._initialized, "The destination cannot be set after initialization.");
      this._destination = d;
    }
    /**
     * Create an audio worklet node from a name and options. The module
     * must first be loaded using [[addAudioWorkletModule]].
     */

  }, {
    key: "createAudioWorkletNode",
    value: function createAudioWorkletNode(name, options) {
      return Object(_AudioContext__WEBPACK_IMPORTED_MODULE_7__["createAudioWorkletNode"])(this.rawContext, name, options);
    }
    /**
     * Add an AudioWorkletProcessor module
     * @param url The url of the module
     * @param name The name of the module
     */

  }, {
    key: "addAudioWorkletModule",
    value: function addAudioWorkletModule(url, name) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                Object(_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(this.rawContext.audioWorklet), "AudioWorkletNode is only available in a secure context (https or localhost)");

                if (!this._workletModules.has(name)) {
                  this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));
                }

                _context.next = 4;
                return this._workletModules.get(name);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Returns a promise which resolves when all of the worklets have been loaded on this context
     */

  }, {
    key: "workletsAreReady",
    value: function workletsAreReady() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var promises;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                promises = [];

                this._workletModules.forEach(function (promise) {
                  return promises.push(promise);
                });

                _context2.next = 4;
                return Promise.all(promises);

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
    } //---------------------------
    // TICKER
    //---------------------------

    /**
     * How often the interval callback is invoked.
     * This number corresponds to how responsive the scheduling
     * can be. context.updateInterval + context.lookAhead gives you the
     * total latency between scheduling an event and hearing it.
     */

  }, {
    key: "updateInterval",
    get: function get() {
      return this._ticker.updateInterval;
    },
    set: function set(interval) {
      this._ticker.updateInterval = interval;
    }
    /**
     * What the source of the clock is, either "worker" (default),
     * "timeout", or "offline" (none).
     */

  }, {
    key: "clockSource",
    get: function get() {
      return this._ticker.type;
    },
    set: function set(type) {
      this._ticker.type = type;
    }
    /**
     * The type of playback, which affects tradeoffs between audio
     * output latency and responsiveness.
     * In addition to setting the value in seconds, the latencyHint also
     * accepts the strings "interactive" (prioritizes low latency),
     * "playback" (prioritizes sustained playback), "balanced" (balances
     * latency and performance).
     * @example
     * // prioritize sustained playback
     * const context = new Tone.Context({ latencyHint: "playback" });
     * // set this context as the global Context
     * Tone.setContext(context);
     * // the global context is gettable with Tone.getContext()
     * console.log(Tone.getContext().latencyHint);
     */

  }, {
    key: "latencyHint",
    get: function get() {
      return this._latencyHint;
    }
    /**
     * Update the lookAhead and updateInterval based on the latencyHint
     */

  }, {
    key: "_setLatencyHint",
    value: function _setLatencyHint(hint) {
      var lookAheadValue = 0;
      this._latencyHint = hint;

      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isString"])(hint)) {
        switch (hint) {
          case "interactive":
            lookAheadValue = 0.1;
            break;

          case "playback":
            lookAheadValue = 0.5;
            break;

          case "balanced":
            lookAheadValue = 0.25;
            break;
        }
      }

      this.lookAhead = lookAheadValue;
      this.updateInterval = lookAheadValue / 2;
    }
    /**
     * The unwrapped AudioContext or OfflineAudioContext
     */

  }, {
    key: "rawContext",
    get: function get() {
      return this._context;
    }
    /**
     * The current audio context time plus a short [[lookAhead]].
     */

  }, {
    key: "now",
    value: function now() {
      return this._context.currentTime + this.lookAhead;
    }
    /**
     * The current audio context time without the [[lookAhead]].
     * In most cases it is better to use [[now]] instead of [[immediate]] since
     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,
     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]
     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.
     */

  }, {
    key: "immediate",
    value: function immediate() {
      return this._context.currentTime;
    }
    /**
     * Starts the audio context from a suspended state. This is required
     * to initially start the AudioContext. See [[Tone.start]]
     */

  }, {
    key: "resume",
    value: function resume() {
      if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isAudioContext"])(this._context)) {
        return this._context.resume();
      } else {
        return Promise.resolve();
      }
    }
    /**
     * Close the context. Once closed, the context can no longer be used and
     * any AudioNodes created from the context will be silent.
     */

  }, {
    key: "close",
    value: function close() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isAudioContext"])(this._context)) {
                  _context3.next = 3;
                  break;
                }

                _context3.next = 3;
                return this._context.close();

              case 3:
                if (this._initialized) {
                  Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_8__["closeContext"])(this);
                }

              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
    }
    /**
     * **Internal** Generate a looped buffer at some constant value.
     */

  }, {
    key: "getConstant",
    value: function getConstant(val) {
      if (this._constants.has(val)) {
        return this._constants.get(val);
      } else {
        var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);

        var arr = buffer.getChannelData(0);

        for (var i = 0; i < arr.length; i++) {
          arr[i] = val;
        }

        var constant = this._context.createBufferSource();

        constant.channelCount = 1;
        constant.channelCountMode = "explicit";
        constant.buffer = buffer;
        constant.loop = true;
        constant.start(0);

        this._constants.set(val, constant);

        return constant;
      }
    }
    /**
     * Clean up. Also closes the audio context.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      var _this2 = this;

      _get(_getPrototypeOf(Context.prototype), "dispose", this).call(this);

      this._ticker.dispose();

      this._timeouts.dispose();

      Object.keys(this._constants).map(function (val) {
        return _this2._constants[val].disconnect();
      });
      return this;
    } //---------------------------
    // TIMEOUTS
    //---------------------------

    /**
     * The private loop which keeps track of the context scheduled timeouts
     * Is invoked from the clock source
     */

  }, {
    key: "_timeoutLoop",
    value: function _timeoutLoop() {
      var now = this.now();

      var firstEvent = this._timeouts.peek();

      while (this._timeouts.length && firstEvent && firstEvent.time <= now) {
        // invoke the callback
        firstEvent.callback(); // shift the first event off

        this._timeouts.shift(); // get the next one


        firstEvent = this._timeouts.peek();
      }
    }
    /**
     * A setTimeout which is guaranteed by the clock source.
     * Also runs in the offline context.
     * @param  fn       The callback to invoke
     * @param  timeout  The timeout in seconds
     * @returns ID to use when invoking Context.clearTimeout
     */

  }, {
    key: "setTimeout",
    value: function setTimeout(fn, timeout) {
      this._timeoutIds++;
      var now = this.now();

      this._timeouts.add({
        callback: fn,
        id: this._timeoutIds,
        time: now + timeout
      });

      return this._timeoutIds;
    }
    /**
     * Clears a previously scheduled timeout with Tone.context.setTimeout
     * @param  id  The ID returned from setTimeout
     */

  }, {
    key: "clearTimeout",
    value: function clearTimeout(id) {
      var _this3 = this;

      this._timeouts.forEach(function (event) {
        if (event.id === id) {
          _this3._timeouts.remove(event);
        }
      });

      return this;
    }
    /**
     * Clear the function scheduled by [[setInterval]]
     */

  }, {
    key: "clearInterval",
    value: function clearInterval(id) {
      return this.clearTimeout(id);
    }
    /**
     * Adds a repeating event to the context's callback clock
     */

  }, {
    key: "setInterval",
    value: function setInterval(fn, interval) {
      var _this4 = this;

      var id = ++this._timeoutIds;

      var intervalFn = function intervalFn() {
        var now = _this4.now();

        _this4._timeouts.add({
          callback: function callback() {
            // invoke the callback
            fn(); // invoke the event to repeat it

            intervalFn();
          },
          id: id,
          time: now + interval
        });
      }; // kick it off


      intervalFn();
      return id;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return {
        clockSource: "worker",
        latencyHint: "interactive",
        lookAhead: 0.1,
        updateInterval: 0.05
      };
    }
  }]);

  return Context;
}(_BaseContext__WEBPACK_IMPORTED_MODULE_9__["BaseContext"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ContextInitialization.js":
/*!***************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ContextInitialization.js ***!
  \***************************************************************************/
/*! exports provided: onContextInit, initializeContext, onContextClose, closeContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onContextInit", function() { return onContextInit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initializeContext", function() { return initializeContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onContextClose", function() { return onContextClose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeContext", function() { return closeContext; });
//-------------------------------------
// INITIALIZING NEW CONTEXT
//-------------------------------------

/**
 * Array of callbacks to invoke when a new context is created
 */
var notifyNewContext = [];
/**
 * Used internally to setup a new Context
 */

function onContextInit(cb) {
  notifyNewContext.push(cb);
}
/**
 * Invoke any classes which need to also be initialized when a new context is created.
 */

function initializeContext(ctx) {
  // add any additional modules
  notifyNewContext.forEach(function (cb) {
    return cb(ctx);
  });
}
/**
 * Array of callbacks to invoke when a new context is created
 */

var notifyCloseContext = [];
/**
 * Used internally to tear down a Context
 */

function onContextClose(cb) {
  notifyCloseContext.push(cb);
}
function closeContext(ctx) {
  // add any additional modules
  notifyCloseContext.forEach(function (cb) {
    return cb(ctx);
  });
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Delay.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Delay.js ***!
  \***********************************************************/
/*! exports provided: Delay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Delay", function() { return Delay; });
/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).
 * @category Core
 * @example
 * return Tone.Offline(() => {
 * 	const delay = new Tone.Delay(0.1).toDestination();
 * 	// connect the signal to both the delay and the destination
 * 	const pulse = new Tone.PulseOscillator().connect(delay).toDestination();
 * 	// start and stop the pulse
 * 	pulse.start(0).stop(0.01);
 * }, 0.5, 1);
 */

var Delay = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Delay, _ToneAudioNode);

  var _super = _createSuper(Delay);

  function Delay() {
    var _this;

    _classCallCheck(this, Delay);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Delay.getDefaults(), arguments, ["delayTime", "maxDelay"]));
    _this.name = "Delay";
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Delay.getDefaults(), arguments, ["delayTime", "maxDelay"]);

    var maxDelayInSeconds = _this.toSeconds(options.maxDelay);

    _this._maxDelay = Math.max(maxDelayInSeconds, _this.toSeconds(options.delayTime));
    _this._delayNode = _this.input = _this.output = _this.context.createDelay(maxDelayInSeconds);
    _this.delayTime = new _context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      param: _this._delayNode.delayTime,
      units: "time",
      value: options.delayTime,
      minValue: 0,
      maxValue: _this.maxDelay
    });
    Object(_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this), "delayTime");
    return _this;
  }

  _createClass(Delay, [{
    key: "maxDelay",
    get:
    /**
     * The maximum delay time. This cannot be changed after
     * the value is passed into the constructor.
     */
    function get() {
      return this._maxDelay;
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Delay.prototype), "dispose", this).call(this);

      this._delayNode.disconnect();

      this.delayTime.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults(), {
        delayTime: 0,
        maxDelay: 1
      });
    }
  }]);

  return Delay;
}(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Destination.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Destination.js ***!
  \*****************************************************************/
/*! exports provided: Destination */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Destination", function() { return Destination; });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
/* harmony import */ var _Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * A single master output which is connected to the
 * AudioDestinationNode (aka your speakers).
 * It provides useful conveniences such as the ability
 * to set the volume and mute the entire application.
 * It also gives you the ability to apply master effects to your application.
 *
 * @example
 * const oscillator = new Tone.Oscillator().start();
 * // the audio will go from the oscillator to the speakers
 * oscillator.connect(Tone.getDestination());
 * // a convenience for connecting to the master output is also provided:
 * oscillator.toDestination();
 * @category Core
 */

var Destination = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Destination, _ToneAudioNode);

  var _super = _createSuper(Destination);

  function Destination() {
    var _this;

    _classCallCheck(this, Destination);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Destination.getDefaults(), arguments));
    _this.name = "Destination";
    _this.input = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
      context: _this.context
    });
    _this.output = new _Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
      context: _this.context
    });
    /**
     * The volume of the master output in decibels. -Infinity is silent, and 0 is no change.
     * @example
     * const osc = new Tone.Oscillator().toDestination();
     * osc.start();
     * // ramp the volume down to silent over 10 seconds
     * Tone.getDestination().volume.rampTo(-Infinity, 10);
     */

    _this.volume = _this.input.volume;
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Destination.getDefaults(), arguments);
    Object(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["connectSeries"])(_this.input, _this.output, _this.context.rawContext.destination);
    _this.mute = options.mute;
    _this._internalChannels = [_this.input, _this.context.rawContext.destination, _this.output];
    return _this;
  }

  _createClass(Destination, [{
    key: "mute",
    get:
    /**
     * Mute the output.
     * @example
     * const oscillator = new Tone.Oscillator().start().toDestination();
     * setTimeout(() => {
     * 	// mute the output
     * 	Tone.Destination.mute = true;
     * }, 1000);
     */
    function get() {
      return this.input.mute;
    },
    set: function set(mute) {
      this.input.mute = mute;
    }
    /**
     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously
     * chained in the master effects chain.
     * @param args All arguments will be connected in a row and the Master will be routed through it.
     * @example
     * // route all audio through a filter and compressor
     * const lowpass = new Tone.Filter(800, "lowpass");
     * const compressor = new Tone.Compressor(-18);
     * Tone.Destination.chain(lowpass, compressor);
     */

  }, {
    key: "chain",
    value: function chain() {
      this.input.disconnect();

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      args.unshift(this.input);
      args.push(this.output);
      _ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["connectSeries"].apply(void 0, args);
      return this;
    }
    /**
     * The maximum number of channels the system can output
     * @example
     * console.log(Tone.Destination.maxChannelCount);
     */

  }, {
    key: "maxChannelCount",
    get: function get() {
      return this.context.rawContext.destination.maxChannelCount;
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Destination.prototype), "dispose", this).call(this);

      this.volume.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults(), {
        mute: false,
        volume: 0
      });
    }
  }]);

  return Destination;
}(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"]); //-------------------------------------
// 	INITIALIZATION
//-------------------------------------

Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
  context.destination = new Destination({
    context: context
  });
});
Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
  context.destination.dispose();
});

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/DummyContext.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/DummyContext.js ***!
  \******************************************************************/
/*! exports provided: DummyContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DummyContext", function() { return DummyContext; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _BaseContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BaseContext */ "./node_modules/tone/build/esm/core/context/BaseContext.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var DummyContext = /*#__PURE__*/function (_BaseContext) {
  _inherits(DummyContext, _BaseContext);

  var _super = _createSuper(DummyContext);

  function DummyContext() {
    var _this;

    _classCallCheck(this, DummyContext);

    _this = _super.apply(this, arguments);
    _this.lookAhead = 0;
    _this.latencyHint = 0;
    _this.isOffline = false;
    return _this;
  } //---------------------------
  // BASE AUDIO CONTEXT METHODS
  //---------------------------


  _createClass(DummyContext, [{
    key: "createAnalyser",
    value: function createAnalyser() {
      return {};
    }
  }, {
    key: "createOscillator",
    value: function createOscillator() {
      return {};
    }
  }, {
    key: "createBufferSource",
    value: function createBufferSource() {
      return {};
    }
  }, {
    key: "createBiquadFilter",
    value: function createBiquadFilter() {
      return {};
    }
  }, {
    key: "createBuffer",
    value: function createBuffer(_numberOfChannels, _length, _sampleRate) {
      return {};
    }
  }, {
    key: "createChannelMerger",
    value: function createChannelMerger(_numberOfInputs) {
      return {};
    }
  }, {
    key: "createChannelSplitter",
    value: function createChannelSplitter(_numberOfOutputs) {
      return {};
    }
  }, {
    key: "createConstantSource",
    value: function createConstantSource() {
      return {};
    }
  }, {
    key: "createConvolver",
    value: function createConvolver() {
      return {};
    }
  }, {
    key: "createDelay",
    value: function createDelay(_maxDelayTime) {
      return {};
    }
  }, {
    key: "createDynamicsCompressor",
    value: function createDynamicsCompressor() {
      return {};
    }
  }, {
    key: "createGain",
    value: function createGain() {
      return {};
    }
  }, {
    key: "createIIRFilter",
    value: function createIIRFilter(_feedForward, _feedback) {
      return {};
    }
  }, {
    key: "createPanner",
    value: function createPanner() {
      return {};
    }
  }, {
    key: "createPeriodicWave",
    value: function createPeriodicWave(_real, _imag, _constraints) {
      return {};
    }
  }, {
    key: "createStereoPanner",
    value: function createStereoPanner() {
      return {};
    }
  }, {
    key: "createWaveShaper",
    value: function createWaveShaper() {
      return {};
    }
  }, {
    key: "createMediaStreamSource",
    value: function createMediaStreamSource(_stream) {
      return {};
    }
  }, {
    key: "createMediaElementSource",
    value: function createMediaElementSource(_element) {
      return {};
    }
  }, {
    key: "createMediaStreamDestination",
    value: function createMediaStreamDestination() {
      return {};
    }
  }, {
    key: "decodeAudioData",
    value: function decodeAudioData(_audioData) {
      return Promise.resolve({});
    } //---------------------------
    // TONE AUDIO CONTEXT METHODS
    //---------------------------

  }, {
    key: "createAudioWorkletNode",
    value: function createAudioWorkletNode(_name, _options) {
      return {};
    }
  }, {
    key: "rawContext",
    get: function get() {
      return {};
    }
  }, {
    key: "addAudioWorkletModule",
    value: function addAudioWorkletModule(_url, _name) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Promise.resolve());

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
    }
  }, {
    key: "resume",
    value: function resume() {
      return Promise.resolve();
    }
  }, {
    key: "setTimeout",
    value: function setTimeout(_fn, _timeout) {
      return 0;
    }
  }, {
    key: "clearTimeout",
    value: function clearTimeout(_id) {
      return this;
    }
  }, {
    key: "setInterval",
    value: function setInterval(_fn, _interval) {
      return 0;
    }
  }, {
    key: "clearInterval",
    value: function clearInterval(_id) {
      return this;
    }
  }, {
    key: "getConstant",
    value: function getConstant(_val) {
      return {};
    }
  }, {
    key: "currentTime",
    get: function get() {
      return 0;
    }
  }, {
    key: "state",
    get: function get() {
      return {};
    }
  }, {
    key: "sampleRate",
    get: function get() {
      return 0;
    }
  }, {
    key: "listener",
    get: function get() {
      return {};
    }
  }, {
    key: "transport",
    get: function get() {
      return {};
    }
  }, {
    key: "draw",
    get: function get() {
      return {};
    },
    set: function set(_d) {}
  }, {
    key: "destination",
    get: function get() {
      return {};
    },
    set: function set(_d) {}
  }, {
    key: "now",
    value: function now() {
      return 0;
    }
  }, {
    key: "immediate",
    value: function immediate() {
      return 0;
    }
  }]);

  return DummyContext;
}(_BaseContext__WEBPACK_IMPORTED_MODULE_2__["BaseContext"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Gain.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Gain.js ***!
  \**********************************************************/
/*! exports provided: Gain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Gain", function() { return Gain; });
/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * A thin wrapper around the Native Web Audio GainNode.
 * The GainNode is a basic building block of the Web Audio
 * API and is useful for routing audio and adjusting gains.
 * @category Core
 * @example
 * return Tone.Offline(() => {
 * 	const gainNode = new Tone.Gain(0).toDestination();
 * 	const osc = new Tone.Oscillator(30).connect(gainNode).start();
 * 	gainNode.gain.rampTo(1, 0.1);
 * 	gainNode.gain.rampTo(0, 0.4, 0.2);
 * }, 0.7, 1);
 */

var Gain = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Gain, _ToneAudioNode);

  var _super = _createSuper(Gain);

  function Gain() {
    var _this;

    _classCallCheck(this, Gain);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Gain.getDefaults(), arguments, ["gain", "units"]));
    _this.name = "Gain";
    /**
     * The wrapped GainNode.
     */

    _this._gainNode = _this.context.createGain(); // input = output

    _this.input = _this._gainNode;
    _this.output = _this._gainNode;
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Gain.getDefaults(), arguments, ["gain", "units"]);
    _this.gain = new _context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
      context: _this.context,
      convert: options.convert,
      param: _this._gainNode.gain,
      units: options.units,
      value: options.gain,
      minValue: options.minValue,
      maxValue: options.maxValue
    });
    Object(_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this), "gain");
    return _this;
  }

  _createClass(Gain, [{
    key: "dispose",
    value:
    /**
     * Clean up.
     */
    function dispose() {
      _get(_getPrototypeOf(Gain.prototype), "dispose", this).call(this);

      this._gainNode.disconnect();

      this.gain.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults(), {
        convert: true,
        gain: 1,
        units: "gain"
      });
    }
  }]);

  return Gain;
}(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Listener.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Listener.js ***!
  \**************************************************************/
/*! exports provided: Listener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Listener", function() { return Listener; });
/* harmony import */ var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Tone.Listener is a thin wrapper around the AudioListener. Listener combined
 * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you
 * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from
 * a first-person perspective. There is only one listener per audio context.
 */

var Listener = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Listener, _ToneAudioNode);

  var _super = _createSuper(Listener);

  function Listener() {
    var _this;

    _classCallCheck(this, Listener);

    _this = _super.apply(this, arguments);
    _this.name = "Listener";
    _this.positionX = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.positionX
    });
    _this.positionY = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.positionY
    });
    _this.positionZ = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.positionZ
    });
    _this.forwardX = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.forwardX
    });
    _this.forwardY = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.forwardY
    });
    _this.forwardZ = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.forwardZ
    });
    _this.upX = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.upX
    });
    _this.upY = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.upY
    });
    _this.upZ = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this.context.rawContext.listener.upZ
    });
    return _this;
  }

  _createClass(Listener, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Listener.prototype), "dispose", this).call(this);

      this.positionX.dispose();
      this.positionY.dispose();
      this.positionZ.dispose();
      this.forwardX.dispose();
      this.forwardY.dispose();
      this.forwardZ.dispose();
      this.upX.dispose();
      this.upY.dispose();
      this.upZ.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        positionX: 0,
        positionY: 0,
        positionZ: 0,
        forwardX: 0,
        forwardY: 0,
        forwardZ: -1,
        upX: 0,
        upY: 1,
        upZ: 0
      });
    }
  }]);

  return Listener;
}(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //-------------------------------------
// 	INITIALIZATION
//-------------------------------------

Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
  context.listener = new Listener({
    context: context
  });
});
Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
  context.listener.dispose();
});

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Offline.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Offline.js ***!
  \*************************************************************/
/*! exports provided: Offline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Offline", function() { return Offline; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _OfflineContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");





/**
 * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.
 * The OfflineAudioContext is capable of rendering much faster than real time in many cases.
 * The callback function also passes in an offline instance of [[Context]] which can be used
 * to schedule events along the Transport.
 * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.
 * @param  duration     the amount of time to record for.
 * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.
 * @example
 * // render 2 seconds of the oscillator
 * Tone.Offline(() => {
 * 	// only nodes created in this callback will be recorded
 * 	const oscillator = new Tone.Oscillator().toDestination().start(0);
 * }, 2).then((buffer) => {
 * 	// do something with the output buffer
 * 	console.log(buffer);
 * });
 * @example
 * // can also schedule events along the Transport
 * // using the passed in Offline Transport
 * Tone.Offline(({ transport }) => {
 * 	const osc = new Tone.Oscillator().toDestination();
 * 	transport.schedule(time => {
 * 		osc.start(time).stop(time + 0.1);
 * 	}, 1);
 * 	// make sure to start the transport
 * 	transport.start(0.2);
 * }, 4).then((buffer) => {
 * 	// do something with the output buffer
 * 	console.log(buffer);
 * });
 * @category Core
 */

function Offline(callback, duration) {
  var channels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;
  var sampleRate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Object(_Global__WEBPACK_IMPORTED_MODULE_2__["getContext"])().sampleRate;
  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
    var originalContext, context, bufferPromise, buffer;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // set the OfflineAudioContext based on the current context
            originalContext = Object(_Global__WEBPACK_IMPORTED_MODULE_2__["getContext"])();
            context = new _OfflineContext__WEBPACK_IMPORTED_MODULE_3__["OfflineContext"](channels, duration, sampleRate);
            Object(_Global__WEBPACK_IMPORTED_MODULE_2__["setContext"])(context); // invoke the callback/scheduling

            _context.next = 5;
            return callback(context);

          case 5:
            // then render the audio
            bufferPromise = context.render(); // return the original AudioContext

            Object(_Global__WEBPACK_IMPORTED_MODULE_2__["setContext"])(originalContext); // await the rendering

            _context.next = 9;
            return bufferPromise;

          case 9:
            buffer = _context.sent;
            return _context.abrupt("return", new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__["ToneAudioBuffer"](buffer));

          case 11:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/OfflineContext.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/OfflineContext.js ***!
  \********************************************************************/
/*! exports provided: OfflineContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OfflineContext", function() { return OfflineContext; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _context_AudioContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony import */ var _context_Context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/Context */ "./node_modules/tone/build/esm/core/context/Context.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Wrapper around the OfflineAudioContext
 * @category Core
 * @example
 * // generate a single channel, 0.5 second buffer
 * const context = new Tone.OfflineContext(1, 0.5, 44100);
 * const osc = new Tone.Oscillator({ context });
 * context.render().then(buffer => {
 * 	console.log(buffer.numberOfChannels, buffer.duration);
 * });
 */

var OfflineContext = /*#__PURE__*/function (_Context) {
  _inherits(OfflineContext, _Context);

  var _super = _createSuper(OfflineContext);

  function OfflineContext() {
    var _this;

    _classCallCheck(this, OfflineContext);

    _this = _super.call(this, {
      clockSource: "offline",
      context: Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_4__["isOfflineAudioContext"])(arguments[0]) ? arguments[0] : Object(_context_AudioContext__WEBPACK_IMPORTED_MODULE_2__["createOfflineAudioContext"])(arguments[0], arguments[1] * arguments[2], arguments[2]),
      lookAhead: 0,
      updateInterval: Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_4__["isOfflineAudioContext"])(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]
    });
    _this.name = "OfflineContext";
    /**
     * An artificial clock source
     */

    _this._currentTime = 0;
    _this.isOffline = true;
    _this._duration = Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_4__["isOfflineAudioContext"])(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];
    return _this;
  }
  /**
   * Override the now method to point to the internal clock time
   */


  _createClass(OfflineContext, [{
    key: "now",
    value: function now() {
      return this._currentTime;
    }
    /**
     * Same as this.now()
     */

  }, {
    key: "currentTime",
    get: function get() {
      return this._currentTime;
    }
    /**
     * Render just the clock portion of the audio context.
     */

  }, {
    key: "_renderClock",
    value: function _renderClock(asynchronous) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var index, yieldEvery;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                index = 0;

              case 1:
                if (!(this._duration - this._currentTime >= 0)) {
                  _context.next = 11;
                  break;
                }

                // invoke all the callbacks on that time
                this.emit("tick"); // increment the clock in block-sized chunks

                this._currentTime += 128 / this.sampleRate; // yield once a second of audio

                index++;
                yieldEvery = Math.floor(this.sampleRate / 128);

                if (!(asynchronous && index % yieldEvery === 0)) {
                  _context.next = 9;
                  break;
                }

                _context.next = 9;
                return new Promise(function (done) {
                  return setTimeout(done, 1);
                });

              case 9:
                _context.next = 1;
                break;

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Render the output of the OfflineContext
     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.
     */

  }, {
    key: "render",
    value: function render() {
      var asynchronous = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var buffer;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.workletsAreReady();

              case 2:
                _context2.next = 4;
                return this._renderClock(asynchronous);

              case 4:
                _context2.next = 6;
                return this._context.startRendering();

              case 6:
                buffer = _context2.sent;
                return _context2.abrupt("return", new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_5__["ToneAudioBuffer"](buffer));

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
    }
    /**
     * Close the context
     */

  }, {
    key: "close",
    value: function close() {
      return Promise.resolve();
    }
  }]);

  return OfflineContext;
}(_context_Context__WEBPACK_IMPORTED_MODULE_3__["Context"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/Param.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/Param.js ***!
  \***********************************************************/
/*! exports provided: Param */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Param", function() { return Param; });
/* harmony import */ var _type_Conversions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _ToneWithContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * Param wraps the native Web Audio's AudioParam to provide
 * additional unit conversion functionality. It also
 * serves as a base-class for classes which have a single,
 * automatable parameter.
 * @category Core
 */

var Param = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(Param, _ToneWithContext);

  var _super = _createSuper(Param);

  function Param() {
    var _this;

    _classCallCheck(this, Param);

    _this = _super.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Param.getDefaults(), arguments, ["param", "units", "convert"]));
    _this.name = "Param";
    _this.overridden = false;
    /**
     * The minimum output value
     */

    _this._minOutput = 1e-7;
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Param.getDefaults(), arguments, ["param", "units", "convert"]);
    Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(options.param) && (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__["isAudioParam"])(options.param) || options.param instanceof Param), "param must be an AudioParam");

    while (!Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__["isAudioParam"])(options.param)) {
      options.param = options.param._param;
    }

    _this._swappable = Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(options.swappable) ? options.swappable : false;

    if (_this._swappable) {
      _this.input = _this.context.createGain(); // initialize

      _this._param = options.param;

      _this.input.connect(_this._param);
    } else {
      _this._param = _this.input = options.param;
    }

    _this._events = new _util_Timeline__WEBPACK_IMPORTED_MODULE_3__["Timeline"](1000);
    _this._initialValue = _this._param.defaultValue;
    _this.units = options.units;
    _this.convert = options.convert;
    _this._minValue = options.minValue;
    _this._maxValue = options.maxValue; // if the value is defined, set it immediately

    if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(options.value) && options.value !== _this._toType(_this._initialValue)) {
      _this.setValueAtTime(options.value, 0);
    }

    return _this;
  }

  _createClass(Param, [{
    key: "value",
    get: function get() {
      var now = this.now();
      return this.getValueAtTime(now);
    },
    set: function set(value) {
      this.cancelScheduledValues(this.now());
      this.setValueAtTime(value, this.now());
    }
  }, {
    key: "minValue",
    get: function get() {
      // if it's not the default minValue, return it
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this._minValue)) {
        return this._minValue;
      } else if (this.units === "time" || this.units === "frequency" || this.units === "normalRange" || this.units === "positive" || this.units === "transportTime" || this.units === "ticks" || this.units === "bpm" || this.units === "hertz" || this.units === "samples") {
        return 0;
      } else if (this.units === "audioRange") {
        return -1;
      } else if (this.units === "decibels") {
        return -Infinity;
      } else {
        return this._param.minValue;
      }
    }
  }, {
    key: "maxValue",
    get: function get() {
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this._maxValue)) {
        return this._maxValue;
      } else if (this.units === "normalRange" || this.units === "audioRange") {
        return 1;
      } else {
        return this._param.maxValue;
      }
    }
    /**
     * Type guard based on the unit name
     */

  }, {
    key: "_is",
    value: function _is(arg, type) {
      return this.units === type;
    }
    /**
     * Make sure the value is always in the defined range
     */

  }, {
    key: "_assertRange",
    value: function _assertRange(value) {
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this.maxValue) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this.minValue)) {
        Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(value, this._fromType(this.minValue), this._fromType(this.maxValue));
      }

      return value;
    }
    /**
     * Convert the given value from the type specified by Param.units
     * into the destination value (such as Gain or Frequency).
     */

  }, {
    key: "_fromType",
    value: function _fromType(val) {
      if (this.convert && !this.overridden) {
        if (this._is(val, "time")) {
          return this.toSeconds(val);
        } else if (this._is(val, "decibels")) {
          return Object(_type_Conversions__WEBPACK_IMPORTED_MODULE_0__["dbToGain"])(val);
        } else if (this._is(val, "frequency")) {
          return this.toFrequency(val);
        } else {
          return val;
        }
      } else if (this.overridden) {
        // if it's overridden, should only schedule 0s
        return 0;
      } else {
        return val;
      }
    }
    /**
     * Convert the parameters value into the units specified by Param.units.
     */

  }, {
    key: "_toType",
    value: function _toType(val) {
      if (this.convert && this.units === "decibels") {
        return Object(_type_Conversions__WEBPACK_IMPORTED_MODULE_0__["gainToDb"])(val);
      } else {
        return val;
      }
    } //-------------------------------------
    // ABSTRACT PARAM INTERFACE
    // all docs are generated from ParamInterface.ts
    //-------------------------------------

  }, {
    key: "setValueAtTime",
    value: function setValueAtTime(value, time) {
      var computedTime = this.toSeconds(time);

      var numericValue = this._fromType(value);

      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to setValueAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(time)));

      this._assertRange(numericValue);

      this.log(this.units, "setValueAtTime", value, computedTime);

      this._events.add({
        time: computedTime,
        type: "setValueAtTime",
        value: numericValue
      });

      this._param.setValueAtTime(numericValue, computedTime);

      return this;
    }
  }, {
    key: "getValueAtTime",
    value: function getValueAtTime(time) {
      var computedTime = Math.max(this.toSeconds(time), 0);

      var after = this._events.getAfter(computedTime);

      var before = this._events.get(computedTime);

      var value = this._initialValue; // if it was set by

      if (before === null) {
        value = this._initialValue;
      } else if (before.type === "setTargetAtTime" && (after === null || after.type === "setValueAtTime")) {
        var previous = this._events.getBefore(before.time);

        var previousVal;

        if (previous === null) {
          previousVal = this._initialValue;
        } else {
          previousVal = previous.value;
        }

        if (before.type === "setTargetAtTime") {
          value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);
        }
      } else if (after === null) {
        value = before.value;
      } else if (after.type === "linearRampToValueAtTime" || after.type === "exponentialRampToValueAtTime") {
        var beforeValue = before.value;

        if (before.type === "setTargetAtTime") {
          var _previous = this._events.getBefore(before.time);

          if (_previous === null) {
            beforeValue = this._initialValue;
          } else {
            beforeValue = _previous.value;
          }
        }

        if (after.type === "linearRampToValueAtTime") {
          value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
        } else {
          value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
        }
      } else {
        value = before.value;
      }

      return this._toType(value);
    }
  }, {
    key: "setRampPoint",
    value: function setRampPoint(time) {
      time = this.toSeconds(time);
      var currentVal = this.getValueAtTime(time);
      this.cancelAndHoldAtTime(time);

      if (this._fromType(currentVal) === 0) {
        currentVal = this._toType(this._minOutput);
      }

      this.setValueAtTime(currentVal, time);
      return this;
    }
  }, {
    key: "linearRampToValueAtTime",
    value: function linearRampToValueAtTime(value, endTime) {
      var numericValue = this._fromType(value);

      var computedTime = this.toSeconds(endTime);
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to linearRampToValueAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(endTime)));

      this._assertRange(numericValue);

      this._events.add({
        time: computedTime,
        type: "linearRampToValueAtTime",
        value: numericValue
      });

      this.log(this.units, "linearRampToValueAtTime", value, computedTime);

      this._param.linearRampToValueAtTime(numericValue, computedTime);

      return this;
    }
  }, {
    key: "exponentialRampToValueAtTime",
    value: function exponentialRampToValueAtTime(value, endTime) {
      var numericValue = this._fromType(value); // the value can't be 0


      numericValue = Object(_util_Math__WEBPACK_IMPORTED_MODULE_6__["EQ"])(numericValue, 0) ? this._minOutput : numericValue;

      this._assertRange(numericValue);

      var computedTime = this.toSeconds(endTime);
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to exponentialRampToValueAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(endTime))); // store the event

      this._events.add({
        time: computedTime,
        type: "exponentialRampToValueAtTime",
        value: numericValue
      });

      this.log(this.units, "exponentialRampToValueAtTime", value, computedTime);

      this._param.exponentialRampToValueAtTime(numericValue, computedTime);

      return this;
    }
  }, {
    key: "exponentialRampTo",
    value: function exponentialRampTo(value, rampTime, startTime) {
      startTime = this.toSeconds(startTime);
      this.setRampPoint(startTime);
      this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
      return this;
    }
  }, {
    key: "linearRampTo",
    value: function linearRampTo(value, rampTime, startTime) {
      startTime = this.toSeconds(startTime);
      this.setRampPoint(startTime);
      this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
      return this;
    }
  }, {
    key: "targetRampTo",
    value: function targetRampTo(value, rampTime, startTime) {
      startTime = this.toSeconds(startTime);
      this.setRampPoint(startTime);
      this.exponentialApproachValueAtTime(value, startTime, rampTime);
      return this;
    }
  }, {
    key: "exponentialApproachValueAtTime",
    value: function exponentialApproachValueAtTime(value, time, rampTime) {
      time = this.toSeconds(time);
      rampTime = this.toSeconds(rampTime);
      var timeConstant = Math.log(rampTime + 1) / Math.log(200);
      this.setTargetAtTime(value, time, timeConstant); // at 90% start a linear ramp to the final value

      this.cancelAndHoldAtTime(time + rampTime * 0.9);
      this.linearRampToValueAtTime(value, time + rampTime);
      return this;
    }
  }, {
    key: "setTargetAtTime",
    value: function setTargetAtTime(value, startTime, timeConstant) {
      var numericValue = this._fromType(value); // The value will never be able to approach without timeConstant > 0.


      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(timeConstant) && timeConstant > 0, "timeConstant must be a number greater than 0");
      var computedTime = this.toSeconds(startTime);

      this._assertRange(numericValue);

      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to setTargetAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(startTime)));

      this._events.add({
        constant: timeConstant,
        time: computedTime,
        type: "setTargetAtTime",
        value: numericValue
      });

      this.log(this.units, "setTargetAtTime", value, computedTime, timeConstant);

      this._param.setTargetAtTime(numericValue, computedTime, timeConstant);

      return this;
    }
  }, {
    key: "setValueCurveAtTime",
    value: function setValueCurveAtTime(values, startTime, duration) {
      var scaling = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
      duration = this.toSeconds(duration);
      startTime = this.toSeconds(startTime);
      var startingValue = this._fromType(values[0]) * scaling;
      this.setValueAtTime(this._toType(startingValue), startTime);
      var segTime = duration / (values.length - 1);

      for (var i = 1; i < values.length; i++) {
        var numericValue = this._fromType(values[i]) * scaling;
        this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);
      }

      return this;
    }
  }, {
    key: "cancelScheduledValues",
    value: function cancelScheduledValues(time) {
      var computedTime = this.toSeconds(time);
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(computedTime), "Invalid argument to cancelScheduledValues: ".concat(JSON.stringify(time)));

      this._events.cancel(computedTime);

      this._param.cancelScheduledValues(computedTime);

      this.log(this.units, "cancelScheduledValues", computedTime);
      return this;
    }
  }, {
    key: "cancelAndHoldAtTime",
    value: function cancelAndHoldAtTime(time) {
      var computedTime = this.toSeconds(time);

      var valueAtTime = this._fromType(this.getValueAtTime(computedTime)); // remove the schedule events


      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(computedTime), "Invalid argument to cancelAndHoldAtTime: ".concat(JSON.stringify(time)));
      this.log(this.units, "cancelAndHoldAtTime", computedTime, "value=" + valueAtTime); // if there is an event at the given computedTime
      // and that even is not a "set"

      var before = this._events.get(computedTime);

      var after = this._events.getAfter(computedTime);

      if (before && Object(_util_Math__WEBPACK_IMPORTED_MODULE_6__["EQ"])(before.time, computedTime)) {
        // remove everything after
        if (after) {
          this._param.cancelScheduledValues(after.time);

          this._events.cancel(after.time);
        } else {
          this._param.cancelAndHoldAtTime(computedTime);

          this._events.cancel(computedTime + this.sampleTime);
        }
      } else if (after) {
        this._param.cancelScheduledValues(after.time); // cancel the next event(s)


        this._events.cancel(after.time);

        if (after.type === "linearRampToValueAtTime") {
          this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);
        } else if (after.type === "exponentialRampToValueAtTime") {
          this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);
        }
      } // set the value at the given time


      this._events.add({
        time: computedTime,
        type: "setValueAtTime",
        value: valueAtTime
      });

      this._param.setValueAtTime(valueAtTime, computedTime);

      return this;
    }
  }, {
    key: "rampTo",
    value: function rampTo(value) {
      var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.1;
      var startTime = arguments.length > 2 ? arguments[2] : undefined;

      if (this.units === "frequency" || this.units === "bpm" || this.units === "decibels") {
        this.exponentialRampTo(value, rampTime, startTime);
      } else {
        this.linearRampTo(value, rampTime, startTime);
      }

      return this;
    }
    /**
     * Apply all of the previously scheduled events to the passed in Param or AudioParam.
     * The applied values will start at the context's current time and schedule
     * all of the events which are scheduled on this Param onto the passed in param.
     */

  }, {
    key: "apply",
    value: function apply(param) {
      var now = this.context.currentTime; // set the param's value at the current time and schedule everything else

      param.setValueAtTime(this.getValueAtTime(now), now); // if the previous event was a curve, then set the rest of it

      var previousEvent = this._events.get(now);

      if (previousEvent && previousEvent.type === "setTargetAtTime") {
        // approx it until the next event with linear ramps
        var nextEvent = this._events.getAfter(previousEvent.time); // or for 2 seconds if there is no event


        var endTime = nextEvent ? nextEvent.time : now + 2;
        var subdivisions = (endTime - now) / 10;

        for (var i = now; i < endTime; i += subdivisions) {
          param.linearRampToValueAtTime(this.getValueAtTime(i), i);
        }
      }

      this._events.forEachAfter(this.context.currentTime, function (event) {
        if (event.type === "cancelScheduledValues") {
          param.cancelScheduledValues(event.time);
        } else if (event.type === "setTargetAtTime") {
          param.setTargetAtTime(event.value, event.time, event.constant);
        } else {
          param[event.type](event.value, event.time);
        }
      });

      return this;
    }
    /**
     * Replace the Param's internal AudioParam. Will apply scheduled curves
     * onto the parameter and replace the connections.
     */

  }, {
    key: "setParam",
    value: function setParam(param) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(this._swappable, "The Param must be assigned as 'swappable' in the constructor");
      var input = this.input;
      input.disconnect(this._param);
      this.apply(param);
      this._param = param;
      input.connect(this._param);
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Param.prototype), "dispose", this).call(this);

      this._events.dispose();

      return this;
    }
  }, {
    key: "defaultValue",
    get: function get() {
      return this._toType(this._param.defaultValue);
    } //-------------------------------------
    // 	AUTOMATION CURVE CALCULATIONS
    // 	MIT License, copyright (c) 2014 Jordan Santell
    //-------------------------------------
    // Calculates the the value along the curve produced by setTargetAtTime

  }, {
    key: "_exponentialApproach",
    value: function _exponentialApproach(t0, v0, v1, timeConstant, t) {
      return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);
    } // Calculates the the value along the curve produced by linearRampToValueAtTime

  }, {
    key: "_linearInterpolate",
    value: function _linearInterpolate(t0, v0, t1, v1, t) {
      return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));
    } // Calculates the the value along the curve produced by exponentialRampToValueAtTime

  }, {
    key: "_exponentialInterpolate",
    value: function _exponentialInterpolate(t0, v0, t1, v1, t) {
      return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_ToneWithContext__WEBPACK_IMPORTED_MODULE_5__["ToneWithContext"].getDefaults(), {
        convert: true,
        units: "number"
      });
    }
  }]);

  return Param;
}(_ToneWithContext__WEBPACK_IMPORTED_MODULE_5__["ToneWithContext"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js ***!
  \*********************************************************************/
/*! exports provided: ToneAudioBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function() { return ToneAudioBuffer; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all
 * classes that make requests for audio files such as Tone.Player,
 * Tone.Sampler and Tone.Convolver.
 * @example
 * const buffer = new Tone.ToneAudioBuffer("https://tonejs.github.io/audio/casio/A1.mp3", () => {
 * 	console.log("loaded");
 * });
 * @category Core
 */

var ToneAudioBuffer = /*#__PURE__*/function (_Tone) {
  _inherits(ToneAudioBuffer, _Tone);

  var _super = _createSuper(ToneAudioBuffer);

  function ToneAudioBuffer() {
    var _this;

    _classCallCheck(this, ToneAudioBuffer);

    _this = _super.call(this);
    _this.name = "ToneAudioBuffer";
    /**
     * Callback when the buffer is loaded.
     */

    _this.onload = _util_Interface__WEBPACK_IMPORTED_MODULE_6__["noOp"];
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["optionsFromArguments"])(ToneAudioBuffer.getDefaults(), arguments, ["url", "onload", "onerror"]);
    _this.reverse = options.reverse;
    _this.onload = options.onload;

    if (options.url && Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_4__["isAudioBuffer"])(options.url) || options.url instanceof ToneAudioBuffer) {
      _this.set(options.url);
    } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isString"])(options.url)) {
      // initiate the download
      _this.load(options.url).catch(options.onerror);
    }

    return _this;
  }

  _createClass(ToneAudioBuffer, [{
    key: "sampleRate",
    get:
    /**
     * The sample rate of the AudioBuffer
     */
    function get() {
      if (this._buffer) {
        return this._buffer.sampleRate;
      } else {
        return Object(_Global__WEBPACK_IMPORTED_MODULE_2__["getContext"])().sampleRate;
      }
    }
    /**
     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.
     */

  }, {
    key: "set",
    value: function set(buffer) {
      var _this2 = this;

      if (buffer instanceof ToneAudioBuffer) {
        // if it's loaded, set it
        if (buffer.loaded) {
          this._buffer = buffer.get();
        } else {
          // otherwise when it's loaded, invoke it's callback
          buffer.onload = function () {
            _this2.set(buffer);

            _this2.onload(_this2);
          };
        }
      } else {
        this._buffer = buffer;
      } // reverse it initially


      if (this._reversed) {
        this._reverse();
      }

      return this;
    }
    /**
     * The audio buffer stored in the object.
     */

  }, {
    key: "get",
    value: function get() {
      return this._buffer;
    }
    /**
     * Makes an fetch request for the selected url then decodes the file as an audio buffer.
     * Invokes the callback once the audio buffer loads.
     * @param url The url of the buffer to load. filetype support depends on the browser.
     * @returns A Promise which resolves with this ToneAudioBuffer
     */

  }, {
    key: "load",
    value: function load(url) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var _this3 = this;

        var doneLoading, index;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                doneLoading = ToneAudioBuffer.load(url).then(function (audioBuffer) {
                  _this3.set(audioBuffer); // invoke the onload method


                  _this3.onload(_this3);
                });
                ToneAudioBuffer.downloads.push(doneLoading);
                _context.prev = 2;
                _context.next = 5;
                return doneLoading;

              case 5:
                _context.prev = 5;
                // remove the downloaded file
                index = ToneAudioBuffer.downloads.indexOf(doneLoading);
                ToneAudioBuffer.downloads.splice(index, 1);
                return _context.finish(5);

              case 9:
                return _context.abrupt("return", this);

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[2,, 5, 9]]);
      }));
    }
    /**
     * clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneAudioBuffer.prototype), "dispose", this).call(this);

      this._buffer = undefined;
      return this;
    }
    /**
     * Set the audio buffer from the array.
     * To create a multichannel AudioBuffer, pass in a multidimensional array.
     * @param array The array to fill the audio buffer
     */

  }, {
    key: "fromArray",
    value: function fromArray(array) {
      var isMultidimensional = Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isArray"])(array) && array[0].length > 0;
      var channels = isMultidimensional ? array.length : 1;
      var len = isMultidimensional ? array[0].length : array.length;
      var context = Object(_Global__WEBPACK_IMPORTED_MODULE_2__["getContext"])();
      var buffer = context.createBuffer(channels, len, context.sampleRate);
      var multiChannelArray = !isMultidimensional && channels === 1 ? [array] : array;

      for (var c = 0; c < channels; c++) {
        buffer.copyToChannel(multiChannelArray[c], c);
      }

      this._buffer = buffer;
      return this;
    }
    /**
     * Sums multiple channels into 1 channel
     * @param chanNum Optionally only copy a single channel from the array.
     */

  }, {
    key: "toMono",
    value: function toMono(chanNum) {
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isNumber"])(chanNum)) {
        this.fromArray(this.toArray(chanNum));
      } else {
        var outputArray = new Float32Array(this.length);
        var numChannels = this.numberOfChannels;

        for (var channel = 0; channel < numChannels; channel++) {
          var channelArray = this.toArray(channel);

          for (var i = 0; i < channelArray.length; i++) {
            outputArray[i] += channelArray[i];
          }
        } // divide by the number of channels


        outputArray = outputArray.map(function (sample) {
          return sample / numChannels;
        });
        this.fromArray(outputArray);
      }

      return this;
    }
    /**
     * Get the buffer as an array. Single channel buffers will return a 1-dimensional
     * Float32Array, and multichannel buffers will return multidimensional arrays.
     * @param channel Optionally only copy a single channel from the array.
     */

  }, {
    key: "toArray",
    value: function toArray(channel) {
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isNumber"])(channel)) {
        return this.getChannelData(channel);
      } else if (this.numberOfChannels === 1) {
        return this.toArray(0);
      } else {
        var ret = [];

        for (var c = 0; c < this.numberOfChannels; c++) {
          ret[c] = this.getChannelData(c);
        }

        return ret;
      }
    }
    /**
     * Returns the Float32Array representing the PCM audio data for the specific channel.
     * @param  channel  The channel number to return
     * @return The audio as a TypedArray
     */

  }, {
    key: "getChannelData",
    value: function getChannelData(channel) {
      if (this._buffer) {
        return this._buffer.getChannelData(channel);
      } else {
        return new Float32Array(0);
      }
    }
    /**
     * Cut a subsection of the array and return a buffer of the
     * subsection. Does not modify the original buffer
     * @param start The time to start the slice
     * @param end The end time to slice. If none is given will default to the end of the buffer
     */

  }, {
    key: "slice",
    value: function slice(start) {
      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.duration;
      var startSamples = Math.floor(start * this.sampleRate);
      var endSamples = Math.floor(end * this.sampleRate);
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assert"])(startSamples < endSamples, "The start time must be less than the end time");
      var length = endSamples - startSamples;
      var retBuffer = Object(_Global__WEBPACK_IMPORTED_MODULE_2__["getContext"])().createBuffer(this.numberOfChannels, length, this.sampleRate);

      for (var channel = 0; channel < this.numberOfChannels; channel++) {
        retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);
      }

      return new ToneAudioBuffer(retBuffer);
    }
    /**
     * Reverse the buffer.
     */

  }, {
    key: "_reverse",
    value: function _reverse() {
      if (this.loaded) {
        for (var i = 0; i < this.numberOfChannels; i++) {
          this.getChannelData(i).reverse();
        }
      }

      return this;
    }
    /**
     * If the buffer is loaded or not
     */

  }, {
    key: "loaded",
    get: function get() {
      return this.length > 0;
    }
    /**
     * The duration of the buffer in seconds.
     */

  }, {
    key: "duration",
    get: function get() {
      if (this._buffer) {
        return this._buffer.duration;
      } else {
        return 0;
      }
    }
    /**
     * The length of the buffer in samples
     */

  }, {
    key: "length",
    get: function get() {
      if (this._buffer) {
        return this._buffer.length;
      } else {
        return 0;
      }
    }
    /**
     * The number of discrete audio channels. Returns 0 if no buffer is loaded.
     */

  }, {
    key: "numberOfChannels",
    get: function get() {
      if (this._buffer) {
        return this._buffer.numberOfChannels;
      } else {
        return 0;
      }
    }
    /**
     * Reverse the buffer.
     */

  }, {
    key: "reverse",
    get: function get() {
      return this._reversed;
    },
    set: function set(rev) {
      if (this._reversed !== rev) {
        this._reversed = rev;

        this._reverse();
      }
    }
    /**
     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,
     * pass in a multidimensional array.
     * @param array The array to fill the audio buffer
     * @return A ToneAudioBuffer created from the array
     */

  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return {
        onerror: _util_Interface__WEBPACK_IMPORTED_MODULE_6__["noOp"],
        onload: _util_Interface__WEBPACK_IMPORTED_MODULE_6__["noOp"],
        reverse: false
      };
    }
  }, {
    key: "fromArray",
    value: function fromArray(array) {
      return new ToneAudioBuffer().fromArray(array);
    }
    /**
     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer
     * @param  url The url to load.
     * @return A promise which resolves to a ToneAudioBuffer
     */

  }, {
    key: "fromUrl",
    value: function fromUrl(url) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var buffer;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                buffer = new ToneAudioBuffer();
                _context2.next = 3;
                return buffer.load(url);

              case 3:
                return _context2.abrupt("return", _context2.sent);

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
    }
    /**
     * Loads a url using fetch and returns the AudioBuffer.
     */

  }, {
    key: "load",
    value: function load(url) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
        var matches, extensions, extension, _iterator, _step, ext, baseUrl, response, arrayBuffer, audioBuffer;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                // test if the url contains multiple extensions
                matches = url.match(/\[([^\]\[]+\|.+)\]$/);

                if (!matches) {
                  _context3.next = 23;
                  break;
                }

                extensions = matches[1].split("|");
                extension = extensions[0];
                _iterator = _createForOfIteratorHelper(extensions);
                _context3.prev = 5;

                _iterator.s();

              case 7:
                if ((_step = _iterator.n()).done) {
                  _context3.next = 14;
                  break;
                }

                ext = _step.value;

                if (!ToneAudioBuffer.supportsType(ext)) {
                  _context3.next = 12;
                  break;
                }

                extension = ext;
                return _context3.abrupt("break", 14);

              case 12:
                _context3.next = 7;
                break;

              case 14:
                _context3.next = 19;
                break;

              case 16:
                _context3.prev = 16;
                _context3.t0 = _context3["catch"](5);

                _iterator.e(_context3.t0);

              case 19:
                _context3.prev = 19;

                _iterator.f();

                return _context3.finish(19);

              case 22:
                url = url.replace(matches[0], extension);

              case 23:
                // make sure there is a slash between the baseUrl and the url
                baseUrl = ToneAudioBuffer.baseUrl === "" || ToneAudioBuffer.baseUrl.endsWith("/") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + "/";
                _context3.next = 26;
                return fetch(baseUrl + url);

              case 26:
                response = _context3.sent;

                if (response.ok) {
                  _context3.next = 29;
                  break;
                }

                throw new Error("could not load url: ".concat(url));

              case 29:
                _context3.next = 31;
                return response.arrayBuffer();

              case 31:
                arrayBuffer = _context3.sent;
                _context3.next = 34;
                return Object(_Global__WEBPACK_IMPORTED_MODULE_2__["getContext"])().decodeAudioData(arrayBuffer);

              case 34:
                audioBuffer = _context3.sent;
                return _context3.abrupt("return", audioBuffer);

              case 36:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, null, [[5, 16, 19, 22]]);
      }));
    }
    /**
     * Checks a url's extension to see if the current browser can play that file type.
     * @param url The url/extension to test
     * @return If the file extension can be played
     * @static
     * @example
     * Tone.ToneAudioBuffer.supportsType("wav"); // returns true
     * Tone.ToneAudioBuffer.supportsType("path/to/file.wav"); // returns true
     */

  }, {
    key: "supportsType",
    value: function supportsType(url) {
      var extensions = url.split(".");
      var extension = extensions[extensions.length - 1];
      var response = document.createElement("audio").canPlayType("audio/" + extension);
      return response !== "";
    }
    /**
     * Returns a Promise which resolves when all of the buffers have loaded
     */

  }, {
    key: "loaded",
    value: function loaded() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return Promise.resolve();

              case 2:
                if (!ToneAudioBuffer.downloads.length) {
                  _context4.next = 7;
                  break;
                }

                _context4.next = 5;
                return ToneAudioBuffer.downloads[0];

              case 5:
                _context4.next = 2;
                break;

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));
    }
  }]);

  return ToneAudioBuffer;
}(_Tone__WEBPACK_IMPORTED_MODULE_3__["Tone"]); //-------------------------------------
// STATIC METHODS
//-------------------------------------

/**
 * A path which is prefixed before every url.
 */

ToneAudioBuffer.baseUrl = "";
/**
 * All of the downloads
 */

ToneAudioBuffer.downloads = [];

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js ***!
  \**********************************************************************/
/*! exports provided: ToneAudioBuffers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function() { return ToneAudioBuffers; });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * A data structure for holding multiple buffers in a Map-like datastructure.
 *
 * @example
 * const pianoSamples = new Tone.ToneAudioBuffers({
 * 	A1: "https://tonejs.github.io/audio/casio/A1.mp3",
 * 	A2: "https://tonejs.github.io/audio/casio/A2.mp3",
 * }, () => {
 * 	const player = new Tone.Player().toDestination();
 * 	// play one of the samples when they all load
 * 	player.buffer = pianoSamples.get("A2");
 * 	player.start();
 * });
 * @example
 * // To pass in additional parameters in the second parameter
 * const buffers = new Tone.ToneAudioBuffers({
 * 	 urls: {
 * 		 A1: "A1.mp3",
 * 		 A2: "A2.mp3",
 * 	 },
 * 	 onload: () => console.log("loaded"),
 * 	 baseUrl: "https://tonejs.github.io/audio/casio/"
 * });
 * @category Core
 */

var ToneAudioBuffers = /*#__PURE__*/function (_Tone) {
  _inherits(ToneAudioBuffers, _Tone);

  var _super = _createSuper(ToneAudioBuffers);

  function ToneAudioBuffers() {
    var _this;

    _classCallCheck(this, ToneAudioBuffers);

    _this = _super.call(this);
    _this.name = "ToneAudioBuffers";
    /**
     * All of the buffers
     */

    _this._buffers = new Map();
    /**
     * Keep track of the number of loaded buffers
     */

    _this._loadingCount = 0;
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(ToneAudioBuffers.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
    _this.baseUrl = options.baseUrl; // add each one

    Object.keys(options.urls).forEach(function (name) {
      _this._loadingCount++;
      var url = options.urls[name];

      _this.add(name, url, _this._bufferLoaded.bind(_assertThisInitialized(_this), options.onload), options.onerror);
    });
    return _this;
  }

  _createClass(ToneAudioBuffers, [{
    key: "has",
    value:
    /**
     * True if the buffers object has a buffer by that name.
     * @param  name  The key or index of the buffer.
     */
    function has(name) {
      return this._buffers.has(name.toString());
    }
    /**
     * Get a buffer by name. If an array was loaded,
     * then use the array index.
     * @param  name  The key or index of the buffer.
     */

  }, {
    key: "get",
    value: function get(name) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(this.has(name), "ToneAudioBuffers has no buffer named: ".concat(name));
      return this._buffers.get(name.toString());
    }
    /**
     * A buffer was loaded. decrement the counter.
     */

  }, {
    key: "_bufferLoaded",
    value: function _bufferLoaded(callback) {
      this._loadingCount--;

      if (this._loadingCount === 0 && callback) {
        callback();
      }
    }
    /**
     * If the buffers are loaded or not
     */

  }, {
    key: "loaded",
    get: function get() {
      return Array.from(this._buffers).every(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            _ = _ref2[0],
            buffer = _ref2[1];

        return buffer.loaded;
      });
    }
    /**
     * Add a buffer by name and url to the Buffers
     * @param  name      A unique name to give the buffer
     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.
     * @param  callback  The callback to invoke when the url is loaded.
     * @param  onerror  Invoked if the buffer can't be loaded
     */

  }, {
    key: "add",
    value: function add(name, url) {
      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"];
      var onerror = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"];

      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isString"])(url)) {
        this._buffers.set(name.toString(), new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__["ToneAudioBuffer"](this.baseUrl + url, callback, onerror));
      } else {
        this._buffers.set(name.toString(), new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__["ToneAudioBuffer"](url, callback, onerror));
      }

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneAudioBuffers.prototype), "dispose", this).call(this);

      this._buffers.forEach(function (buffer) {
        return buffer.dispose();
      });

      this._buffers.clear();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return {
        baseUrl: "",
        onerror: _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"],
        onload: _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"],
        urls: {}
      };
    }
  }]);

  return ToneAudioBuffers;
}(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneAudioNode.js ***!
  \*******************************************************************/
/*! exports provided: ToneAudioNode, connectSeries, connect, disconnect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function() { return ToneAudioNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectSeries", function() { return connectSeries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return _connect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disconnect", function() { return _disconnect; });
/* harmony import */ var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Param__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _ToneWithContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * ToneAudioNode is the base class for classes which process audio.
 */

var ToneAudioNode = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(ToneAudioNode, _ToneWithContext);

  var _super = _createSuper(ToneAudioNode);

  function ToneAudioNode() {
    var _this;

    _classCallCheck(this, ToneAudioNode);

    _this = _super.apply(this, arguments);
    /**
     * The name of the class
     */

    _this.name = "ToneAudioNode";
    /**
     * List all of the node that must be set to match the ChannelProperties
     */

    _this._internalChannels = [];
    return _this;
  }
  /**
   * The number of inputs feeding into the AudioNode.
   * For source nodes, this will be 0.
   * @example
   * const node = new Tone.Gain();
   * console.log(node.numberOfInputs);
   */


  _createClass(ToneAudioNode, [{
    key: "numberOfInputs",
    get: function get() {
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.input)) {
        if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(this.input) || this.input instanceof _Param__WEBPACK_IMPORTED_MODULE_2__["Param"]) {
          return 1;
        } else {
          return this.input.numberOfInputs;
        }
      } else {
        return 0;
      }
    }
    /**
     * The number of outputs of the AudioNode.
     * @example
     * const node = new Tone.Gain();
     * console.log(node.numberOfOutputs);
     */

  }, {
    key: "numberOfOutputs",
    get: function get() {
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.output)) {
        return this.output.numberOfOutputs;
      } else {
        return 0;
      }
    } //-------------------------------------
    // AUDIO PROPERTIES
    //-------------------------------------

    /**
     * Used to decide which nodes to get/set properties on
     */

  }, {
    key: "_isAudioNode",
    value: function _isAudioNode(node) {
      return Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(node) && (node instanceof ToneAudioNode || Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(node));
    }
    /**
     * Get all of the audio nodes (either internal or input/output) which together
     * make up how the class node responds to channel input/output
     */

  }, {
    key: "_getInternalNodes",
    value: function _getInternalNodes() {
      var nodeList = this._internalChannels.slice(0);

      if (this._isAudioNode(this.input)) {
        nodeList.push(this.input);
      }

      if (this._isAudioNode(this.output)) {
        if (this.input !== this.output) {
          nodeList.push(this.output);
        }
      }

      return nodeList;
    }
    /**
     * Set the audio options for this node such as channelInterpretation
     * channelCount, etc.
     * @param options
     */

  }, {
    key: "_setChannelProperties",
    value: function _setChannelProperties(options) {
      var nodeList = this._getInternalNodes();

      nodeList.forEach(function (node) {
        node.channelCount = options.channelCount;
        node.channelCountMode = options.channelCountMode;
        node.channelInterpretation = options.channelInterpretation;
      });
    }
    /**
     * Get the current audio options for this node such as channelInterpretation
     * channelCount, etc.
     */

  }, {
    key: "_getChannelProperties",
    value: function _getChannelProperties() {
      var nodeList = this._getInternalNodes();

      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(nodeList.length > 0, "ToneAudioNode does not have any internal nodes"); // use the first node to get properties
      // they should all be the same

      var node = nodeList[0];
      return {
        channelCount: node.channelCount,
        channelCountMode: node.channelCountMode,
        channelInterpretation: node.channelInterpretation
      };
    }
    /**
     * channelCount is the number of channels used when up-mixing and down-mixing
     * connections to any inputs to the node. The default value is 2 except for
     * specific nodes where its value is specially determined.
     */

  }, {
    key: "channelCount",
    get: function get() {
      return this._getChannelProperties().channelCount;
    },
    set: function set(channelCount) {
      var props = this._getChannelProperties(); // merge it with the other properties


      this._setChannelProperties(Object.assign(props, {
        channelCount: channelCount
      }));
    }
    /**
     * channelCountMode determines how channels will be counted when up-mixing and
     * down-mixing connections to any inputs to the node.
     * The default value is "max". This attribute has no effect for nodes with no inputs.
     * * "max" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.
     * * "clamped-max" - computedNumberOfChannels is determined as for "max" and then clamped to a maximum value of the given channelCount.
     * * "explicit" - computedNumberOfChannels is the exact value as specified by the channelCount.
     */

  }, {
    key: "channelCountMode",
    get: function get() {
      return this._getChannelProperties().channelCountMode;
    },
    set: function set(channelCountMode) {
      var props = this._getChannelProperties(); // merge it with the other properties


      this._setChannelProperties(Object.assign(props, {
        channelCountMode: channelCountMode
      }));
    }
    /**
     * channelInterpretation determines how individual channels will be treated
     * when up-mixing and down-mixing connections to any inputs to the node.
     * The default value is "speakers".
     */

  }, {
    key: "channelInterpretation",
    get: function get() {
      return this._getChannelProperties().channelInterpretation;
    },
    set: function set(channelInterpretation) {
      var props = this._getChannelProperties(); // merge it with the other properties


      this._setChannelProperties(Object.assign(props, {
        channelInterpretation: channelInterpretation
      }));
    } //-------------------------------------
    // CONNECTIONS
    //-------------------------------------

    /**
     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode
     * @param destination The output to connect to
     * @param outputNum The output to connect from
     * @param inputNum The input to connect to
     */

  }, {
    key: "connect",
    value: function connect(destination) {
      var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      _connect(this, destination, outputNum, inputNum);

      return this;
    }
    /**
     * Connect the output to the context's destination node.
     * @example
     * const osc = new Tone.Oscillator("C2").start();
     * osc.toDestination();
     */

  }, {
    key: "toDestination",
    value: function toDestination() {
      this.connect(this.context.destination);
      return this;
    }
    /**
     * Connect the output to the context's destination node.
     * See [[toDestination]]
     * @deprecated
     */

  }, {
    key: "toMaster",
    value: function toMaster() {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["warn"])("toMaster() has been renamed toDestination()");
      return this.toDestination();
    }
    /**
     * disconnect the output
     */

  }, {
    key: "disconnect",
    value: function disconnect(destination) {
      var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      _disconnect(this, destination, outputNum, inputNum);

      return this;
    }
    /**
     * Connect the output of this node to the rest of the nodes in series.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/handdrum-loop.mp3");
     * player.autostart = true;
     * const filter = new Tone.AutoFilter(4).start();
     * const distortion = new Tone.Distortion(0.5);
     * // connect the player to the filter, distortion and then to the master output
     * player.chain(filter, distortion, Tone.Destination);
     */

  }, {
    key: "chain",
    value: function chain() {
      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {
        nodes[_key] = arguments[_key];
      }

      connectSeries.apply(void 0, [this].concat(nodes));
      return this;
    }
    /**
     * connect the output of this node to the rest of the nodes in parallel.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/conga-rhythm.mp3");
     * player.autostart = true;
     * const pitchShift = new Tone.PitchShift(4).toDestination();
     * const filter = new Tone.Filter("G5").toDestination();
     * // connect a node to the pitch shift and filter in parallel
     * player.fan(pitchShift, filter);
     */

  }, {
    key: "fan",
    value: function fan() {
      var _this2 = this;

      for (var _len2 = arguments.length, nodes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        nodes[_key2] = arguments[_key2];
      }

      nodes.forEach(function (node) {
        return _this2.connect(node);
      });
      return this;
    }
    /**
     * Dispose and disconnect
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneAudioNode.prototype), "dispose", this).call(this);

      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.input)) {
        if (this.input instanceof ToneAudioNode) {
          this.input.dispose();
        } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(this.input)) {
          this.input.disconnect();
        }
      }

      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.output)) {
        if (this.output instanceof ToneAudioNode) {
          this.output.dispose();
        } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(this.output)) {
          this.output.disconnect();
        }
      }

      this._internalChannels = [];
      return this;
    }
  }]);

  return ToneAudioNode;
}(_ToneWithContext__WEBPACK_IMPORTED_MODULE_3__["ToneWithContext"]); //-------------------------------------
// CONNECTIONS
//-------------------------------------

/**
 * connect together all of the arguments in series
 * @param nodes
 */

function connectSeries() {
  for (var _len3 = arguments.length, nodes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    nodes[_key3] = arguments[_key3];
  }

  var first = nodes.shift();
  nodes.reduce(function (prev, current) {
    if (prev instanceof ToneAudioNode) {
      prev.connect(current);
    } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(prev)) {
      _connect(prev, current);
    }

    return current;
  }, first);
}
/**
 * Connect two nodes together so that signal flows from the
 * first node to the second. Optionally specify the input and output channels.
 * @param srcNode The source node
 * @param dstNode The destination node
 * @param outputNumber The output channel of the srcNode
 * @param inputNumber The input channel of the dstNode
 */

function _connect(srcNode, dstNode) {
  var outputNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var inputNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(srcNode), "Cannot connect from undefined node");
  Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(dstNode), "Cannot connect to undefined node");

  if (dstNode instanceof ToneAudioNode || Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(dstNode)) {
    Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(dstNode.numberOfInputs > 0, "Cannot connect to node with no inputs");
  }

  Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(srcNode.numberOfOutputs > 0, "Cannot connect from node with no outputs"); // resolve the input of the dstNode

  while (dstNode instanceof ToneAudioNode || dstNode instanceof _Param__WEBPACK_IMPORTED_MODULE_2__["Param"]) {
    if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(dstNode.input)) {
      dstNode = dstNode.input;
    }
  }

  while (srcNode instanceof ToneAudioNode) {
    if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(srcNode.output)) {
      srcNode = srcNode.output;
    }
  } // make the connection


  if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(dstNode)) {
    srcNode.connect(dstNode, outputNumber);
  } else {
    srcNode.connect(dstNode, outputNumber, inputNumber);
  }
}
/**
 * Disconnect a node from all nodes or optionally include a destination node and input/output channels.
 * @param srcNode The source node
 * @param dstNode The destination node
 * @param outputNumber The output channel of the srcNode
 * @param inputNumber The input channel of the dstNode
 */




function _disconnect(srcNode, dstNode) {
  var outputNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var inputNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

  // resolve the destination node
  if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(dstNode)) {
    while (dstNode instanceof ToneAudioNode) {
      dstNode = dstNode.input;
    }
  } // resolve the src node


  while (!Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(srcNode)) {
    if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(srcNode.output)) {
      srcNode = srcNode.output;
    }
  }

  if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(dstNode)) {
    srcNode.disconnect(dstNode, outputNumber);
  } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(dstNode)) {
    srcNode.disconnect(dstNode, outputNumber, inputNumber);
  } else {
    srcNode.disconnect();
  }
}



/***/ }),

/***/ "./node_modules/tone/build/esm/core/context/ToneWithContext.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/context/ToneWithContext.js ***!
  \*********************************************************************/
/*! exports provided: ToneWithContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneWithContext", function() { return ToneWithContext; });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _type_Frequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _type_Time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../type/Time */ "./node_modules/tone/build/esm/core/type/Time.js");
/* harmony import */ var _type_TransportTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * The Base class for all nodes that have an AudioContext.
 */

var ToneWithContext = /*#__PURE__*/function (_Tone) {
  _inherits(ToneWithContext, _Tone);

  var _super = _createSuper(ToneWithContext);

  function ToneWithContext() {
    var _this;

    _classCallCheck(this, ToneWithContext);

    _this = _super.call(this);
    var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["optionsFromArguments"])(ToneWithContext.getDefaults(), arguments, ["context"]);

    if (_this.defaultContext) {
      _this.context = _this.defaultContext;
    } else {
      _this.context = options.context;
    }

    return _this;
  }

  _createClass(ToneWithContext, [{
    key: "now",
    value:
    /**
     * Return the current time of the Context clock plus the lookAhead.
     * @example
     * setInterval(() => {
     * 	console.log(Tone.now());
     * }, 100);
     */
    function now() {
      return this.context.currentTime + this.context.lookAhead;
    }
    /**
     * Return the current time of the Context clock without any lookAhead.
     * @example
     * setInterval(() => {
     * 	console.log(Tone.immediate());
     * }, 100);
     */

  }, {
    key: "immediate",
    value: function immediate() {
      return this.context.currentTime;
    }
    /**
     * The duration in seconds of one sample.
     * @example
     * console.log(Tone.Transport.sampleTime);
     */

  }, {
    key: "sampleTime",
    get: function get() {
      return 1 / this.context.sampleRate;
    }
    /**
     * The number of seconds of 1 processing block (128 samples)
     * @example
     * console.log(Tone.Destination.blockTime);
     */

  }, {
    key: "blockTime",
    get: function get() {
      return 128 / this.context.sampleRate;
    }
    /**
     * Convert the incoming time to seconds.
     * This is calculated against the current [[Tone.Transport]] bpm
     * @example
     * const gain = new Tone.Gain();
     * setInterval(() => console.log(gain.toSeconds("4n")), 100);
     * // ramp the tempo to 60 bpm over 30 seconds
     * Tone.getTransport().bpm.rampTo(60, 30);
     */

  }, {
    key: "toSeconds",
    value: function toSeconds(time) {
      return new _type_Time__WEBPACK_IMPORTED_MODULE_3__["TimeClass"](this.context, time).toSeconds();
    }
    /**
     * Convert the input to a frequency number
     * @example
     * const gain = new Tone.Gain();
     * console.log(gain.toFrequency("4n"));
     */

  }, {
    key: "toFrequency",
    value: function toFrequency(freq) {
      return new _type_Frequency__WEBPACK_IMPORTED_MODULE_2__["FrequencyClass"](this.context, freq).toFrequency();
    }
    /**
     * Convert the input time into ticks
     * @example
     * const gain = new Tone.Gain();
     * console.log(gain.toTicks("4n"));
     */

  }, {
    key: "toTicks",
    value: function toTicks(time) {
      return new _type_TransportTime__WEBPACK_IMPORTED_MODULE_4__["TransportTimeClass"](this.context, time).toTicks();
    } //-------------------------------------
    // 	GET/SET
    //-------------------------------------

    /**
     * Get a subset of the properties which are in the partial props
     */

  }, {
    key: "_getPartialProperties",
    value: function _getPartialProperties(props) {
      var options = this.get(); // remove attributes from the prop that are not in the partial

      Object.keys(options).forEach(function (name) {
        if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isUndef"])(props[name])) {
          delete options[name];
        }
      });
      return options;
    }
    /**
     * Get the object's attributes.
     * @example
     * const osc = new Tone.Oscillator();
     * console.log(osc.get());
     */

  }, {
    key: "get",
    value: function get() {
      var _this2 = this;

      var defaults = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["getDefaultsFromInstance"])(this);
      Object.keys(defaults).forEach(function (attribute) {
        if (Reflect.has(_this2, attribute)) {
          var member = _this2[attribute];

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(member) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(member.value) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(member.setValueAtTime)) {
            defaults[attribute] = member.value;
          } else if (member instanceof ToneWithContext) {
            defaults[attribute] = member._getPartialProperties(defaults[attribute]); // otherwise make sure it's a serializable type
          } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(member) || Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(member) || Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isString"])(member) || Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isBoolean"])(member)) {
            defaults[attribute] = member;
          } else {
            // remove all undefined and unserializable attributes
            delete defaults[attribute];
          }
        }
      });
      return defaults;
    }
    /**
     * Set multiple properties at once with an object.
     * @example
     * const filter = new Tone.Filter().toDestination();
     * // set values using an object
     * filter.set({
     * 	frequency: "C6",
     * 	type: "highpass"
     * });
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/Analogsynth_octaves_highmid.mp3").connect(filter);
     * player.autostart = true;
     */

  }, {
    key: "set",
    value: function set(props) {
      var _this3 = this;

      Object.keys(props).forEach(function (attribute) {
        if (Reflect.has(_this3, attribute) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(_this3[attribute])) {
          if (_this3[attribute] && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(_this3[attribute].value) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(_this3[attribute].setValueAtTime)) {
            // small optimization
            if (_this3[attribute].value !== props[attribute]) {
              _this3[attribute].value = props[attribute];
            }
          } else if (_this3[attribute] instanceof ToneWithContext) {
            _this3[attribute].set(props[attribute]);
          } else {
            _this3[attribute] = props[attribute];
          }
        }
      });
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return {
        context: Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])()
      };
    }
  }]);

  return ToneWithContext;
}(_Tone__WEBPACK_IMPORTED_MODULE_1__["Tone"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/index.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/core/index.js ***!
  \***************************************************/
/*! exports provided: Clock, Context, BaseContext, Delay, Gain, Offline, OfflineContext, Param, ToneAudioBuffer, ToneAudioBuffers, ToneAudioNode, connectSeries, connect, disconnect, FrequencyClass, Frequency, MidiClass, Midi, TimeClass, Time, TicksClass, Ticks, TransportTimeClass, TransportTime, Emitter, IntervalTimeline, StateTimeline, Timeline, isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote, dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof, optionsFromArguments, defaultArg, Unit, debug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clock_Clock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clock/Clock */ "./node_modules/tone/build/esm/core/clock/Clock.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Clock", function() { return _clock_Clock__WEBPACK_IMPORTED_MODULE_0__["Clock"]; });

/* harmony import */ var _context_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context/Context */ "./node_modules/tone/build/esm/core/context/Context.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return _context_Context__WEBPACK_IMPORTED_MODULE_1__["Context"]; });

/* harmony import */ var _context_BaseContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./context/BaseContext */ "./node_modules/tone/build/esm/core/context/BaseContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseContext", function() { return _context_BaseContext__WEBPACK_IMPORTED_MODULE_2__["BaseContext"]; });

/* harmony import */ var _context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Delay", function() { return _context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]; });

/* harmony import */ var _context_Gain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gain", function() { return _context_Gain__WEBPACK_IMPORTED_MODULE_4__["Gain"]; });

/* harmony import */ var _context_Offline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context/Offline */ "./node_modules/tone/build/esm/core/context/Offline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Offline", function() { return _context_Offline__WEBPACK_IMPORTED_MODULE_5__["Offline"]; });

/* harmony import */ var _context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OfflineContext", function() { return _context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__["OfflineContext"]; });

/* harmony import */ var _context_Param__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Param", function() { return _context_Param__WEBPACK_IMPORTED_MODULE_7__["Param"]; });

/* harmony import */ var _context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function() { return _context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_8__["ToneAudioBuffer"]; });

/* harmony import */ var _context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function() { return _context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_9__["ToneAudioBuffers"]; });

/* harmony import */ var _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function() { return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__["ToneAudioNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connectSeries", function() { return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__["connectSeries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__["connect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disconnect", function() { return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_10__["disconnect"]; });

/* harmony import */ var _type_Frequency__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyClass", function() { return _type_Frequency__WEBPACK_IMPORTED_MODULE_11__["FrequencyClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Frequency", function() { return _type_Frequency__WEBPACK_IMPORTED_MODULE_11__["Frequency"]; });

/* harmony import */ var _type_Midi__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./type/Midi */ "./node_modules/tone/build/esm/core/type/Midi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidiClass", function() { return _type_Midi__WEBPACK_IMPORTED_MODULE_12__["MidiClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Midi", function() { return _type_Midi__WEBPACK_IMPORTED_MODULE_12__["Midi"]; });

/* harmony import */ var _type_Time__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./type/Time */ "./node_modules/tone/build/esm/core/type/Time.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeClass", function() { return _type_Time__WEBPACK_IMPORTED_MODULE_13__["TimeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Time", function() { return _type_Time__WEBPACK_IMPORTED_MODULE_13__["Time"]; });

/* harmony import */ var _type_Ticks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TicksClass", function() { return _type_Ticks__WEBPACK_IMPORTED_MODULE_14__["TicksClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ticks", function() { return _type_Ticks__WEBPACK_IMPORTED_MODULE_14__["Ticks"]; });

/* harmony import */ var _type_TransportTime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function() { return _type_TransportTime__WEBPACK_IMPORTED_MODULE_15__["TransportTimeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransportTime", function() { return _type_TransportTime__WEBPACK_IMPORTED_MODULE_15__["TransportTime"]; });

/* harmony import */ var _util_Draw__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./util/Draw */ "./node_modules/tone/build/esm/core/util/Draw.js");
/* harmony import */ var _util_Emitter__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./util/Emitter */ "./node_modules/tone/build/esm/core/util/Emitter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Emitter", function() { return _util_Emitter__WEBPACK_IMPORTED_MODULE_17__["Emitter"]; });

/* harmony import */ var _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./util/IntervalTimeline */ "./node_modules/tone/build/esm/core/util/IntervalTimeline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function() { return _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_18__["IntervalTimeline"]; });

/* harmony import */ var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StateTimeline", function() { return _util_StateTimeline__WEBPACK_IMPORTED_MODULE_19__["StateTimeline"]; });

/* harmony import */ var _util_Timeline__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./util/Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Timeline", function() { return _util_Timeline__WEBPACK_IMPORTED_MODULE_20__["Timeline"]; });

/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndef", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isUndef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDefined", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isDefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNote", function() { return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_21__["isNote"]; });

/* harmony import */ var _type_Conversions__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dbToGain", function() { return _type_Conversions__WEBPACK_IMPORTED_MODULE_22__["dbToGain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gainToDb", function() { return _type_Conversions__WEBPACK_IMPORTED_MODULE_22__["gainToDb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function() { return _type_Conversions__WEBPACK_IMPORTED_MODULE_22__["intervalToFrequencyRatio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ftom", function() { return _type_Conversions__WEBPACK_IMPORTED_MODULE_22__["ftom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mtof", function() { return _type_Conversions__WEBPACK_IMPORTED_MODULE_22__["mtof"]; });

/* harmony import */ var _util_Defaults__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function() { return _util_Defaults__WEBPACK_IMPORTED_MODULE_23__["optionsFromArguments"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultArg", function() { return _util_Defaults__WEBPACK_IMPORTED_MODULE_23__["defaultArg"]; });

/* harmony import */ var _type_Units__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./type/Units */ "./node_modules/tone/build/esm/core/type/Units.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "Unit", function() { return _type_Units__WEBPACK_IMPORTED_MODULE_24__; });
/* harmony import */ var _util_Debug__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return _util_Debug__WEBPACK_IMPORTED_MODULE_25__; });
 // export * from "./clock/Transport";



 // export * from "./context/Destination";




















 // get the units and export them under the "Unit" namespace


 // export the debug stuff as Debug




/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Conversions.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Conversions.js ***!
  \**************************************************************/
/*! exports provided: equalPowerScale, dbToGain, gainToDb, intervalToFrequencyRatio, getA4, setA4, ftom, ftomf, mtof */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalPowerScale", function() { return equalPowerScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dbToGain", function() { return dbToGain; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gainToDb", function() { return gainToDb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function() { return intervalToFrequencyRatio; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getA4", function() { return getA4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setA4", function() { return setA4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ftom", function() { return ftom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ftomf", function() { return ftomf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mtof", function() { return mtof; });
/**
 * Equal power gain scale. Good for cross-fading.
 * @param  percent (0-1)
 */
function equalPowerScale(percent) {
  var piFactor = 0.5 * Math.PI;
  return Math.sin(percent * piFactor);
}
/**
 * Convert decibels into gain.
 */

function dbToGain(db) {
  return Math.pow(10, db / 20);
}
/**
 * Convert gain to decibels.
 */

function gainToDb(gain) {
  return 20 * (Math.log(gain) / Math.LN10);
}
/**
 * Convert an interval (in semitones) to a frequency ratio.
 * @param interval the number of semitones above the base note
 * @example
 * Tone.intervalToFrequencyRatio(0); // 1
 * Tone.intervalToFrequencyRatio(12); // 2
 * Tone.intervalToFrequencyRatio(-12); // 0.5
 */

function intervalToFrequencyRatio(interval) {
  return Math.pow(2, interval / 12);
}
/**
 * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
 * to generate all the other pitch values from notes. A4's values in Hertz.
 */

var A4 = 440;
function getA4() {
  return A4;
}
function setA4(freq) {
  A4 = freq;
}
/**
 * Convert a frequency value to a MIDI note.
 * @param frequency The value to frequency value to convert.
 * @example
 * Tone.ftom(440); // returns 69
 */

function ftom(frequency) {
  return Math.round(ftomf(frequency));
}
/**
 * Convert a frequency to a floating point midi value
 */

function ftomf(frequency) {
  return 69 + 12 * Math.log2(frequency / A4);
}
/**
 * Convert a MIDI note to frequency value.
 * @param  midi The midi number to convert.
 * @return The corresponding frequency value
 * @example
 * Tone.mtof(69); // 440
 */

function mtof(midi) {
  return A4 * Math.pow(2, (midi - 69) / 12);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Frequency.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Frequency.js ***!
  \************************************************************/
/*! exports provided: FrequencyClass, Frequency */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FrequencyClass", function() { return FrequencyClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Frequency", function() { return Frequency; });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Time */ "./node_modules/tone/build/esm/core/type/Time.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Frequency is a primitive type for encoding Frequency values.
 * Eventually all time values are evaluated to hertz using the `valueOf` method.
 * @example
 * Tone.Frequency("C3"); // 261
 * Tone.Frequency(38, "midi");
 * Tone.Frequency("C3").transpose(4);
 * @category Unit
 */

var FrequencyClass = /*#__PURE__*/function (_TimeClass) {
  _inherits(FrequencyClass, _TimeClass);

  var _super = _createSuper(FrequencyClass);

  function FrequencyClass() {
    var _this;

    _classCallCheck(this, FrequencyClass);

    _this = _super.apply(this, arguments);
    _this.name = "Frequency";
    _this.defaultUnits = "hz";
    return _this;
  }
  /**
   * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
   * to generate all the other pitch values from notes. A4's values in Hertz.
   */


  _createClass(FrequencyClass, [{
    key: "_getExpressions",
    value: //-------------------------------------
    // 	AUGMENT BASE EXPRESSIONS
    //-------------------------------------
    function _getExpressions() {
      return Object.assign({}, _get(_getPrototypeOf(FrequencyClass.prototype), "_getExpressions", this).call(this), {
        midi: {
          regexp: /^(\d+(?:\.\d+)?midi)/,
          method: function method(value) {
            if (this.defaultUnits === "midi") {
              return value;
            } else {
              return FrequencyClass.mtof(value);
            }
          }
        },
        note: {
          regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
          method: function method(pitch, octave) {
            var index = noteToScaleIndex[pitch.toLowerCase()];
            var noteNumber = index + (parseInt(octave, 10) + 1) * 12;

            if (this.defaultUnits === "midi") {
              return noteNumber;
            } else {
              return FrequencyClass.mtof(noteNumber);
            }
          }
        },
        tr: {
          regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
          method: function method(m, q, s) {
            var total = 1;

            if (m && m !== "0") {
              total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
            }

            if (q && q !== "0") {
              total *= this._beatsToUnits(parseFloat(q));
            }

            if (s && s !== "0") {
              total *= this._beatsToUnits(parseFloat(s) / 4);
            }

            return total;
          }
        }
      });
    } //-------------------------------------
    // 	EXPRESSIONS
    //-------------------------------------

    /**
     * Transposes the frequency by the given number of semitones.
     * @return  A new transposed frequency
     * @example
     * Tone.Frequency("A4").transpose(3); // "C5"
     */

  }, {
    key: "transpose",
    value: function transpose(interval) {
      return new FrequencyClass(this.context, this.valueOf() * Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["intervalToFrequencyRatio"])(interval));
    }
    /**
     * Takes an array of semitone intervals and returns
     * an array of frequencies transposed by those intervals.
     * @return  Returns an array of Frequencies
     * @example
     * Tone.Frequency("A4").harmonize([0, 3, 7]); // ["A4", "C5", "E5"]
     */

  }, {
    key: "harmonize",
    value: function harmonize(intervals) {
      var _this2 = this;

      return intervals.map(function (interval) {
        return _this2.transpose(interval);
      });
    } //-------------------------------------
    // 	UNIT CONVERSIONS
    //-------------------------------------

    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Frequency("C4").toMidi(); // 60
     */

  }, {
    key: "toMidi",
    value: function toMidi() {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(this.valueOf());
    }
    /**
     * Return the value of the frequency in Scientific Pitch Notation
     * @example
     * Tone.Frequency(69, "midi").toNote(); // "A4"
     */

  }, {
    key: "toNote",
    value: function toNote() {
      var freq = this.toFrequency();
      var log = Math.log2(freq / FrequencyClass.A4);
      var noteNumber = Math.round(12 * log) + 57;
      var octave = Math.floor(noteNumber / 12);

      if (octave < 0) {
        noteNumber += -12 * octave;
      }

      var noteName = scaleIndexToNote[noteNumber % 12];
      return noteName + octave.toString();
    }
    /**
     * Return the duration of one cycle in seconds.
     */

  }, {
    key: "toSeconds",
    value: function toSeconds() {
      return 1 / _get(_getPrototypeOf(FrequencyClass.prototype), "toSeconds", this).call(this);
    }
    /**
     * Return the duration of one cycle in ticks
     */

  }, {
    key: "toTicks",
    value: function toTicks() {
      var quarterTime = this._beatsToUnits(1);

      var quarters = this.valueOf() / quarterTime;
      return Math.floor(quarters * this._getPPQ());
    } //-------------------------------------
    // 	UNIT CONVERSIONS HELPERS
    //-------------------------------------

    /**
     * With no arguments, return 0
     */

  }, {
    key: "_noArg",
    value: function _noArg() {
      return 0;
    }
    /**
     * Returns the value of a frequency in the current units
     */

  }, {
    key: "_frequencyToUnits",
    value: function _frequencyToUnits(freq) {
      return freq;
    }
    /**
     * Returns the value of a tick in the current time units
     */

  }, {
    key: "_ticksToUnits",
    value: function _ticksToUnits(ticks) {
      return 1 / (ticks * 60 / (this._getBpm() * this._getPPQ()));
    }
    /**
     * Return the value of the beats in the current units
     */

  }, {
    key: "_beatsToUnits",
    value: function _beatsToUnits(beats) {
      return 1 / _get(_getPrototypeOf(FrequencyClass.prototype), "_beatsToUnits", this).call(this, beats);
    }
    /**
     * Returns the value of a second in the current units
     */

  }, {
    key: "_secondsToUnits",
    value: function _secondsToUnits(seconds) {
      return 1 / seconds;
    }
    /**
     * Convert a MIDI note to frequency value.
     * @param  midi The midi number to convert.
     * @return The corresponding frequency value
     */

  }], [{
    key: "A4",
    get: function get() {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["getA4"])();
    },
    set: function set(freq) {
      Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["setA4"])(freq);
    }
  }, {
    key: "mtof",
    value: function mtof(midi) {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["mtof"])(midi);
    }
    /**
     * Convert a frequency value to a MIDI note.
     * @param frequency The value to frequency value to convert.
     */

  }, {
    key: "ftom",
    value: function ftom(frequency) {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(frequency);
    }
  }]);

  return FrequencyClass;
}(_Time__WEBPACK_IMPORTED_MODULE_2__["TimeClass"]); //-------------------------------------
// 	FREQUENCY CONVERSIONS
//-------------------------------------

/**
 * Note to scale index.
 * @hidden
 */

var noteToScaleIndex = {
  cbb: -2,
  cb: -1,
  c: 0,
  "c#": 1,
  cx: 2,
  dbb: 0,
  db: 1,
  d: 2,
  "d#": 3,
  dx: 4,
  ebb: 2,
  eb: 3,
  e: 4,
  "e#": 5,
  ex: 6,
  fbb: 3,
  fb: 4,
  f: 5,
  "f#": 6,
  fx: 7,
  gbb: 5,
  gb: 6,
  g: 7,
  "g#": 8,
  gx: 9,
  abb: 7,
  ab: 8,
  a: 9,
  "a#": 10,
  ax: 11,
  bbb: 9,
  bb: 10,
  b: 11,
  "b#": 12,
  bx: 13
};
/**
 * scale index to note (sharps)
 * @hidden
 */

var scaleIndexToNote = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"];
/**
 * Convert a value into a FrequencyClass object.
 * @category Unit
 * @example
 * const midi = Tone.Frequency("C3").toMidi();
 * console.log(midi);
 * @example
 * const hertz = Tone.Frequency(38, "midi").toFrequency();
 * console.log(hertz);
 */

function Frequency(value, units) {
  return new FrequencyClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Midi.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Midi.js ***!
  \*******************************************************/
/*! exports provided: MidiClass, Midi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MidiClass", function() { return MidiClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Midi", function() { return Midi; });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _Frequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Midi is a primitive type for encoding Time values.
 * Midi can be constructed with or without the `new` keyword. Midi can be passed
 * into the parameter of any method which takes time as an argument.
 * @category Unit
 */

var MidiClass = /*#__PURE__*/function (_FrequencyClass) {
  _inherits(MidiClass, _FrequencyClass);

  var _super = _createSuper(MidiClass);

  function MidiClass() {
    var _this;

    _classCallCheck(this, MidiClass);

    _this = _super.apply(this, arguments);
    _this.name = "MidiClass";
    _this.defaultUnits = "midi";
    return _this;
  }
  /**
   * Returns the value of a frequency in the current units
   */


  _createClass(MidiClass, [{
    key: "_frequencyToUnits",
    value: function _frequencyToUnits(freq) {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_frequencyToUnits", this).call(this, freq));
    }
    /**
     * Returns the value of a tick in the current time units
     */

  }, {
    key: "_ticksToUnits",
    value: function _ticksToUnits(ticks) {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_ticksToUnits", this).call(this, ticks));
    }
    /**
     * Return the value of the beats in the current units
     */

  }, {
    key: "_beatsToUnits",
    value: function _beatsToUnits(beats) {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_beatsToUnits", this).call(this, beats));
    }
    /**
     * Returns the value of a second in the current units
     */

  }, {
    key: "_secondsToUnits",
    value: function _secondsToUnits(seconds) {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_secondsToUnits", this).call(this, seconds));
    }
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Midi(60).toMidi(); // 60
     */

  }, {
    key: "toMidi",
    value: function toMidi() {
      return this.valueOf();
    }
    /**
     * Return the value of the frequency as a MIDI note
     * @example
     * Tone.Midi(60).toFrequency(); // 261.6255653005986
     */

  }, {
    key: "toFrequency",
    value: function toFrequency() {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["mtof"])(this.toMidi());
    }
    /**
     * Transposes the frequency by the given number of semitones.
     * @return A new transposed MidiClass
     * @example
     * Tone.Midi("A4").transpose(3); // "C5"
     */

  }, {
    key: "transpose",
    value: function transpose(interval) {
      return new MidiClass(this.context, this.toMidi() + interval);
    }
  }]);

  return MidiClass;
}(_Frequency__WEBPACK_IMPORTED_MODULE_2__["FrequencyClass"]);
/**
 * Convert a value into a FrequencyClass object.
 * @category Unit
 */

function Midi(value, units) {
  return new MidiClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/NoteUnits.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/NoteUnits.js ***!
  \************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// this file contains all of the valid note names for all pitches between C-4 and C11


/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Ticks.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Ticks.js ***!
  \********************************************************/
/*! exports provided: TicksClass, Ticks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TicksClass", function() { return TicksClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Ticks", function() { return Ticks; });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _TransportTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Ticks is a primitive type for encoding Time values.
 * Ticks can be constructed with or without the `new` keyword. Ticks can be passed
 * into the parameter of any method which takes time as an argument.
 * @example
 * const t = Tone.Ticks("4n"); // a quarter note as ticks
 * @category Unit
 */

var TicksClass = /*#__PURE__*/function (_TransportTimeClass) {
  _inherits(TicksClass, _TransportTimeClass);

  var _super = _createSuper(TicksClass);

  function TicksClass() {
    var _this;

    _classCallCheck(this, TicksClass);

    _this = _super.apply(this, arguments);
    _this.name = "Ticks";
    _this.defaultUnits = "i";
    return _this;
  }
  /**
   * Get the current time in the given units
   */


  _createClass(TicksClass, [{
    key: "_now",
    value: function _now() {
      return this.context.transport.ticks;
    }
    /**
     * Return the value of the beats in the current units
     */

  }, {
    key: "_beatsToUnits",
    value: function _beatsToUnits(beats) {
      return this._getPPQ() * beats;
    }
    /**
     * Returns the value of a second in the current units
     */

  }, {
    key: "_secondsToUnits",
    value: function _secondsToUnits(seconds) {
      return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());
    }
    /**
     * Returns the value of a tick in the current time units
     */

  }, {
    key: "_ticksToUnits",
    value: function _ticksToUnits(ticks) {
      return ticks;
    }
    /**
     * Return the time in ticks
     */

  }, {
    key: "toTicks",
    value: function toTicks() {
      return this.valueOf();
    }
    /**
     * Return the time in seconds
     */

  }, {
    key: "toSeconds",
    value: function toSeconds() {
      return this.valueOf() / this._getPPQ() * (60 / this._getBpm());
    }
  }]);

  return TicksClass;
}(_TransportTime__WEBPACK_IMPORTED_MODULE_1__["TransportTimeClass"]);
/**
 * Convert a time representation to ticks
 * @category Unit
 */

function Ticks(value, units) {
  return new TicksClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Time.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Time.js ***!
  \*******************************************************/
/*! exports provided: TimeClass, Time */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeClass", function() { return TimeClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Time", function() { return Time; });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _TimeBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TimeBase */ "./node_modules/tone/build/esm/core/type/TimeBase.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * TimeClass is a primitive type for encoding and decoding Time values.
 * TimeClass can be passed into the parameter of any method which takes time as an argument.
 * @param  val    The time value.
 * @param  units  The units of the value.
 * @example
 * const time = Tone.Time("4n"); // a quarter note
 * @category Unit
 */

var TimeClass = /*#__PURE__*/function (_TimeBaseClass) {
  _inherits(TimeClass, _TimeBaseClass);

  var _super = _createSuper(TimeClass);

  function TimeClass() {
    var _this;

    _classCallCheck(this, TimeClass);

    _this = _super.apply(this, arguments);
    _this.name = "TimeClass";
    return _this;
  }

  _createClass(TimeClass, [{
    key: "_getExpressions",
    value: function _getExpressions() {
      var _this2 = this;

      return Object.assign(_get(_getPrototypeOf(TimeClass.prototype), "_getExpressions", this).call(this), {
        now: {
          method: function method(capture) {
            return _this2._now() + new _this2.constructor(_this2.context, capture).valueOf();
          },
          regexp: /^\+(.+)/
        },
        quantize: {
          method: function method(capture) {
            var quantTo = new TimeClass(_this2.context, capture).valueOf();
            return _this2._secondsToUnits(_this2.context.transport.nextSubdivision(quantTo));
          },
          regexp: /^@(.+)/
        }
      });
    }
    /**
     * Quantize the time by the given subdivision. Optionally add a
     * percentage which will move the time value towards the ideal
     * quantized value by that percentage.
     * @param  subdiv    The subdivision to quantize to
     * @param  percent  Move the time value towards the quantized value by a percentage.
     * @example
     * Tone.Time(21).quantize(2); // returns 22
     * Tone.Time(0.6).quantize("4n", 0.5); // returns 0.55
     */

  }, {
    key: "quantize",
    value: function quantize(subdiv) {
      var percent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var subdivision = new this.constructor(this.context, subdiv).valueOf();
      var value = this.valueOf();
      var multiple = Math.round(value / subdivision);
      var ideal = multiple * subdivision;
      var diff = ideal - value;
      return value + diff * percent;
    } //-------------------------------------
    // CONVERSIONS
    //-------------------------------------

    /**
     * Convert a Time to Notation. The notation values are will be the
     * closest representation between 1m to 128th note.
     * @return {Notation}
     * @example
     * // if the Transport is at 120bpm:
     * Tone.Time(2).toNotation(); // returns "1m"
     */

  }, {
    key: "toNotation",
    value: function toNotation() {
      var _this3 = this;

      var time = this.toSeconds();
      var testNotations = ["1m"];

      for (var power = 1; power < 9; power++) {
        var subdiv = Math.pow(2, power);
        testNotations.push(subdiv + "n.");
        testNotations.push(subdiv + "n");
        testNotations.push(subdiv + "t");
      }

      testNotations.push("0"); // find the closets notation representation

      var closest = testNotations[0];
      var closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();
      testNotations.forEach(function (notation) {
        var notationSeconds = new TimeClass(_this3.context, notation).toSeconds();

        if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {
          closest = notation;
          closestSeconds = notationSeconds;
        }
      });
      return closest;
    }
    /**
     * Return the time encoded as Bars:Beats:Sixteenths.
     */

  }, {
    key: "toBarsBeatsSixteenths",
    value: function toBarsBeatsSixteenths() {
      var quarterTime = this._beatsToUnits(1);

      var quarters = this.valueOf() / quarterTime;
      quarters = parseFloat(quarters.toFixed(4));
      var measures = Math.floor(quarters / this._getTimeSignature());
      var sixteenths = quarters % 1 * 4;
      quarters = Math.floor(quarters) % this._getTimeSignature();
      var sixteenthString = sixteenths.toString();

      if (sixteenthString.length > 3) {
        // the additional parseFloat removes insignificant trailing zeroes
        sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));
      }

      var progress = [measures, quarters, sixteenths];
      return progress.join(":");
    }
    /**
     * Return the time in ticks.
     */

  }, {
    key: "toTicks",
    value: function toTicks() {
      var quarterTime = this._beatsToUnits(1);

      var quarters = this.valueOf() / quarterTime;
      return Math.round(quarters * this._getPPQ());
    }
    /**
     * Return the time in seconds.
     */

  }, {
    key: "toSeconds",
    value: function toSeconds() {
      return this.valueOf();
    }
    /**
     * Return the value as a midi note.
     */

  }, {
    key: "toMidi",
    value: function toMidi() {
      return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(this.toFrequency());
    }
  }, {
    key: "_now",
    value: function _now() {
      return this.context.now();
    }
  }]);

  return TimeClass;
}(_TimeBase__WEBPACK_IMPORTED_MODULE_2__["TimeBaseClass"]);
/**
 * Create a TimeClass from a time string or number. The time is computed against the
 * global Tone.Context. To use a specific context, use [[TimeClass]]
 * @param value A value which represents time
 * @param units The value's units if they can't be inferred by the value.
 * @category Unit
 * @example
 * const time = Tone.Time("4n").toSeconds();
 * console.log(time);
 * @example
 * const note = Tone.Time(1).toNotation();
 * console.log(note);
 * @example
 * const freq = Tone.Time(0.5).toFrequency();
 * console.log(freq);
 */

function Time(value, units) {
  return new TimeClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/TimeBase.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/TimeBase.js ***!
  \***********************************************************/
/*! exports provided: TimeBaseClass */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeBaseClass", function() { return TimeBaseClass; });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * TimeBase is a flexible encoding of time which can be evaluated to and from a string.
 */

var TimeBaseClass = /*#__PURE__*/function (_Tone) {
  _inherits(TimeBaseClass, _Tone);

  var _super = _createSuper(TimeBaseClass);

  /**
   * @param context The context associated with the time value. Used to compute
   * Transport and context-relative timing.
   * @param  value  The time value as a number, string or object
   * @param  units  Unit values
   */
  function TimeBaseClass(context, value, units) {
    var _this;

    _classCallCheck(this, TimeBaseClass);

    _this = _super.call(this);
    /**
     * The default units
     */

    _this.defaultUnits = "s";
    _this._val = value;
    _this._units = units;
    _this.context = context;
    _this._expressions = _this._getExpressions();
    return _this;
  }
  /**
   * All of the time encoding expressions
   */


  _createClass(TimeBaseClass, [{
    key: "_getExpressions",
    value: function _getExpressions() {
      var _this2 = this;

      return {
        hz: {
          method: function method(value) {
            return _this2._frequencyToUnits(parseFloat(value));
          },
          regexp: /^(\d+(?:\.\d+)?)hz$/i
        },
        i: {
          method: function method(value) {
            return _this2._ticksToUnits(parseInt(value, 10));
          },
          regexp: /^(\d+)i$/i
        },
        m: {
          method: function method(value) {
            return _this2._beatsToUnits(parseInt(value, 10) * _this2._getTimeSignature());
          },
          regexp: /^(\d+)m$/i
        },
        n: {
          method: function method(value, dot) {
            var numericValue = parseInt(value, 10);
            var scalar = dot === "." ? 1.5 : 1;

            if (numericValue === 1) {
              return _this2._beatsToUnits(_this2._getTimeSignature()) * scalar;
            } else {
              return _this2._beatsToUnits(4 / numericValue) * scalar;
            }
          },
          regexp: /^(\d+)n(\.?)$/i
        },
        number: {
          method: function method(value) {
            return _this2._expressions[_this2.defaultUnits].method.call(_this2, value);
          },
          regexp: /^(\d+(?:\.\d+)?)$/
        },
        s: {
          method: function method(value) {
            return _this2._secondsToUnits(parseFloat(value));
          },
          regexp: /^(\d+(?:\.\d+)?)s$/
        },
        samples: {
          method: function method(value) {
            return parseInt(value, 10) / _this2.context.sampleRate;
          },
          regexp: /^(\d+)samples$/
        },
        t: {
          method: function method(value) {
            var numericValue = parseInt(value, 10);
            return _this2._beatsToUnits(8 / (Math.floor(numericValue) * 3));
          },
          regexp: /^(\d+)t$/i
        },
        tr: {
          method: function method(m, q, s) {
            var total = 0;

            if (m && m !== "0") {
              total += _this2._beatsToUnits(_this2._getTimeSignature() * parseFloat(m));
            }

            if (q && q !== "0") {
              total += _this2._beatsToUnits(parseFloat(q));
            }

            if (s && s !== "0") {
              total += _this2._beatsToUnits(parseFloat(s) / 4);
            }

            return total;
          },
          regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/
        }
      };
    } //-------------------------------------
    // 	VALUE OF
    //-------------------------------------

    /**
     * Evaluate the time value. Returns the time in seconds.
     */

  }, {
    key: "valueOf",
    value: function valueOf() {
      if (this._val instanceof TimeBaseClass) {
        this.fromType(this._val);
      }

      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(this._val)) {
        return this._noArg();
      } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isString"])(this._val) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(this._units)) {
        for (var units in this._expressions) {
          if (this._expressions[units].regexp.test(this._val.trim())) {
            this._units = units;
            break;
          }
        }
      } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(this._val)) {
        var total = 0;

        for (var typeName in this._val) {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this._val[typeName])) {
            var quantity = this._val[typeName]; // @ts-ignore

            var time = new this.constructor(this.context, typeName).valueOf() * quantity;
            total += time;
          }
        }

        return total;
      }

      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this._units)) {
        var expr = this._expressions[this._units];

        var matching = this._val.toString().trim().match(expr.regexp);

        if (matching) {
          return expr.method.apply(this, matching.slice(1));
        } else {
          return expr.method.call(this, this._val);
        }
      } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isString"])(this._val)) {
        return parseFloat(this._val);
      } else {
        return this._val;
      }
    } //-------------------------------------
    // 	UNIT CONVERSIONS
    //-------------------------------------

    /**
     * Returns the value of a frequency in the current units
     */

  }, {
    key: "_frequencyToUnits",
    value: function _frequencyToUnits(freq) {
      return 1 / freq;
    }
    /**
     * Return the value of the beats in the current units
     */

  }, {
    key: "_beatsToUnits",
    value: function _beatsToUnits(beats) {
      return 60 / this._getBpm() * beats;
    }
    /**
     * Returns the value of a second in the current units
     */

  }, {
    key: "_secondsToUnits",
    value: function _secondsToUnits(seconds) {
      return seconds;
    }
    /**
     * Returns the value of a tick in the current time units
     */

  }, {
    key: "_ticksToUnits",
    value: function _ticksToUnits(ticks) {
      return ticks * this._beatsToUnits(1) / this._getPPQ();
    }
    /**
     * With no arguments, return 'now'
     */

  }, {
    key: "_noArg",
    value: function _noArg() {
      return this._now();
    } //-------------------------------------
    // 	TEMPO CONVERSIONS
    //-------------------------------------

    /**
     * Return the bpm
     */

  }, {
    key: "_getBpm",
    value: function _getBpm() {
      return this.context.transport.bpm.value;
    }
    /**
     * Return the timeSignature
     */

  }, {
    key: "_getTimeSignature",
    value: function _getTimeSignature() {
      return this.context.transport.timeSignature;
    }
    /**
     * Return the PPQ or 192 if Transport is not available
     */

  }, {
    key: "_getPPQ",
    value: function _getPPQ() {
      return this.context.transport.PPQ;
    } //-------------------------------------
    // 	CONVERSION INTERFACE
    //-------------------------------------

    /**
     * Coerce a time type into this units type.
     * @param type Any time type units
     */

  }, {
    key: "fromType",
    value: function fromType(type) {
      this._units = undefined;

      switch (this.defaultUnits) {
        case "s":
          this._val = type.toSeconds();
          break;

        case "i":
          this._val = type.toTicks();
          break;

        case "hz":
          this._val = type.toFrequency();
          break;

        case "midi":
          this._val = type.toMidi();
          break;
      }

      return this;
    }
    /**
     * Return the value in hertz
     */

  }, {
    key: "toFrequency",
    value: function toFrequency() {
      return 1 / this.toSeconds();
    }
    /**
     * Return the time in samples
     */

  }, {
    key: "toSamples",
    value: function toSamples() {
      return this.toSeconds() * this.context.sampleRate;
    }
    /**
     * Return the time in milliseconds.
     */

  }, {
    key: "toMilliseconds",
    value: function toMilliseconds() {
      return this.toSeconds() * 1000;
    }
  }]);

  return TimeBaseClass;
}(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/TransportTime.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/TransportTime.js ***!
  \****************************************************************/
/*! exports provided: TransportTimeClass, TransportTime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function() { return TransportTimeClass; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransportTime", function() { return TransportTime; });
/* harmony import */ var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony import */ var _Time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Time */ "./node_modules/tone/build/esm/core/type/Time.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * TransportTime is a the time along the Transport's
 * timeline. It is similar to Tone.Time, but instead of evaluating
 * against the AudioContext's clock, it is evaluated against
 * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
 * @category Unit
 */

var TransportTimeClass = /*#__PURE__*/function (_TimeClass) {
  _inherits(TransportTimeClass, _TimeClass);

  var _super = _createSuper(TransportTimeClass);

  function TransportTimeClass() {
    var _this;

    _classCallCheck(this, TransportTimeClass);

    _this = _super.apply(this, arguments);
    _this.name = "TransportTime";
    return _this;
  }
  /**
   * Return the current time in whichever context is relevant
   */


  _createClass(TransportTimeClass, [{
    key: "_now",
    value: function _now() {
      return this.context.transport.seconds;
    }
  }]);

  return TransportTimeClass;
}(_Time__WEBPACK_IMPORTED_MODULE_1__["TimeClass"]);
/**
 * TransportTime is a the time along the Transport's
 * timeline. It is similar to [[Time]], but instead of evaluating
 * against the AudioContext's clock, it is evaluated against
 * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
 * @category Unit
 */

function TransportTime(value, units) {
  return new TransportTimeClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/type/Units.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/type/Units.js ***!
  \********************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _NoteUnits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NoteUnits */ "./node_modules/tone/build/esm/core/type/NoteUnits.js");
/* empty/unused harmony star reexport */

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js ***!
  \********************************************************************/
/*! exports provided: isAudioParam, isAudioNode, isOfflineAudioContext, isAudioContext, isAudioBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioParam", function() { return isAudioParam; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioNode", function() { return isAudioNode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOfflineAudioContext", function() { return isOfflineAudioContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioContext", function() { return isAudioContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isAudioBuffer", function() { return isAudioBuffer; });
/* harmony import */ var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! standardized-audio-context */ "./node_modules/standardized-audio-context/build/es2019/module.js");

/**
 * Test if the given value is an instanceof AudioParam
 */

function isAudioParam(arg) {
  return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyAudioParam"])(arg);
}
/**
 * Test if the given value is an instanceof AudioNode
 */

function isAudioNode(arg) {
  return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyAudioNode"])(arg);
}
/**
 * Test if the arg is instanceof an OfflineAudioContext
 */

function isOfflineAudioContext(arg) {
  return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyOfflineAudioContext"])(arg);
}
/**
 * Test if the arg is an instanceof AudioContext
 */

function isAudioContext(arg) {
  return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyAudioContext"])(arg);
}
/**
 * Test if the arg is instanceof an AudioBuffer
 */

function isAudioBuffer(arg) {
  return arg instanceof AudioBuffer;
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Debug.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Debug.js ***!
  \********************************************************/
/*! exports provided: assert, assertRange, assertContextRunning, setLogger, log, warn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assert", function() { return assert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assertRange", function() { return assertRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assertContextRunning", function() { return assertContextRunning; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLogger", function() { return setLogger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warn", function() { return warn; });
/**
 * Assert that the statement is true, otherwise invoke the error.
 * @param statement
 * @param error The message which is passed into an Error
 */
function assert(statement, error) {
  if (!statement) {
    throw new Error(error);
  }
}
/**
 * Make sure that the given value is within the range
 */

function assertRange(value, gte) {
  var lte = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;

  if (!(gte <= value && value <= lte)) {
    throw new RangeError("Value must be within [".concat(gte, ", ").concat(lte, "], got: ").concat(value));
  }
}
/**
 * Make sure that the given value is within the range
 */

function assertContextRunning(context) {
  // add a warning if the context is not started
  if (!context.isOffline && context.state !== "running") {
    warn("The AudioContext is \"suspended\". Invoke Tone.start() from a user action to start the audio.");
  }
}
/**
 * The default logger is the console
 */

var defaultLogger = console;
/**
 * Set the logging interface
 */

function setLogger(logger) {
  defaultLogger = logger;
}
/**
 * Log anything
 */

function log() {
  var _defaultLogger;

  (_defaultLogger = defaultLogger).log.apply(_defaultLogger, arguments);
}
/**
 * Warn anything
 */

function warn() {
  var _defaultLogger2;

  (_defaultLogger2 = defaultLogger).warn.apply(_defaultLogger2, arguments);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Decorator.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Decorator.js ***!
  \************************************************************/
/*! exports provided: range, timeRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "range", function() { return range; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timeRange", function() { return timeRange; });
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");

/**
 * Assert that the number is in the given range.
 */

function range(min) {
  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;
  var valueMap = new WeakMap();
  return function (target, propertyKey) {
    Reflect.defineProperty(target, propertyKey, {
      configurable: true,
      enumerable: true,
      get: function get() {
        return valueMap.get(this);
      },
      set: function set(newValue) {
        Object(_Debug__WEBPACK_IMPORTED_MODULE_0__["assertRange"])(newValue, min, max);
        valueMap.set(this, newValue);
      }
    });
  };
}
/**
 * Convert the time to seconds and assert that the time is in between the two
 * values when being set.
 */

function timeRange(min) {
  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;
  var valueMap = new WeakMap();
  return function (target, propertyKey) {
    Reflect.defineProperty(target, propertyKey, {
      configurable: true,
      enumerable: true,
      get: function get() {
        return valueMap.get(this);
      },
      set: function set(newValue) {
        Object(_Debug__WEBPACK_IMPORTED_MODULE_0__["assertRange"])(this.toSeconds(newValue), min, max);
        valueMap.set(this, newValue);
      }
    });
  };
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Defaults.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Defaults.js ***!
  \***********************************************************/
/*! exports provided: deepMerge, deepEquals, optionsFromArguments, getDefaultsFromInstance, defaultArg, omitFromObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepMerge", function() { return deepMerge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deepEquals", function() { return deepEquals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function() { return optionsFromArguments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDefaultsFromInstance", function() { return getDefaultsFromInstance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultArg", function() { return defaultArg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "omitFromObject", function() { return omitFromObject; });
/* harmony import */ var _AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/**
 * Some objects should not be merged
 */

function noCopy(key, arg) {
  return key === "value" || Object(_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(arg) || Object(_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(arg) || Object(_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioBuffer"])(arg);
}

function deepMerge(target) {
  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    sources[_key - 1] = arguments[_key];
  }

  if (!sources.length) {
    return target;
  }

  var source = sources.shift();

  if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(target) && Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(source)) {
    for (var key in source) {
      if (noCopy(key, source[key])) {
        target[key] = source[key];
      } else if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(source[key])) {
        if (!target[key]) {
          Object.assign(target, _defineProperty({}, key, {}));
        }

        deepMerge(target[key], source[key]);
      } else {
        Object.assign(target, _defineProperty({}, key, source[key]));
      }
    }
  } // @ts-ignore


  return deepMerge.apply(void 0, [target].concat(sources));
}
/**
 * Returns true if the two arrays have the same value for each of the elements
 */

function deepEquals(arrayA, arrayB) {
  return arrayA.length === arrayB.length && arrayA.every(function (element, index) {
    return arrayB[index] === element;
  });
}
/**
 * Convert an args array into an object.
 */

function optionsFromArguments(defaults, argsArray) {
  var keys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var objKey = arguments.length > 3 ? arguments[3] : undefined;
  var opts = {};
  var args = Array.from(argsArray); // if the first argument is an object and has an object key

  if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(args[0]) && objKey && !Reflect.has(args[0], objKey)) {
    // if it's not part of the defaults
    var partOfDefaults = Object.keys(args[0]).some(function (key) {
      return Reflect.has(defaults, key);
    });

    if (!partOfDefaults) {
      // merge that key
      deepMerge(opts, _defineProperty({}, objKey, args[0])); // remove the obj key from the keys

      keys.splice(keys.indexOf(objKey), 1); // shift the first argument off

      args.shift();
    }
  }

  if (args.length === 1 && Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(args[0])) {
    deepMerge(opts, args[0]);
  } else {
    for (var i = 0; i < keys.length; i++) {
      if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(args[i])) {
        opts[keys[i]] = args[i];
      }
    }
  }

  return deepMerge(defaults, opts);
}
/**
 * Return this instances default values by calling Constructor.getDefaults()
 */

function getDefaultsFromInstance(instance) {
  return instance.constructor.getDefaults();
}
/**
 * Returns the fallback if the given object is undefined.
 * Take an array of arguments and return a formatted options object.
 */

function defaultArg(given, fallback) {
  if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(given)) {
    return fallback;
  } else {
    return given;
  }
}
/**
 * Remove all of the properties belonging to omit from obj.
 */

function omitFromObject(obj, omit) {
  omit.forEach(function (prop) {
    if (Reflect.has(obj, prop)) {
      delete obj[prop];
    }
  });
  return obj;
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Draw.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Draw.js ***!
  \*******************************************************/
/*! exports provided: Draw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Draw", function() { return Draw; });
/* harmony import */ var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../context/ContextInitialization */ "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Draw is useful for synchronizing visuals and audio events.
 * Callbacks from Tone.Transport or any of the Tone.Event classes
 * always happen _before_ the scheduled time and are not synchronized
 * to the animation frame so they are not good for triggering tightly
 * synchronized visuals and sound. Draw makes it easy to schedule
 * callbacks using the AudioContext time and uses requestAnimationFrame.
 * @example
 * Tone.Transport.schedule((time) => {
 * 	// use the time argument to schedule a callback with Draw
 * 	Tone.Draw.schedule(() => {
 * 		// do drawing or DOM manipulation here
 * 		console.log(time);
 * 	}, time);
 * }, "+0.5");
 * Tone.Transport.start();
 * @category Core
 */

var Draw = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(Draw, _ToneWithContext);

  var _super = _createSuper(Draw);

  function Draw() {
    var _this;

    _classCallCheck(this, Draw);

    _this = _super.apply(this, arguments);
    _this.name = "Draw";
    /**
     * The duration after which events are not invoked.
     */

    _this.expiration = 0.25;
    /**
     * The amount of time before the scheduled time
     * that the callback can be invoked. Default is
     * half the time of an animation frame (0.008 seconds).
     */

    _this.anticipation = 0.008;
    /**
     * All of the events.
     */

    _this._events = new _Timeline__WEBPACK_IMPORTED_MODULE_1__["Timeline"]();
    /**
     * The draw loop
     */

    _this._boundDrawLoop = _this._drawLoop.bind(_assertThisInitialized(_this));
    /**
     * The animation frame id
     */

    _this._animationFrame = -1;
    return _this;
  }
  /**
   * Schedule a function at the given time to be invoked
   * on the nearest animation frame.
   * @param  callback  Callback is invoked at the given time.
   * @param  time      The time relative to the AudioContext time to invoke the callback.
   * @example
   * Tone.Transport.scheduleRepeat(time => {
   * 	Tone.Draw.schedule(() => console.log(time), time);
   * }, 1);
   * Tone.Transport.start();
   */


  _createClass(Draw, [{
    key: "schedule",
    value: function schedule(callback, time) {
      this._events.add({
        callback: callback,
        time: this.toSeconds(time)
      }); // start the draw loop on the first event


      if (this._events.length === 1) {
        this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
      }

      return this;
    }
    /**
     * Cancel events scheduled after the given time
     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.
     */

  }, {
    key: "cancel",
    value: function cancel(after) {
      this._events.cancel(this.toSeconds(after));

      return this;
    }
    /**
     * The draw loop
     */

  }, {
    key: "_drawLoop",
    value: function _drawLoop() {
      var now = this.context.currentTime;

      while (this._events.length && this._events.peek().time - this.anticipation <= now) {
        var event = this._events.shift();

        if (event && now - event.time <= this.expiration) {
          event.callback();
        }
      }

      if (this._events.length > 0) {
        this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Draw.prototype), "dispose", this).call(this);

      this._events.dispose();

      cancelAnimationFrame(this._animationFrame);
      return this;
    }
  }]);

  return Draw;
}(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"]); //-------------------------------------
// 	INITIALIZATION
//-------------------------------------

Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
  context.draw = new Draw({
    context: context
  });
});
Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
  context.draw.dispose();
});

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Emitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Emitter.js ***!
  \**********************************************************/
/*! exports provided: Emitter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Emitter", function() { return Emitter; });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Emitter gives classes which extend it
 * the ability to listen for and emit events.
 * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).
 * MIT (c) 2011 Jerome Etienne.
 * @category Core
 */

var Emitter = /*#__PURE__*/function (_Tone) {
  _inherits(Emitter, _Tone);

  var _super = _createSuper(Emitter);

  function Emitter() {
    var _this;

    _classCallCheck(this, Emitter);

    _this = _super.apply(this, arguments);
    _this.name = "Emitter";
    return _this;
  }
  /**
   * Bind a callback to a specific event.
   * @param  event     The name of the event to listen for.
   * @param  callback  The callback to invoke when the event is emitted
   */


  _createClass(Emitter, [{
    key: "on",
    value: function on(event, callback) {
      var _this2 = this;

      // split the event
      var events = event.split(/\W+/);
      events.forEach(function (eventName) {
        if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(_this2._events)) {
          _this2._events = {};
        }

        if (!_this2._events.hasOwnProperty(eventName)) {
          _this2._events[eventName] = [];
        }

        _this2._events[eventName].push(callback);
      });
      return this;
    }
    /**
     * Bind a callback which is only invoked once
     * @param  event     The name of the event to listen for.
     * @param  callback  The callback to invoke when the event is emitted
     */

  }, {
    key: "once",
    value: function once(event, callback) {
      var _this3 = this;

      var boundCallback = function boundCallback() {
        // invoke the callback
        callback.apply(void 0, arguments); // remove the event

        _this3.off(event, boundCallback);
      };

      this.on(event, boundCallback);
      return this;
    }
    /**
     * Remove the event listener.
     * @param  event     The event to stop listening to.
     * @param  callback  The callback which was bound to the event with Emitter.on.
     *                   If no callback is given, all callbacks events are removed.
     */

  }, {
    key: "off",
    value: function off(event, callback) {
      var _this4 = this;

      var events = event.split(/\W+/);
      events.forEach(function (eventName) {
        if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(_this4._events)) {
          _this4._events = {};
        }

        if (_this4._events.hasOwnProperty(event)) {
          if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(callback)) {
            _this4._events[event] = [];
          } else {
            var eventList = _this4._events[event];

            for (var i = eventList.length - 1; i >= 0; i--) {
              if (eventList[i] === callback) {
                eventList.splice(i, 1);
              }
            }
          }
        }
      });
      return this;
    }
    /**
     * Invoke all of the callbacks bound to the event
     * with any arguments passed in.
     * @param  event  The name of the event.
     * @param args The arguments to pass to the functions listening.
     */

  }, {
    key: "emit",
    value: function emit(event) {
      if (this._events) {
        if (this._events.hasOwnProperty(event)) {
          var eventList = this._events[event].slice(0);

          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          for (var i = 0, len = eventList.length; i < len; i++) {
            eventList[i].apply(this, args);
          }
        }
      }

      return this;
    }
    /**
     * Add Emitter functions (on/off/emit) to the object
     */

  }, {
    key: "dispose",
    value:
    /**
     * Clean up
     */
    function dispose() {
      _get(_getPrototypeOf(Emitter.prototype), "dispose", this).call(this);

      this._events = undefined;
      return this;
    }
  }], [{
    key: "mixin",
    value: function mixin(constr) {
      // instance._events = {};
      ["on", "once", "off", "emit"].forEach(function (name) {
        var property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);
        Object.defineProperty(constr.prototype, name, property);
      });
    }
  }]);

  return Emitter;
}(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Interface.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Interface.js ***!
  \************************************************************/
/*! exports provided: readOnly, writable, noOp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readOnly", function() { return readOnly; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "writable", function() { return writable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noOp", function() { return noOp; });
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");

/**
 * Make the property not writable using `defineProperty`. Internal use only.
 */

function readOnly(target, property) {
  if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_0__["isArray"])(property)) {
    property.forEach(function (str) {
      return readOnly(target, str);
    });
  } else {
    Object.defineProperty(target, property, {
      enumerable: true,
      writable: false
    });
  }
}
/**
 * Make an attribute writeable. Internal use only.
 */

function writable(target, property) {
  if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_0__["isArray"])(property)) {
    property.forEach(function (str) {
      return writable(target, str);
    });
  } else {
    Object.defineProperty(target, property, {
      writable: true
    });
  }
}
var noOp = function noOp() {// no operation here!
};

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/IntervalTimeline.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/IntervalTimeline.js ***!
  \*******************************************************************/
/*! exports provided: IntervalTimeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function() { return IntervalTimeline; });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Similar to Tone.Timeline, but all events represent
 * intervals with both "time" and "duration" times. The
 * events are placed in a tree structure optimized
 * for querying an intersection point with the timeline
 * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)
 * to represent the data.
 */

var IntervalTimeline = /*#__PURE__*/function (_Tone) {
  _inherits(IntervalTimeline, _Tone);

  var _super = _createSuper(IntervalTimeline);

  function IntervalTimeline() {
    var _this;

    _classCallCheck(this, IntervalTimeline);

    _this = _super.apply(this, arguments);
    _this.name = "IntervalTimeline";
    /**
     * The root node of the inteval tree
     */

    _this._root = null;
    /**
     * Keep track of the length of the timeline.
     */

    _this._length = 0;
    return _this;
  }
  /**
   * The event to add to the timeline. All events must
   * have a time and duration value
   * @param  event  The event to add to the timeline
   */


  _createClass(IntervalTimeline, [{
    key: "add",
    value: function add(event) {
      Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(event.time), "Events must have a time property");
      Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(event.duration), "Events must have a duration parameter");
      event.time = event.time.valueOf();
      var node = new IntervalNode(event.time, event.time + event.duration, event);

      if (this._root === null) {
        this._root = node;
      } else {
        this._root.insert(node);
      }

      this._length++; // Restructure tree to be balanced

      while (node !== null) {
        node.updateHeight();
        node.updateMax();

        this._rebalance(node);

        node = node.parent;
      }

      return this;
    }
    /**
     * Remove an event from the timeline.
     * @param  event  The event to remove from the timeline
     */

  }, {
    key: "remove",
    value: function remove(event) {
      if (this._root !== null) {
        var results = [];

        this._root.search(event.time, results);

        for (var _i = 0, _results = results; _i < _results.length; _i++) {
          var node = _results[_i];

          if (node.event === event) {
            this._removeNode(node);

            this._length--;
            break;
          }
        }
      }

      return this;
    }
    /**
     * The number of items in the timeline.
     * @readOnly
     */

  }, {
    key: "length",
    get: function get() {
      return this._length;
    }
    /**
     * Remove events whose time time is after the given time
     * @param  after  The time to query.
     */

  }, {
    key: "cancel",
    value: function cancel(after) {
      var _this2 = this;

      this.forEachFrom(after, function (event) {
        return _this2.remove(event);
      });
      return this;
    }
    /**
     * Set the root node as the given node
     */

  }, {
    key: "_setRoot",
    value: function _setRoot(node) {
      this._root = node;

      if (this._root !== null) {
        this._root.parent = null;
      }
    }
    /**
     * Replace the references to the node in the node's parent
     * with the replacement node.
     */

  }, {
    key: "_replaceNodeInParent",
    value: function _replaceNodeInParent(node, replacement) {
      if (node.parent !== null) {
        if (node.isLeftChild()) {
          node.parent.left = replacement;
        } else {
          node.parent.right = replacement;
        }

        this._rebalance(node.parent);
      } else {
        this._setRoot(replacement);
      }
    }
    /**
     * Remove the node from the tree and replace it with
     * a successor which follows the schema.
     */

  }, {
    key: "_removeNode",
    value: function _removeNode(node) {
      if (node.left === null && node.right === null) {
        this._replaceNodeInParent(node, null);
      } else if (node.right === null) {
        this._replaceNodeInParent(node, node.left);
      } else if (node.left === null) {
        this._replaceNodeInParent(node, node.right);
      } else {
        var balance = node.getBalance();
        var replacement;
        var temp = null;

        if (balance > 0) {
          if (node.left.right === null) {
            replacement = node.left;
            replacement.right = node.right;
            temp = replacement;
          } else {
            replacement = node.left.right;

            while (replacement.right !== null) {
              replacement = replacement.right;
            }

            if (replacement.parent) {
              replacement.parent.right = replacement.left;
              temp = replacement.parent;
              replacement.left = node.left;
              replacement.right = node.right;
            }
          }
        } else if (node.right.left === null) {
          replacement = node.right;
          replacement.left = node.left;
          temp = replacement;
        } else {
          replacement = node.right.left;

          while (replacement.left !== null) {
            replacement = replacement.left;
          }

          if (replacement.parent) {
            replacement.parent.left = replacement.right;
            temp = replacement.parent;
            replacement.left = node.left;
            replacement.right = node.right;
          }
        }

        if (node.parent !== null) {
          if (node.isLeftChild()) {
            node.parent.left = replacement;
          } else {
            node.parent.right = replacement;
          }
        } else {
          this._setRoot(replacement);
        }

        if (temp) {
          this._rebalance(temp);
        }
      }

      node.dispose();
    }
    /**
     * Rotate the tree to the left
     */

  }, {
    key: "_rotateLeft",
    value: function _rotateLeft(node) {
      var parent = node.parent;
      var isLeftChild = node.isLeftChild(); // Make node.right the new root of this sub tree (instead of node)

      var pivotNode = node.right;

      if (pivotNode) {
        node.right = pivotNode.left;
        pivotNode.left = node;
      }

      if (parent !== null) {
        if (isLeftChild) {
          parent.left = pivotNode;
        } else {
          parent.right = pivotNode;
        }
      } else {
        this._setRoot(pivotNode);
      }
    }
    /**
     * Rotate the tree to the right
     */

  }, {
    key: "_rotateRight",
    value: function _rotateRight(node) {
      var parent = node.parent;
      var isLeftChild = node.isLeftChild(); // Make node.left the new root of this sub tree (instead of node)

      var pivotNode = node.left;

      if (pivotNode) {
        node.left = pivotNode.right;
        pivotNode.right = node;
      }

      if (parent !== null) {
        if (isLeftChild) {
          parent.left = pivotNode;
        } else {
          parent.right = pivotNode;
        }
      } else {
        this._setRoot(pivotNode);
      }
    }
    /**
     * Balance the BST
     */

  }, {
    key: "_rebalance",
    value: function _rebalance(node) {
      var balance = node.getBalance();

      if (balance > 1 && node.left) {
        if (node.left.getBalance() < 0) {
          this._rotateLeft(node.left);
        } else {
          this._rotateRight(node);
        }
      } else if (balance < -1 && node.right) {
        if (node.right.getBalance() > 0) {
          this._rotateRight(node.right);
        } else {
          this._rotateLeft(node);
        }
      }
    }
    /**
     * Get an event whose time and duration span the give time. Will
     * return the match whose "time" value is closest to the given time.
     * @return  The event which spans the desired time
     */

  }, {
    key: "get",
    value: function get(time) {
      if (this._root !== null) {
        var results = [];

        this._root.search(time, results);

        if (results.length > 0) {
          var max = results[0];

          for (var i = 1; i < results.length; i++) {
            if (results[i].low > max.low) {
              max = results[i];
            }
          }

          return max.event;
        }
      }

      return null;
    }
    /**
     * Iterate over everything in the timeline.
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEach",
    value: function forEach(callback) {
      if (this._root !== null) {
        var allNodes = [];

        this._root.traverse(function (node) {
          return allNodes.push(node);
        });

        allNodes.forEach(function (node) {
          if (node.event) {
            callback(node.event);
          }
        });
      }

      return this;
    }
    /**
     * Iterate over everything in the array in which the given time
     * overlaps with the time and duration time of the event.
     * @param  time The time to check if items are overlapping
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEachAtTime",
    value: function forEachAtTime(time, callback) {
      if (this._root !== null) {
        var results = [];

        this._root.search(time, results);

        results.forEach(function (node) {
          if (node.event) {
            callback(node.event);
          }
        });
      }

      return this;
    }
    /**
     * Iterate over everything in the array in which the time is greater
     * than or equal to the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEachFrom",
    value: function forEachFrom(time, callback) {
      if (this._root !== null) {
        var results = [];

        this._root.searchAfter(time, results);

        results.forEach(function (node) {
          if (node.event) {
            callback(node.event);
          }
        });
      }

      return this;
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(IntervalTimeline.prototype), "dispose", this).call(this);

      if (this._root !== null) {
        this._root.traverse(function (node) {
          return node.dispose();
        });
      }

      this._root = null;
      return this;
    }
  }]);

  return IntervalTimeline;
}(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]); //-------------------------------------
// 	INTERVAL NODE HELPER
//-------------------------------------

/**
 * Represents a node in the binary search tree, with the addition
 * of a "high" value which keeps track of the highest value of
 * its children.
 * References:
 * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/
 * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf
 * @param low
 * @param high
 */

var IntervalNode = /*#__PURE__*/function () {
  function IntervalNode(low, high, event) {
    _classCallCheck(this, IntervalNode);

    // the nodes to the left
    this._left = null; // the nodes to the right

    this._right = null; // the parent node

    this.parent = null; // the number of child nodes

    this.height = 0;
    this.event = event; // the low value

    this.low = low; // the high value

    this.high = high; // the high value for this and all child nodes

    this.max = this.high;
  }
  /**
   * Insert a node into the correct spot in the tree
   */


  _createClass(IntervalNode, [{
    key: "insert",
    value: function insert(node) {
      if (node.low <= this.low) {
        if (this.left === null) {
          this.left = node;
        } else {
          this.left.insert(node);
        }
      } else if (this.right === null) {
        this.right = node;
      } else {
        this.right.insert(node);
      }
    }
    /**
     * Search the tree for nodes which overlap
     * with the given point
     * @param  point  The point to query
     * @param  results  The array to put the results
     */

  }, {
    key: "search",
    value: function search(point, results) {
      // If p is to the right of the rightmost point of any interval
      // in this node and all children, there won't be any matches.
      if (point > this.max) {
        return;
      } // Search left children


      if (this.left !== null) {
        this.left.search(point, results);
      } // Check this node


      if (this.low <= point && this.high > point) {
        results.push(this);
      } // If p is to the left of the time of this interval,
      // then it can't be in any child to the right.


      if (this.low > point) {
        return;
      } // Search right children


      if (this.right !== null) {
        this.right.search(point, results);
      }
    }
    /**
     * Search the tree for nodes which are less
     * than the given point
     * @param  point  The point to query
     * @param  results  The array to put the results
     */

  }, {
    key: "searchAfter",
    value: function searchAfter(point, results) {
      // Check this node
      if (this.low >= point) {
        results.push(this);

        if (this.left !== null) {
          this.left.searchAfter(point, results);
        }
      } // search the right side


      if (this.right !== null) {
        this.right.searchAfter(point, results);
      }
    }
    /**
     * Invoke the callback on this element and both it's branches
     * @param  {Function}  callback
     */

  }, {
    key: "traverse",
    value: function traverse(callback) {
      callback(this);

      if (this.left !== null) {
        this.left.traverse(callback);
      }

      if (this.right !== null) {
        this.right.traverse(callback);
      }
    }
    /**
     * Update the height of the node
     */

  }, {
    key: "updateHeight",
    value: function updateHeight() {
      if (this.left !== null && this.right !== null) {
        this.height = Math.max(this.left.height, this.right.height) + 1;
      } else if (this.right !== null) {
        this.height = this.right.height + 1;
      } else if (this.left !== null) {
        this.height = this.left.height + 1;
      } else {
        this.height = 0;
      }
    }
    /**
     * Update the height of the node
     */

  }, {
    key: "updateMax",
    value: function updateMax() {
      this.max = this.high;

      if (this.left !== null) {
        this.max = Math.max(this.max, this.left.max);
      }

      if (this.right !== null) {
        this.max = Math.max(this.max, this.right.max);
      }
    }
    /**
     * The balance is how the leafs are distributed on the node
     * @return  Negative numbers are balanced to the right
     */

  }, {
    key: "getBalance",
    value: function getBalance() {
      var balance = 0;

      if (this.left !== null && this.right !== null) {
        balance = this.left.height - this.right.height;
      } else if (this.left !== null) {
        balance = this.left.height + 1;
      } else if (this.right !== null) {
        balance = -(this.right.height + 1);
      }

      return balance;
    }
    /**
     * @returns true if this node is the left child of its parent
     */

  }, {
    key: "isLeftChild",
    value: function isLeftChild() {
      return this.parent !== null && this.parent.left === this;
    }
    /**
     * get/set the left node
     */

  }, {
    key: "left",
    get: function get() {
      return this._left;
    },
    set: function set(node) {
      this._left = node;

      if (node !== null) {
        node.parent = this;
      }

      this.updateHeight();
      this.updateMax();
    }
    /**
     * get/set the right node
     */

  }, {
    key: "right",
    get: function get() {
      return this._right;
    },
    set: function set(node) {
      this._right = node;

      if (node !== null) {
        node.parent = this;
      }

      this.updateHeight();
      this.updateMax();
    }
    /**
     * null out references.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      this.parent = null;
      this._left = null;
      this._right = null;
      this.event = null;
    }
  }]);

  return IntervalNode;
}();

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Math.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Math.js ***!
  \*******************************************************/
/*! exports provided: GT, GTE, LT, EQ, clamp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GT", function() { return GT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GTE", function() { return GTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LT", function() { return LT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EQ", function() { return EQ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clamp", function() { return clamp; });
/**
 * The threshold for correctness for operators. Less than one sample even
 * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).
 */
var EPSILON = 1e-6;
/**
 * Test if A is greater than B
 */

function GT(a, b) {
  return a > b + EPSILON;
}
/**
 * Test if A is greater than or equal to B
 */

function GTE(a, b) {
  return GT(a, b) || EQ(a, b);
}
/**
 * Test if A is less than B
 */

function LT(a, b) {
  return a + EPSILON < b;
}
/**
 * Test if A is less than B
 */

function EQ(a, b) {
  return Math.abs(a - b) < EPSILON;
}
/**
 * Clamp the value within the given range
 */

function clamp(value, min, max) {
  return Math.max(Math.min(value, max), min);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/StateTimeline.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/StateTimeline.js ***!
  \****************************************************************/
/*! exports provided: StateTimeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StateTimeline", function() { return StateTimeline; });
/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * A Timeline State. Provides the methods: `setStateAtTime("state", time)` and `getValueAtTime(time)`
 * @param initial The initial state of the StateTimeline.  Defaults to `undefined`
 */

var StateTimeline = /*#__PURE__*/function (_Timeline) {
  _inherits(StateTimeline, _Timeline);

  var _super = _createSuper(StateTimeline);

  function StateTimeline() {
    var _this;

    var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "stopped";

    _classCallCheck(this, StateTimeline);

    _this = _super.call(this);
    _this.name = "StateTimeline";
    _this._initial = initial;

    _this.setStateAtTime(_this._initial, 0);

    return _this;
  }
  /**
   * Returns the scheduled state scheduled before or at
   * the given time.
   * @param  time  The time to query.
   * @return  The name of the state input in setStateAtTime.
   */


  _createClass(StateTimeline, [{
    key: "getValueAtTime",
    value: function getValueAtTime(time) {
      var event = this.get(time);

      if (event !== null) {
        return event.state;
      } else {
        return this._initial;
      }
    }
    /**
     * Add a state to the timeline.
     * @param  state The name of the state to set.
     * @param  time  The time to query.
     * @param options Any additional options that are needed in the timeline.
     */

  }, {
    key: "setStateAtTime",
    value: function setStateAtTime(state, time, options) {
      Object(_Debug__WEBPACK_IMPORTED_MODULE_1__["assertRange"])(time, 0);
      this.add(Object.assign({}, options, {
        state: state,
        time: time
      }));
      return this;
    }
    /**
     * Return the event before the time with the given state
     * @param  state The state to look for
     * @param  time  When to check before
     * @return  The event with the given state before the time
     */

  }, {
    key: "getLastState",
    value: function getLastState(state, time) {
      // time = this.toSeconds(time);
      var index = this._search(time);

      for (var i = index; i >= 0; i--) {
        var event = this._timeline[i];

        if (event.state === state) {
          return event;
        }
      }
    }
    /**
     * Return the event after the time with the given state
     * @param  state The state to look for
     * @param  time  When to check from
     * @return  The event with the given state after the time
     */

  }, {
    key: "getNextState",
    value: function getNextState(state, time) {
      // time = this.toSeconds(time);
      var index = this._search(time);

      if (index !== -1) {
        for (var i = index; i < this._timeline.length; i++) {
          var event = this._timeline[i];

          if (event.state === state) {
            return event;
          }
        }
      }
    }
  }]);

  return StateTimeline;
}(_Timeline__WEBPACK_IMPORTED_MODULE_0__["Timeline"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/Timeline.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/Timeline.js ***!
  \***********************************************************/
/*! exports provided: Timeline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Timeline", function() { return Timeline; });
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
/* harmony import */ var _Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Math */ "./node_modules/tone/build/esm/core/util/Math.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * A Timeline class for scheduling and maintaining state
 * along a timeline. All events must have a "time" property.
 * Internally, events are stored in time order for fast
 * retrieval.
 */

var Timeline = /*#__PURE__*/function (_Tone) {
  _inherits(Timeline, _Tone);

  var _super = _createSuper(Timeline);

  function Timeline() {
    var _this;

    _classCallCheck(this, Timeline);

    _this = _super.call(this);
    _this.name = "Timeline";
    /**
     * The array of scheduled timeline events
     */

    _this._timeline = [];
    var options = Object(_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Timeline.getDefaults(), arguments, ["memory"]);
    _this.memory = options.memory;
    _this.increasing = options.increasing;
    return _this;
  }

  _createClass(Timeline, [{
    key: "length",
    get:
    /**
     * The number of items in the timeline.
     */
    function get() {
      return this._timeline.length;
    }
    /**
     * Insert an event object onto the timeline. Events must have a "time" attribute.
     * @param event  The event object to insert into the timeline.
     */

  }, {
    key: "add",
    value: function add(event) {
      // the event needs to have a time attribute
      Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Reflect.has(event, "time"), "Timeline: events must have a time attribute");
      event.time = event.time.valueOf();

      if (this.increasing && this.length) {
        var lastValue = this._timeline[this.length - 1];
        Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GTE"])(event.time, lastValue.time), "The time must be greater than or equal to the last scheduled time");

        this._timeline.push(event);
      } else {
        var index = this._search(event.time);

        this._timeline.splice(index + 1, 0, event);
      } // if the length is more than the memory, remove the previous ones


      if (this.length > this.memory) {
        var diff = this.length - this.memory;

        this._timeline.splice(0, diff);
      }

      return this;
    }
    /**
     * Remove an event from the timeline.
     * @param  {Object}  event  The event object to remove from the list.
     * @returns {Timeline} this
     */

  }, {
    key: "remove",
    value: function remove(event) {
      var index = this._timeline.indexOf(event);

      if (index !== -1) {
        this._timeline.splice(index, 1);
      }

      return this;
    }
    /**
     * Get the nearest event whose time is less than or equal to the given time.
     * @param  time  The time to query.
     */

  }, {
    key: "get",
    value: function get(time) {
      var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "time";

      var index = this._search(time, param);

      if (index !== -1) {
        return this._timeline[index];
      } else {
        return null;
      }
    }
    /**
     * Return the first event in the timeline without removing it
     * @returns {Object} The first event object
     */

  }, {
    key: "peek",
    value: function peek() {
      return this._timeline[0];
    }
    /**
     * Return the first event in the timeline and remove it
     */

  }, {
    key: "shift",
    value: function shift() {
      return this._timeline.shift();
    }
    /**
     * Get the event which is scheduled after the given time.
     * @param  time  The time to query.
     */

  }, {
    key: "getAfter",
    value: function getAfter(time) {
      var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "time";

      var index = this._search(time, param);

      if (index + 1 < this._timeline.length) {
        return this._timeline[index + 1];
      } else {
        return null;
      }
    }
    /**
     * Get the event before the event at the given time.
     * @param  time  The time to query.
     */

  }, {
    key: "getBefore",
    value: function getBefore(time) {
      var len = this._timeline.length; // if it's after the last item, return the last item

      if (len > 0 && this._timeline[len - 1].time < time) {
        return this._timeline[len - 1];
      }

      var index = this._search(time);

      if (index - 1 >= 0) {
        return this._timeline[index - 1];
      } else {
        return null;
      }
    }
    /**
     * Cancel events at and after the given time
     * @param  after  The time to query.
     */

  }, {
    key: "cancel",
    value: function cancel(after) {
      if (this._timeline.length > 1) {
        var index = this._search(after);

        if (index >= 0) {
          if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[index].time, after)) {
            // get the first item with that time
            for (var i = index; i >= 0; i--) {
              if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[i].time, after)) {
                index = i;
              } else {
                break;
              }
            }

            this._timeline = this._timeline.slice(0, index);
          } else {
            this._timeline = this._timeline.slice(0, index + 1);
          }
        } else {
          this._timeline = [];
        }
      } else if (this._timeline.length === 1) {
        // the first item's time
        if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GTE"])(this._timeline[0].time, after)) {
          this._timeline = [];
        }
      }

      return this;
    }
    /**
     * Cancel events before or equal to the given time.
     * @param  time  The time to cancel before.
     */

  }, {
    key: "cancelBefore",
    value: function cancelBefore(time) {
      var index = this._search(time);

      if (index >= 0) {
        this._timeline = this._timeline.slice(index + 1);
      }

      return this;
    }
    /**
     * Returns the previous event if there is one. null otherwise
     * @param  event The event to find the previous one of
     * @return The event right before the given event
     */

  }, {
    key: "previousEvent",
    value: function previousEvent(event) {
      var index = this._timeline.indexOf(event);

      if (index > 0) {
        return this._timeline[index - 1];
      } else {
        return null;
      }
    }
    /**
     * Does a binary search on the timeline array and returns the
     * nearest event index whose time is after or equal to the given time.
     * If a time is searched before the first index in the timeline, -1 is returned.
     * If the time is after the end, the index of the last item is returned.
     */

  }, {
    key: "_search",
    value: function _search(time) {
      var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "time";

      if (this._timeline.length === 0) {
        return -1;
      }

      var beginning = 0;
      var len = this._timeline.length;
      var end = len;

      if (len > 0 && this._timeline[len - 1][param] <= time) {
        return len - 1;
      }

      while (beginning < end) {
        // calculate the midpoint for roughly equal partition
        var midPoint = Math.floor(beginning + (end - beginning) / 2);
        var event = this._timeline[midPoint];
        var nextEvent = this._timeline[midPoint + 1];

        if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(event[param], time)) {
          // choose the last one that has the same time
          for (var i = midPoint; i < this._timeline.length; i++) {
            var testEvent = this._timeline[i];

            if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(testEvent[param], time)) {
              midPoint = i;
            } else {
              break;
            }
          }

          return midPoint;
        } else if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["LT"])(event[param], time) && Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GT"])(nextEvent[param], time)) {
          return midPoint;
        } else if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GT"])(event[param], time)) {
          // search lower
          end = midPoint;
        } else {
          // search upper
          beginning = midPoint + 1;
        }
      }

      return -1;
    }
    /**
     * Internal iterator. Applies extra safety checks for
     * removing items from the array.
     */

  }, {
    key: "_iterate",
    value: function _iterate(callback) {
      var lowerBound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var upperBound = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._timeline.length - 1;

      this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);
    }
    /**
     * Iterate over everything in the array
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEach",
    value: function forEach(callback) {
      this._iterate(callback);

      return this;
    }
    /**
     * Iterate over everything in the array at or before the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEachBefore",
    value: function forEachBefore(time, callback) {
      // iterate over the items in reverse so that removing an item doesn't break things
      var upperBound = this._search(time);

      if (upperBound !== -1) {
        this._iterate(callback, 0, upperBound);
      }

      return this;
    }
    /**
     * Iterate over everything in the array after the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEachAfter",
    value: function forEachAfter(time, callback) {
      // iterate over the items in reverse so that removing an item doesn't break things
      var lowerBound = this._search(time);

      this._iterate(callback, lowerBound + 1);

      return this;
    }
    /**
     * Iterate over everything in the array between the startTime and endTime.
     * The timerange is inclusive of the startTime, but exclusive of the endTime.
     * range = [startTime, endTime).
     * @param  startTime The time to check if items are before
     * @param  endTime The end of the test interval.
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEachBetween",
    value: function forEachBetween(startTime, endTime, callback) {
      var lowerBound = this._search(startTime);

      var upperBound = this._search(endTime);

      if (lowerBound !== -1 && upperBound !== -1) {
        if (this._timeline[lowerBound].time !== startTime) {
          lowerBound += 1;
        } // exclusive of the end time


        if (this._timeline[upperBound].time === endTime) {
          upperBound -= 1;
        }

        this._iterate(callback, lowerBound, upperBound);
      } else if (lowerBound === -1) {
        this._iterate(callback, 0, upperBound);
      }

      return this;
    }
    /**
     * Iterate over everything in the array at or after the given time. Similar to
     * forEachAfter, but includes the item(s) at the given time.
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEachFrom",
    value: function forEachFrom(time, callback) {
      // iterate over the items in reverse so that removing an item doesn't break things
      var lowerBound = this._search(time); // work backwards until the event time is less than time


      while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {
        lowerBound--;
      }

      this._iterate(callback, lowerBound + 1);

      return this;
    }
    /**
     * Iterate over everything in the array at the given time
     * @param  time The time to check if items are before
     * @param  callback The callback to invoke with every item
     */

  }, {
    key: "forEachAtTime",
    value: function forEachAtTime(time, callback) {
      // iterate over the items in reverse so that removing an item doesn't break things
      var upperBound = this._search(time);

      if (upperBound !== -1 && Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[upperBound].time, time)) {
        var lowerBound = upperBound;

        for (var i = upperBound; i >= 0; i--) {
          if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[i].time, time)) {
            lowerBound = i;
          } else {
            break;
          }
        }

        this._iterate(function (event) {
          callback(event);
        }, lowerBound, upperBound);
      }

      return this;
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Timeline.prototype), "dispose", this).call(this);

      this._timeline = [];
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return {
        memory: Infinity,
        increasing: false
      };
    }
  }]);

  return Timeline;
}(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/TimelineValue.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/TimelineValue.js ***!
  \****************************************************************/
/*! exports provided: TimelineValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimelineValue", function() { return TimelineValue; });
/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Timeline */ "./node_modules/tone/build/esm/core/util/Timeline.js");
/* harmony import */ var _Tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tone */ "./node_modules/tone/build/esm/core/Tone.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Represents a single value which is gettable and settable in a timed way
 */

var TimelineValue = /*#__PURE__*/function (_Tone) {
  _inherits(TimelineValue, _Tone);

  var _super = _createSuper(TimelineValue);

  /**
   * @param initialValue The value to return if there is no scheduled values
   */
  function TimelineValue(initialValue) {
    var _this;

    _classCallCheck(this, TimelineValue);

    _this = _super.call(this);
    _this.name = "TimelineValue";
    /**
     * The timeline which stores the values
     */

    _this._timeline = new _Timeline__WEBPACK_IMPORTED_MODULE_0__["Timeline"]({
      memory: 10
    });
    _this._initialValue = initialValue;
    return _this;
  }
  /**
   * Set the value at the given time
   */


  _createClass(TimelineValue, [{
    key: "set",
    value: function set(value, time) {
      this._timeline.add({
        value: value,
        time: time
      });

      return this;
    }
    /**
     * Get the value at the given time
     */

  }, {
    key: "get",
    value: function get(time) {
      var event = this._timeline.get(time);

      if (event) {
        return event.value;
      } else {
        return this._initialValue;
      }
    }
  }]);

  return TimelineValue;
}(_Tone__WEBPACK_IMPORTED_MODULE_1__["Tone"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/util/TypeCheck.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/util/TypeCheck.js ***!
  \************************************************************/
/*! exports provided: isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUndef", function() { return isUndef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDefined", function() { return isDefined; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return isFunction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return isNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return isObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return isBoolean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return isArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return isString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNote", function() { return isNote; });
/**
 * Test if the arg is undefined
 */
function isUndef(arg) {
  return typeof arg === "undefined";
}
/**
 * Test if the arg is not undefined
 */

function isDefined(arg) {
  return !isUndef(arg);
}
/**
 * Test if the arg is a function
 */

function isFunction(arg) {
  return typeof arg === "function";
}
/**
 * Test if the argument is a number.
 */

function isNumber(arg) {
  return typeof arg === "number";
}
/**
 * Test if the given argument is an object literal (i.e. `{}`);
 */

function isObject(arg) {
  return Object.prototype.toString.call(arg) === "[object Object]" && arg.constructor === Object;
}
/**
 * Test if the argument is a boolean.
 */

function isBoolean(arg) {
  return typeof arg === "boolean";
}
/**
 * Test if the argument is an Array
 */

function isArray(arg) {
  return Array.isArray(arg);
}
/**
 * Test if the argument is a string.
 */

function isString(arg) {
  return typeof arg === "string";
}
/**
 * Test if the argument is in the form of a note in scientific pitch notation.
 * e.g. "C4"
 */

function isNote(arg) {
  return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js ***!
  \***********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

var delayLine =
/* javascript */
"\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n";
Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__["addToWorklet"])(delayLine);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js ***!
  \*******************************************************************************/
/*! exports provided: singleIOProcess */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "singleIOProcess", function() { return singleIOProcess; });
/* harmony import */ var _ToneAudioWorkletProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ToneAudioWorkletProcessor.worklet */ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js");
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");


var singleIOProcess =
/* javascript */
"\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n";
Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__["addToWorklet"])(singleIOProcess);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js":
/*!**********************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js ***!
  \**********************************************************************/
/*! exports provided: ToneAudioWorklet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneAudioWorklet", function() { return ToneAudioWorklet; });
/* harmony import */ var _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var ToneAudioWorklet = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(ToneAudioWorklet, _ToneAudioNode);

  var _super = _createSuper(ToneAudioWorklet);

  function ToneAudioWorklet(options) {
    var _this;

    _classCallCheck(this, ToneAudioWorklet);

    _this = _super.call(this, options);
    _this.name = "ToneAudioWorklet";
    /**
     * The constructor options for the node
     */

    _this.workletOptions = {};
    /**
     * Callback which is invoked when there is an error in the processing
     */

    _this.onprocessorerror = _util_Interface__WEBPACK_IMPORTED_MODULE_1__["noOp"];
    var blobUrl = URL.createObjectURL(new Blob([Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__["getWorkletGlobalScope"])()], {
      type: "text/javascript"
    }));

    var name = _this._audioWorkletName();

    _this._dummyGain = _this.context.createGain();
    _this._dummyParam = _this._dummyGain.gain; // Register the processor

    _this.context.addAudioWorkletModule(blobUrl, name).then(function () {
      // create the worklet when it's read
      if (!_this.disposed) {
        _this._worklet = _this.context.createAudioWorkletNode(name, _this.workletOptions);
        _this._worklet.onprocessorerror = _this.onprocessorerror.bind(_assertThisInitialized(_this));

        _this.onReady(_this._worklet);
      }
    });

    return _this;
  }

  _createClass(ToneAudioWorklet, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneAudioWorklet.prototype), "dispose", this).call(this);

      this._dummyGain.disconnect();

      if (this._worklet) {
        this._worklet.port.postMessage("dispose");

        this._worklet.disconnect();
      }

      return this;
    }
  }]);

  return ToneAudioWorklet;
}(_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js ***!
  \***************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

var toneAudioWorkletProcessor =
/* javascript */
"\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n";
Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__["addToWorklet"])(toneAudioWorkletProcessor);

/***/ }),

/***/ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js ***!
  \************************************************************************/
/*! exports provided: addToWorklet, registerProcessor, getWorkletGlobalScope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addToWorklet", function() { return addToWorklet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerProcessor", function() { return registerProcessor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getWorkletGlobalScope", function() { return getWorkletGlobalScope; });
/**
 * All of the classes or functions which are loaded into the AudioWorkletGlobalScope
 */
var workletContext = new Set();
/**
 * Add a class to the AudioWorkletGlobalScope
 */

function addToWorklet(classOrFunction) {
  workletContext.add(classOrFunction);
}
/**
 * Register a processor in the AudioWorkletGlobalScope with the given name
 */

function registerProcessor(name, classDesc) {
  var processor =
  /* javascript */
  "registerProcessor(\"".concat(name, "\", ").concat(classDesc, ")");
  workletContext.add(processor);
}
/**
 * Get all of the modules which have been registered to the AudioWorkletGlobalScope
 */

function getWorkletGlobalScope() {
  return Array.from(workletContext).join("\n");
}

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/AutoFilter.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/AutoFilter.js ***!
  \**********************************************************/
/*! exports provided: AutoFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutoFilter", function() { return AutoFilter; });
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _LFOEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LFOEffect */ "./node_modules/tone/build/esm/effect/LFOEffect.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.
 * Setting the LFO rate and depth allows for control over the filter modulation rate
 * and depth.
 *
 * @example
 * // create an autofilter and start it's LFO
 * const autoFilter = new Tone.AutoFilter("4n").toDestination().start();
 * // route an oscillator through the filter and start it
 * const oscillator = new Tone.Oscillator().connect(autoFilter).start();
 * @category Effect
 */

var AutoFilter = /*#__PURE__*/function (_LFOEffect) {
  _inherits(AutoFilter, _LFOEffect);

  var _super = _createSuper(AutoFilter);

  function AutoFilter() {
    var _this;

    _classCallCheck(this, AutoFilter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoFilter.getDefaults(), arguments, ["frequency", "baseFrequency", "octaves"]));
    _this.name = "AutoFilter";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoFilter.getDefaults(), arguments, ["frequency", "baseFrequency", "octaves"]);
    _this.filter = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_0__["Filter"](Object.assign(options.filter, {
      context: _this.context
    })); // connections

    _this.connectEffect(_this.filter);

    _this._lfo.connect(_this.filter.frequency);

    _this.octaves = options.octaves;
    _this.baseFrequency = options.baseFrequency;
    return _this;
  }

  _createClass(AutoFilter, [{
    key: "baseFrequency",
    get:
    /**
     * The minimum value of the filter's cutoff frequency.
     */
    function get() {
      return this._lfo.min;
    },
    set: function set(freq) {
      this._lfo.min = this.toFrequency(freq); // and set the max

      this.octaves = this._octaves;
    }
    /**
     * The maximum value of the filter's cutoff frequency.
     */

  }, {
    key: "octaves",
    get: function get() {
      return this._octaves;
    },
    set: function set(oct) {
      this._octaves = oct;
      this._lfo.max = this._lfo.min * Math.pow(2, oct);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(AutoFilter.prototype), "dispose", this).call(this);

      this.filter.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"].getDefaults(), {
        baseFrequency: 200,
        octaves: 2.6,
        filter: {
          type: "lowpass",
          rolloff: -12,
          Q: 1
        }
      });
    }
  }]);

  return AutoFilter;
}(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/AutoPanner.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/AutoPanner.js ***!
  \**********************************************************/
/*! exports provided: AutoPanner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutoPanner", function() { return AutoPanner; });
/* harmony import */ var _component_channel_Panner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/Panner */ "./node_modules/tone/build/esm/component/channel/Panner.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _LFOEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LFOEffect */ "./node_modules/tone/build/esm/effect/LFOEffect.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.
 * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).
 *
 * @example
 * // create an autopanner and start it
 * const autoPanner = new Tone.AutoPanner("4n").toDestination().start();
 * // route an oscillator through the panner and start it
 * const oscillator = new Tone.Oscillator().connect(autoPanner).start();
 * @category Effect
 */

var AutoPanner = /*#__PURE__*/function (_LFOEffect) {
  _inherits(AutoPanner, _LFOEffect);

  var _super = _createSuper(AutoPanner);

  function AutoPanner() {
    var _this;

    _classCallCheck(this, AutoPanner);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoPanner.getDefaults(), arguments, ["frequency"]));
    _this.name = "AutoPanner";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoPanner.getDefaults(), arguments, ["frequency"]);
    _this._panner = new _component_channel_Panner__WEBPACK_IMPORTED_MODULE_0__["Panner"]({
      context: _this.context,
      channelCount: options.channelCount
    }); // connections

    _this.connectEffect(_this._panner);

    _this._lfo.connect(_this._panner.pan);

    _this._lfo.min = -1;
    _this._lfo.max = 1;
    return _this;
  }

  _createClass(AutoPanner, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(AutoPanner.prototype), "dispose", this).call(this);

      this._panner.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"].getDefaults(), {
        channelCount: 1
      });
    }
  }]);

  return AutoPanner;
}(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/AutoWah.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/AutoWah.js ***!
  \*******************************************************/
/*! exports provided: AutoWah */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutoWah", function() { return AutoWah; });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _component_analysis_Follower__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/analysis/Follower */ "./node_modules/tone/build/esm/component/analysis/Follower.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _signal_ScaleExp__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/ScaleExp */ "./node_modules/tone/build/esm/signal/ScaleExp.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * AutoWah connects a [[Follower]] to a [[Filter]].
 * The frequency of the filter, follows the input amplitude curve.
 * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).
 *
 * @example
 * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();
 * // initialize the synth and connect to autowah
 * const synth = new Tone.Synth().connect(autoWah);
 * // Q value influences the effect of the wah - default is 2
 * autoWah.Q.value = 6;
 * // more audible on higher notes
 * synth.triggerAttackRelease("C4", "8n");
 * @category Effect
 */

var AutoWah = /*#__PURE__*/function (_Effect) {
  _inherits(AutoWah, _Effect);

  var _super = _createSuper(AutoWah);

  function AutoWah() {
    var _this;

    _classCallCheck(this, AutoWah);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(AutoWah.getDefaults(), arguments, ["baseFrequency", "octaves", "sensitivity"]));
    _this.name = "AutoWah";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(AutoWah.getDefaults(), arguments, ["baseFrequency", "octaves", "sensitivity"]);
    _this._follower = new _component_analysis_Follower__WEBPACK_IMPORTED_MODULE_2__["Follower"]({
      context: _this.context,
      smoothing: options.follower
    });
    _this._sweepRange = new _signal_ScaleExp__WEBPACK_IMPORTED_MODULE_6__["ScaleExp"]({
      context: _this.context,
      min: 0,
      max: 1,
      exponent: 0.5
    });
    _this._baseFrequency = _this.toFrequency(options.baseFrequency);
    _this._octaves = options.octaves;
    _this._inputBoost = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__["Gain"]({
      context: _this.context
    });
    _this._bandpass = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]({
      context: _this.context,
      rolloff: -48,
      frequency: 0,
      Q: options.Q
    });
    _this._peaking = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]({
      context: _this.context,
      type: "peaking"
    });
    _this._peaking.gain.value = options.gain;
    _this.gain = _this._peaking.gain;
    _this.Q = _this._bandpass.Q; // the control signal path

    _this.effectSend.chain(_this._inputBoost, _this._follower, _this._sweepRange);

    _this._sweepRange.connect(_this._bandpass.frequency);

    _this._sweepRange.connect(_this._peaking.frequency); // the filtered path


    _this.effectSend.chain(_this._bandpass, _this._peaking, _this.effectReturn); // set the initial value


    _this._setSweepRange();

    _this.sensitivity = options.sensitivity;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_7__["readOnly"])(_assertThisInitialized(_this), ["gain", "Q"]);
    return _this;
  }

  _createClass(AutoWah, [{
    key: "octaves",
    get:
    /**
     * The number of octaves that the filter will sweep above the baseFrequency.
     */
    function get() {
      return this._octaves;
    },
    set: function set(octaves) {
      this._octaves = octaves;

      this._setSweepRange();
    }
    /**
     * The follower's smoothing time
     */

  }, {
    key: "follower",
    get: function get() {
      return this._follower.smoothing;
    },
    set: function set(follower) {
      this._follower.smoothing = follower;
    }
    /**
     * The base frequency from which the sweep will start from.
     */

  }, {
    key: "baseFrequency",
    get: function get() {
      return this._baseFrequency;
    },
    set: function set(baseFreq) {
      this._baseFrequency = this.toFrequency(baseFreq);

      this._setSweepRange();
    }
    /**
     * The sensitivity to control how responsive to the input signal the filter is.
     */

  }, {
    key: "sensitivity",
    get: function get() {
      return Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["gainToDb"])(1 / this._inputBoost.gain.value);
    },
    set: function set(sensitivity) {
      this._inputBoost.gain.value = 1 / Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["dbToGain"])(sensitivity);
    }
    /**
     * sets the sweep range of the scaler
     */

  }, {
    key: "_setSweepRange",
    value: function _setSweepRange() {
      this._sweepRange.min = this._baseFrequency;
      this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(AutoWah.prototype), "dispose", this).call(this);

      this._follower.dispose();

      this._sweepRange.dispose();

      this._bandpass.dispose();

      this._peaking.dispose();

      this._inputBoost.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
        baseFrequency: 100,
        octaves: 6,
        sensitivity: 0,
        Q: 2,
        gain: 2,
        follower: 0.2
      });
    }
  }]);

  return AutoWah;
}(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/BitCrusher.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/BitCrusher.js ***!
  \**********************************************************/
/*! exports provided: BitCrusher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BitCrusher", function() { return BitCrusher; });
/* harmony import */ var _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/worklet/ToneAudioWorklet */ "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _BitCrusher_worklet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BitCrusher.worklet */ "./node_modules/tone/build/esm/effect/BitCrusher.worklet.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * BitCrusher down-samples the incoming signal to a different bit depth.
 * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing
 * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).
 * @example
 * // initialize crusher and route a synth through it
 * const crusher = new Tone.BitCrusher(4).toDestination();
 * const synth = new Tone.Synth().connect(crusher);
 * synth.triggerAttackRelease("C2", 2);
 *
 * @category Effect
 */

var BitCrusher = /*#__PURE__*/function (_Effect) {
  _inherits(BitCrusher, _Effect);

  var _super = _createSuper(BitCrusher);

  function BitCrusher() {
    var _this;

    _classCallCheck(this, BitCrusher);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusher.getDefaults(), arguments, ["bits"]));
    _this.name = "BitCrusher";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusher.getDefaults(), arguments, ["bits"]);
    _this._bitCrusherWorklet = new BitCrusherWorklet({
      context: _this.context,
      bits: options.bits
    }); // connect it up

    _this.connectEffect(_this._bitCrusherWorklet);

    _this.bits = _this._bitCrusherWorklet.bits;
    return _this;
  }

  _createClass(BitCrusher, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(BitCrusher.prototype), "dispose", this).call(this);

      this._bitCrusherWorklet.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_1__["Effect"].getDefaults(), {
        bits: 4
      });
    }
  }]);

  return BitCrusher;
}(_Effect__WEBPACK_IMPORTED_MODULE_1__["Effect"]);
/**
 * Internal class which creates an AudioWorklet to do the bit crushing
 */

var BitCrusherWorklet = /*#__PURE__*/function (_ToneAudioWorklet) {
  _inherits(BitCrusherWorklet, _ToneAudioWorklet);

  var _super2 = _createSuper(BitCrusherWorklet);

  function BitCrusherWorklet() {
    var _this2;

    _classCallCheck(this, BitCrusherWorklet);

    _this2 = _super2.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusherWorklet.getDefaults(), arguments));
    _this2.name = "BitCrusherWorklet";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusherWorklet.getDefaults(), arguments);
    _this2.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this2.context
    });
    _this2.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this2.context
    });
    _this2.bits = new _core_context_Param__WEBPACK_IMPORTED_MODULE_5__["Param"]({
      context: _this2.context,
      value: options.bits,
      units: "positive",
      minValue: 1,
      maxValue: 16,
      param: _this2._dummyParam,
      swappable: true
    });
    return _this2;
  }

  _createClass(BitCrusherWorklet, [{
    key: "_audioWorkletName",
    value: function _audioWorkletName() {
      return _BitCrusher_worklet__WEBPACK_IMPORTED_MODULE_6__["workletName"];
    }
  }, {
    key: "onReady",
    value: function onReady(node) {
      Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["connectSeries"])(this.input, node, this.output);
      var bits = node.parameters.get("bits");
      this.bits.setParam(bits);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(BitCrusherWorklet.prototype), "dispose", this).call(this);

      this.input.dispose();
      this.output.dispose();
      this.bits.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__["ToneAudioWorklet"].getDefaults(), {
        bits: 12
      });
    }
  }]);

  return BitCrusherWorklet;
}(_core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__["ToneAudioWorklet"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/BitCrusher.worklet.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/BitCrusher.worklet.js ***!
  \******************************************************************/
/*! exports provided: workletName, bitCrusherWorklet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "workletName", function() { return workletName; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bitCrusherWorklet", function() { return bitCrusherWorklet; });
/* harmony import */ var _core_worklet_SingleIOProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/worklet/SingleIOProcessor.worklet */ "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js");
/* harmony import */ var _core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/worklet/WorkletGlobalScope */ "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");


var workletName = "bit-crusher";
var bitCrusherWorklet =
/* javascript */
"\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16,\n\t\t\t\tautomationRate: 'k-rate'\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n";
Object(_core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__["registerProcessor"])(workletName, bitCrusherWorklet);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Chebyshev.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Chebyshev.js ***!
  \*********************************************************/
/*! exports provided: Chebyshev */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chebyshev", function() { return Chebyshev; });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Chebyshev is a waveshaper which is good
 * for making different types of distortion sounds.
 * Note that odd orders sound very different from even ones,
 * and order = 1 is no change.
 * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).
 * @example
 * // create a new cheby
 * const cheby = new Tone.Chebyshev(50).toDestination();
 * // create a monosynth connected to our cheby
 * const synth = new Tone.MonoSynth().connect(cheby);
 * synth.triggerAttackRelease("C2", 0.4);
 * @category Effect
 */

var Chebyshev = /*#__PURE__*/function (_Effect) {
  _inherits(Chebyshev, _Effect);

  var _super = _createSuper(Chebyshev);

  function Chebyshev() {
    var _this;

    _classCallCheck(this, Chebyshev);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chebyshev.getDefaults(), arguments, ["order"]));
    _this.name = "Chebyshev";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chebyshev.getDefaults(), arguments, ["order"]);
    _this._shaper = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_2__["WaveShaper"]({
      context: _this.context,
      length: 4096
    });
    _this._order = options.order;

    _this.connectEffect(_this._shaper);

    _this.order = options.order;
    _this.oversample = options.oversample;
    return _this;
  }

  _createClass(Chebyshev, [{
    key: "_getCoefficient",
    value:
    /**
     * get the coefficient for that degree
     * @param  x the x value
     * @param  degree
     * @param  memo memoize the computed value. this speeds up computation greatly.
     */
    function _getCoefficient(x, degree, memo) {
      if (memo.has(degree)) {
        return memo.get(degree);
      } else if (degree === 0) {
        memo.set(degree, 0);
      } else if (degree === 1) {
        memo.set(degree, x);
      } else {
        memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));
      }

      return memo.get(degree);
    }
    /**
     * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming
     * signal through a Tone.WaveShaper. The equations are in the form:
     * ```
     * order 2: 2x^2 + 1
     * order 3: 4x^3 + 3x
     * ```
     * @min 1
     * @max 100
     */

  }, {
    key: "order",
    get: function get() {
      return this._order;
    },
    set: function set(order) {
      var _this2 = this;

      this._order = order;

      this._shaper.setMap(function (x) {
        return _this2._getCoefficient(x, order, new Map());
      });
    }
    /**
     * The oversampling of the effect. Can either be "none", "2x" or "4x".
     */

  }, {
    key: "oversample",
    get: function get() {
      return this._shaper.oversample;
    },
    set: function set(oversampling) {
      this._shaper.oversample = oversampling;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Chebyshev.prototype), "dispose", this).call(this);

      this._shaper.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
        order: 1,
        oversample: "none"
      });
    }
  }]);

  return Chebyshev;
}(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Chorus.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Chorus.js ***!
  \******************************************************/
/*! exports provided: Chorus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chorus", function() { return Chorus; });
/* harmony import */ var _effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../effect/StereoFeedbackEffect */ "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.
 * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.
 * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).
 * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).
 *
 * @example
 * const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();
 * const synth = new Tone.PolySynth().connect(chorus);
 * synth.triggerAttackRelease(["C3", "E3", "G3"], "8n");
 *
 * @category Effect
 */

var Chorus = /*#__PURE__*/function (_StereoFeedbackEffect) {
  _inherits(Chorus, _StereoFeedbackEffect);

  var _super = _createSuper(Chorus);

  function Chorus() {
    var _this;

    _classCallCheck(this, Chorus);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chorus.getDefaults(), arguments, ["frequency", "delayTime", "depth"]));
    _this.name = "Chorus";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chorus.getDefaults(), arguments, ["frequency", "delayTime", "depth"]);
    _this._depth = options.depth;
    _this._delayTime = options.delayTime / 1000;
    _this._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      frequency: options.frequency,
      min: 0,
      max: 1
    });
    _this._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      frequency: options.frequency,
      min: 0,
      max: 1,
      phase: 180
    });
    _this._delayNodeL = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
      context: _this.context
    });
    _this._delayNodeR = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
      context: _this.context
    });
    _this.frequency = _this._lfoL.frequency;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["frequency"]); // have one LFO frequency control the other

    _this._lfoL.frequency.connect(_this._lfoR.frequency); // connections


    _this.connectEffectLeft(_this._delayNodeL);

    _this.connectEffectRight(_this._delayNodeR); // lfo setup


    _this._lfoL.connect(_this._delayNodeL.delayTime);

    _this._lfoR.connect(_this._delayNodeR.delayTime); // set the initial values


    _this.depth = _this._depth;
    _this.type = options.type;
    _this.spread = options.spread;
    return _this;
  }

  _createClass(Chorus, [{
    key: "depth",
    get:
    /**
     * The depth of the effect. A depth of 1 makes the delayTime
     * modulate between 0 and 2*delayTime (centered around the delayTime).
     */
    function get() {
      return this._depth;
    },
    set: function set(depth) {
      this._depth = depth;
      var deviation = this._delayTime * depth;
      this._lfoL.min = Math.max(this._delayTime - deviation, 0);
      this._lfoL.max = this._delayTime + deviation;
      this._lfoR.min = Math.max(this._delayTime - deviation, 0);
      this._lfoR.max = this._delayTime + deviation;
    }
    /**
     * The delayTime in milliseconds of the chorus. A larger delayTime
     * will give a more pronounced effect. Nominal range a delayTime
     * is between 2 and 20ms.
     */

  }, {
    key: "delayTime",
    get: function get() {
      return this._delayTime * 1000;
    },
    set: function set(delayTime) {
      this._delayTime = delayTime / 1000;
      this.depth = this._depth;
    }
    /**
     * The oscillator type of the LFO.
     */

  }, {
    key: "type",
    get: function get() {
      return this._lfoL.type;
    },
    set: function set(type) {
      this._lfoL.type = type;
      this._lfoR.type = type;
    }
    /**
     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
     * When set to 180, LFO's will be panned hard left and right respectively.
     */

  }, {
    key: "spread",
    get: function get() {
      return this._lfoR.phase - this._lfoL.phase;
    },
    set: function set(spread) {
      this._lfoL.phase = 90 - spread / 2;
      this._lfoR.phase = spread / 2 + 90;
    }
    /**
     * Start the effect.
     */

  }, {
    key: "start",
    value: function start(time) {
      this._lfoL.start(time);

      this._lfoR.start(time);

      return this;
    }
    /**
     * Stop the lfo
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this._lfoL.stop(time);

      this._lfoR.stop(time);

      return this;
    }
    /**
     * Sync the filter to the transport. See [[LFO.sync]]
     */

  }, {
    key: "sync",
    value: function sync() {
      this._lfoL.sync();

      this._lfoR.sync();

      return this;
    }
    /**
     * Unsync the filter from the transport.
     */

  }, {
    key: "unsync",
    value: function unsync() {
      this._lfoL.unsync();

      this._lfoR.unsync();

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Chorus.prototype), "dispose", this).call(this);

      this._lfoL.dispose();

      this._lfoR.dispose();

      this._delayNodeL.dispose();

      this._delayNodeR.dispose();

      this.frequency.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoFeedbackEffect"].getDefaults(), {
        frequency: 1.5,
        delayTime: 3.5,
        depth: 0.7,
        type: "sine",
        spread: 180,
        feedback: 0,
        wet: 0.5
      });
    }
  }]);

  return Chorus;
}(_effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoFeedbackEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Distortion.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Distortion.js ***!
  \**********************************************************/
/*! exports provided: Distortion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Distortion", function() { return Distortion; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * A simple distortion effect using Tone.WaveShaper.
 * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).
 *
 * @example
 * const dist = new Tone.Distortion(0.8).toDestination();
 * const fm = new Tone.FMSynth().connect(dist);
 * fm.triggerAttackRelease("A1", "8n");
 * @category Effect
 */

var Distortion = /*#__PURE__*/function (_Effect) {
  _inherits(Distortion, _Effect);

  var _super = _createSuper(Distortion);

  function Distortion() {
    var _this;

    _classCallCheck(this, Distortion);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Distortion.getDefaults(), arguments, ["distortion"]));
    _this.name = "Distortion";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Distortion.getDefaults(), arguments, ["distortion"]);
    _this._shaper = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
      context: _this.context,
      length: 4096
    });
    _this._distortion = options.distortion;

    _this.connectEffect(_this._shaper);

    _this.distortion = options.distortion;
    _this.oversample = options.oversample;
    return _this;
  }

  _createClass(Distortion, [{
    key: "distortion",
    get:
    /**
     * The amount of distortion. Nominal range is between 0 and 1.
     */
    function get() {
      return this._distortion;
    },
    set: function set(amount) {
      this._distortion = amount;
      var k = amount * 100;
      var deg = Math.PI / 180;

      this._shaper.setMap(function (x) {
        if (Math.abs(x) < 0.001) {
          // should output 0 when input is 0
          return 0;
        } else {
          return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));
        }
      });
    }
    /**
     * The oversampling of the effect. Can either be "none", "2x" or "4x".
     */

  }, {
    key: "oversample",
    get: function get() {
      return this._shaper.oversample;
    },
    set: function set(oversampling) {
      this._shaper.oversample = oversampling;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Distortion.prototype), "dispose", this).call(this);

      this._shaper.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"].getDefaults(), {
        distortion: 0.4,
        oversample: "none"
      });
    }
  }]);

  return Distortion;
}(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Effect.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Effect.js ***!
  \******************************************************/
/*! exports provided: Effect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Effect", function() { return Effect; });
/* harmony import */ var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Effect is the base class for effects. Connect the effect between
 * the effectSend and effectReturn GainNodes, then control the amount of
 * effect which goes to the output using the wet control.
 */

var Effect = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Effect, _ToneAudioNode);

  var _super = _createSuper(Effect);

  function Effect(options) {
    var _this;

    _classCallCheck(this, Effect);

    _this = _super.call(this, options);
    _this.name = "Effect";
    /**
     * the drywet knob to control the amount of effect
     */

    _this._dryWet = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_0__["CrossFade"]({
      context: _this.context
    });
    /**
     * The wet control is how much of the effected
     * will pass through to the output. 1 = 100% effected
     * signal, 0 = 100% dry signal.
     */

    _this.wet = _this._dryWet.fade;
    /**
     * connect the effectSend to the input of hte effect
     */

    _this.effectSend = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
      context: _this.context
    });
    /**
     * connect the output of the effect to the effectReturn
     */

    _this.effectReturn = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
      context: _this.context
    });
    /**
     * The effect input node
     */

    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
      context: _this.context
    });
    /**
     * The effect output
     */

    _this.output = _this._dryWet; // connections

    _this.input.fan(_this._dryWet.a, _this.effectSend);

    _this.effectReturn.connect(_this._dryWet.b);

    _this.wet.setValueAtTime(options.wet, 0);

    _this._internalChannels = [_this.effectReturn, _this.effectSend];
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "wet");
    return _this;
  }

  _createClass(Effect, [{
    key: "connectEffect",
    value:
    /**
     * chains the effect in between the effectSend and effectReturn
     */
    function connectEffect(effect) {
      // add it to the internal channels
      this._internalChannels.push(effect);

      this.effectSend.chain(effect, this.effectReturn);
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Effect.prototype), "dispose", this).call(this);

      this._dryWet.dispose();

      this.effectSend.dispose();
      this.effectReturn.dispose();
      this.wet.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
        wet: 1
      });
    }
  }]);

  return Effect;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/FeedbackDelay.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/FeedbackDelay.js ***!
  \*************************************************************/
/*! exports provided: FeedbackDelay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function() { return FeedbackDelay; });
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./FeedbackEffect */ "./node_modules/tone/build/esm/effect/FeedbackEffect.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.
 *
 * @param delayTime The delay applied to the incoming signal.
 * @param feedback The amount of the effected signal which is fed back through the delay.
 * @example
 * const feedbackDelay = new Tone.FeedbackDelay("8n", 0.5).toDestination();
 * const tom = new Tone.MembraneSynth({
 * 	octaves: 4,
 * 	pitchDecay: 0.1
 * }).connect(feedbackDelay);
 * tom.triggerAttackRelease("A2", "32n");
 * @category Effect
 */

var FeedbackDelay = /*#__PURE__*/function (_FeedbackEffect) {
  _inherits(FeedbackDelay, _FeedbackEffect);

  var _super = _createSuper(FeedbackDelay);

  function FeedbackDelay() {
    var _this;

    _classCallCheck(this, FeedbackDelay);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FeedbackDelay.getDefaults(), arguments, ["delayTime", "feedback"]));
    _this.name = "FeedbackDelay";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FeedbackDelay.getDefaults(), arguments, ["delayTime", "feedback"]);
    _this._delayNode = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_0__["Delay"]({
      context: _this.context,
      delayTime: options.delayTime,
      maxDelay: options.maxDelay
    });
    _this.delayTime = _this._delayNode.delayTime; // connect it up

    _this.connectEffect(_this._delayNode);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this), "delayTime");
    return _this;
  }

  _createClass(FeedbackDelay, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FeedbackDelay.prototype), "dispose", this).call(this);

      this._delayNode.dispose();

      this.delayTime.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__["FeedbackEffect"].getDefaults(), {
        delayTime: 0.25,
        maxDelay: 1
      });
    }
  }]);

  return FeedbackDelay;
}(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__["FeedbackEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/FeedbackEffect.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/FeedbackEffect.js ***!
  \**************************************************************/
/*! exports provided: FeedbackEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeedbackEffect", function() { return FeedbackEffect; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * FeedbackEffect provides a loop between an audio source and its own output.
 * This is a base-class for feedback effects.
 */

var FeedbackEffect = /*#__PURE__*/function (_Effect) {
  _inherits(FeedbackEffect, _Effect);

  var _super = _createSuper(FeedbackEffect);

  function FeedbackEffect(options) {
    var _this;

    _classCallCheck(this, FeedbackEffect);

    _this = _super.call(this, options);
    _this.name = "FeedbackEffect";
    _this._feedbackGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: options.feedback,
      units: "normalRange"
    });
    _this.feedback = _this._feedbackGain.gain;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["readOnly"])(_assertThisInitialized(_this), "feedback"); // the feedback loop

    _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);

    return _this;
  }

  _createClass(FeedbackEffect, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FeedbackEffect.prototype), "dispose", this).call(this);

      this._feedbackGain.dispose();

      this.feedback.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"].getDefaults(), {
        feedback: 0.125
      });
    }
  }]);

  return FeedbackEffect;
}(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Freeverb.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Freeverb.js ***!
  \********************************************************/
/*! exports provided: Freeverb */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Freeverb", function() { return Freeverb; });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/filter/LowpassCombFilter */ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * An array of comb filter delay values from Freeverb implementation
 */

var combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];
/**
 * An array of allpass filter frequency values from Freeverb implementation
 */

var allpassFilterFrequencies = [225, 556, 441, 341];
/**
 * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).
 * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).
 * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].
 * @example
 * const freeverb = new Tone.Freeverb().toDestination();
 * freeverb.dampening = 1000;
 * // routing synth through the reverb
 * const synth = new Tone.NoiseSynth().connect(freeverb);
 * synth.triggerAttackRelease(0.05);
 * @category Effect
 */

var Freeverb = /*#__PURE__*/function (_StereoEffect) {
  _inherits(Freeverb, _StereoEffect);

  var _super = _createSuper(Freeverb);

  function Freeverb() {
    var _this;

    _classCallCheck(this, Freeverb);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Freeverb.getDefaults(), arguments, ["roomSize", "dampening"]));
    _this.name = "Freeverb";
    /**
     * the comb filters
     */

    _this._combFilters = [];
    /**
     * the allpass filters on the left
     */

    _this._allpassFiltersL = [];
    /**
     * the allpass filters on the right
     */

    _this._allpassFiltersR = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Freeverb.getDefaults(), arguments, ["roomSize", "dampening"]);
    _this.roomSize = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
      context: _this.context,
      value: options.roomSize,
      units: "normalRange"
    }); // make the allpass filters on the right

    _this._allpassFiltersL = allpassFilterFrequencies.map(function (freq) {
      var allpassL = _this.context.createBiquadFilter();

      allpassL.type = "allpass";
      allpassL.frequency.value = freq;
      return allpassL;
    }); // make the allpass filters on the left

    _this._allpassFiltersR = allpassFilterFrequencies.map(function (freq) {
      var allpassR = _this.context.createBiquadFilter();

      allpassR.type = "allpass";
      allpassR.frequency.value = freq;
      return allpassR;
    }); // make the comb filters

    _this._combFilters = combFilterTunings.map(function (delayTime, index) {
      var lfpf = new _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_4__["LowpassCombFilter"]({
        context: _this.context,
        dampening: options.dampening,
        delayTime: delayTime
      });

      if (index < combFilterTunings.length / 2) {
        var _this2;

        (_this2 = _this).connectEffectLeft.apply(_this2, [lfpf].concat(_toConsumableArray(_this._allpassFiltersL)));
      } else {
        var _this3;

        (_this3 = _this).connectEffectRight.apply(_this3, [lfpf].concat(_toConsumableArray(_this._allpassFiltersR)));
      }

      _this.roomSize.connect(lfpf.resonance);

      return lfpf;
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this), ["roomSize"]);
    return _this;
  }

  _createClass(Freeverb, [{
    key: "dampening",
    get:
    /**
     * The amount of dampening of the reverberant signal.
     */
    function get() {
      return this._combFilters[0].dampening;
    },
    set: function set(d) {
      this._combFilters.forEach(function (c) {
        return c.dampening = d;
      });
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Freeverb.prototype), "dispose", this).call(this);

      this._allpassFiltersL.forEach(function (al) {
        return al.disconnect();
      });

      this._allpassFiltersR.forEach(function (ar) {
        return ar.disconnect();
      });

      this._combFilters.forEach(function (cf) {
        return cf.dispose();
      });

      this.roomSize.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
        roomSize: 0.7,
        dampening: 3000
      });
    }
  }]);

  return Freeverb;
}(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/FrequencyShifter.js":
/*!****************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/FrequencyShifter.js ***!
  \****************************************************************/
/*! exports provided: FrequencyShifter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function() { return FrequencyShifter; });
/* harmony import */ var _component_filter_PhaseShiftAllpass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/filter/PhaseShiftAllpass */ "./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../effect/Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _signal_Add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Negate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../signal/Negate */ "./node_modules/tone/build/esm/signal/Negate.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _source_oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/oscillator/Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _source_oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../source/oscillator/ToneOscillatorNode */ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










/**
 * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.
 * The amount can be changed at audio rate and the effect is applied in real time.
 * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.
 * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,
 * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.
 * The algorithm will produces some aliasing towards the high end, especially if your source material
 * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling
 * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might
 * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.
 * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/
 *
 * @example
 * const input = new Tone.Oscillator(230, "sawtooth").start();
 * const shift = new Tone.FrequencyShifter(42).toDestination();
 * input.connect(shift);
 * @category Effect
 */

var FrequencyShifter = /*#__PURE__*/function (_Effect) {
  _inherits(FrequencyShifter, _Effect);

  var _super = _createSuper(FrequencyShifter);

  function FrequencyShifter() {
    var _this;

    _classCallCheck(this, FrequencyShifter);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FrequencyShifter.getDefaults(), arguments, ["frequency"]));
    _this.name = "FrequencyShifter";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FrequencyShifter.getDefaults(), arguments, ["frequency"]);
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_6__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.frequency,
      minValue: -_this.context.sampleRate / 2,
      maxValue: _this.context.sampleRate / 2
    });
    _this._sine = new _source_oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__["ToneOscillatorNode"]({
      context: _this.context,
      type: "sine"
    });
    _this._cosine = new _source_oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"]({
      context: _this.context,
      phase: -90,
      type: "sine"
    });
    _this._sineMultiply = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__["Multiply"]({
      context: _this.context
    });
    _this._cosineMultiply = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__["Multiply"]({
      context: _this.context
    });
    _this._negate = new _signal_Negate__WEBPACK_IMPORTED_MODULE_5__["Negate"]({
      context: _this.context
    });
    _this._add = new _signal_Add__WEBPACK_IMPORTED_MODULE_3__["Add"]({
      context: _this.context
    });
    _this._phaseShifter = new _component_filter_PhaseShiftAllpass__WEBPACK_IMPORTED_MODULE_0__["PhaseShiftAllpass"]({
      context: _this.context
    });

    _this.effectSend.connect(_this._phaseShifter); // connect the carrier frequency signal to the two oscillators


    _this.frequency.fan(_this._sine.frequency, _this._cosine.frequency);

    _this._phaseShifter.offset90.connect(_this._cosineMultiply);

    _this._cosine.connect(_this._cosineMultiply.factor);

    _this._phaseShifter.connect(_this._sineMultiply);

    _this._sine.connect(_this._sineMultiply.factor);

    _this._sineMultiply.connect(_this._negate);

    _this._cosineMultiply.connect(_this._add);

    _this._negate.connect(_this._add.addend);

    _this._add.connect(_this.effectReturn); // start the oscillators at the same time


    var now = _this.immediate();

    _this._sine.start(now);

    _this._cosine.start(now);

    return _this;
  }

  _createClass(FrequencyShifter, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FrequencyShifter.prototype), "dispose", this).call(this);

      this.frequency.dispose();

      this._add.dispose();

      this._cosine.dispose();

      this._cosineMultiply.dispose();

      this._negate.dispose();

      this._phaseShifter.dispose();

      this._sine.dispose();

      this._sineMultiply.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_effect_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"].getDefaults(), {
        frequency: 0
      });
    }
  }]);

  return FrequencyShifter;
}(_effect_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/JCReverb.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/JCReverb.js ***!
  \********************************************************/
/*! exports provided: JCReverb */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JCReverb", function() { return JCReverb; });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _component_filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/filter/FeedbackCombFilter */ "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * an array of the comb filter delay time values
 */

var combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];
/**
 * the resonances of each of the comb filters
 */

var combFilterResonances = [0.773, 0.802, 0.753, 0.733];
/**
 * the allpass filter frequencies
 */

var allpassFilterFreqs = [347, 113, 37];
/**
 * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)
 * tuned by John Chowning in 1970.
 * It is made up of three allpass filters and four [[FeedbackCombFilter]].
 * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms. Consider using [[Reverb]].
 * @example
 * const reverb = new Tone.JCReverb(0.4).toDestination();
 * const delay = new Tone.FeedbackDelay(0.5);
 * // connecting the synth to reverb through delay
 * const synth = new Tone.DuoSynth().chain(delay, reverb);
 * synth.triggerAttackRelease("A4", "8n");
 *
 * @category Effect
 */

var JCReverb = /*#__PURE__*/function (_StereoEffect) {
  _inherits(JCReverb, _StereoEffect);

  var _super = _createSuper(JCReverb);

  function JCReverb() {
    var _this;

    _classCallCheck(this, JCReverb);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(JCReverb.getDefaults(), arguments, ["roomSize"]));
    _this.name = "JCReverb";
    /**
     * a series of allpass filters
     */

    _this._allpassFilters = [];
    /**
     * parallel feedback comb filters
     */

    _this._feedbackCombFilters = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(JCReverb.getDefaults(), arguments, ["roomSize"]);
    _this.roomSize = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
      context: _this.context,
      value: options.roomSize,
      units: "normalRange"
    });
    _this._scaleRoomSize = new _signal_Scale__WEBPACK_IMPORTED_MODULE_2__["Scale"]({
      context: _this.context,
      min: -0.733,
      max: 0.197
    }); // make the allpass filters

    _this._allpassFilters = allpassFilterFreqs.map(function (freq) {
      var allpass = _this.context.createBiquadFilter();

      allpass.type = "allpass";
      allpass.frequency.value = freq;
      return allpass;
    }); // and the comb filters

    _this._feedbackCombFilters = combFilterDelayTimes.map(function (delayTime, index) {
      var fbcf = new _component_filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_4__["FeedbackCombFilter"]({
        context: _this.context,
        delayTime: delayTime
      });

      _this._scaleRoomSize.connect(fbcf.resonance);

      fbcf.resonance.value = combFilterResonances[index];

      if (index < combFilterDelayTimes.length / 2) {
        var _this2;

        (_this2 = _this).connectEffectLeft.apply(_this2, _toConsumableArray(_this._allpassFilters).concat([fbcf]));
      } else {
        var _this3;

        (_this3 = _this).connectEffectRight.apply(_this3, _toConsumableArray(_this._allpassFilters).concat([fbcf]));
      }

      return fbcf;
    }); // chain the allpass filters together

    _this.roomSize.connect(_this._scaleRoomSize);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this), ["roomSize"]);
    return _this;
  }

  _createClass(JCReverb, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(JCReverb.prototype), "dispose", this).call(this);

      this._allpassFilters.forEach(function (apf) {
        return apf.disconnect();
      });

      this._feedbackCombFilters.forEach(function (fbcf) {
        return fbcf.dispose();
      });

      this.roomSize.dispose();

      this._scaleRoomSize.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
        roomSize: 0.5
      });
    }
  }]);

  return JCReverb;
}(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/LFOEffect.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/LFOEffect.js ***!
  \*********************************************************/
/*! exports provided: LFOEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LFOEffect", function() { return LFOEffect; });
/* harmony import */ var _effect_Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../effect/Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Base class for LFO-based effects.
 */

var LFOEffect = /*#__PURE__*/function (_Effect) {
  _inherits(LFOEffect, _Effect);

  var _super = _createSuper(LFOEffect);

  function LFOEffect(options) {
    var _this;

    _classCallCheck(this, LFOEffect);

    _this = _super.call(this, options);
    _this.name = "LFOEffect";
    _this._lfo = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__["LFO"]({
      context: _this.context,
      frequency: options.frequency,
      amplitude: options.depth
    });
    _this.depth = _this._lfo.amplitude;
    _this.frequency = _this._lfo.frequency;
    _this.type = options.type;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this), ["frequency", "depth"]);
    return _this;
  }

  _createClass(LFOEffect, [{
    key: "start",
    value:
    /**
     * Start the effect.
     */
    function start(time) {
      this._lfo.start(time);

      return this;
    }
    /**
     * Stop the lfo
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this._lfo.stop(time);

      return this;
    }
    /**
     * Sync the filter to the transport. See [[LFO.sync]]
     */

  }, {
    key: "sync",
    value: function sync() {
      this._lfo.sync();

      return this;
    }
    /**
     * Unsync the filter from the transport.
     */

  }, {
    key: "unsync",
    value: function unsync() {
      this._lfo.unsync();

      return this;
    }
    /**
     * The type of the LFO's oscillator: See [[Oscillator.type]]
     * @example
     * const autoFilter = new Tone.AutoFilter().start().toDestination();
     * const noise = new Tone.Noise().start().connect(autoFilter);
     * autoFilter.type = "square";
     */

  }, {
    key: "type",
    get: function get() {
      return this._lfo.type;
    },
    set: function set(type) {
      this._lfo.type = type;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(LFOEffect.prototype), "dispose", this).call(this);

      this._lfo.dispose();

      this.frequency.dispose();
      this.depth.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_effect_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
        frequency: 1,
        type: "sine",
        depth: 1
      });
    }
  }]);

  return LFOEffect;
}(_effect_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/MidSideEffect.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/MidSideEffect.js ***!
  \*************************************************************/
/*! exports provided: MidSideEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MidSideEffect", function() { return MidSideEffect; });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _component_channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/channel/MidSideSplit */ "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
/* harmony import */ var _component_channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/channel/MidSideMerge */ "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Mid/Side processing separates the the 'mid' signal
 * (which comes out of both the left and the right channel)
 * and the 'side' (which only comes out of the the side channels)
 * and effects them separately before being recombined.
 * Applies a Mid/Side seperation and recombination.
 * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
 * This is a base-class for Mid/Side Effects.
 * @category Effect
 */

var MidSideEffect = /*#__PURE__*/function (_Effect) {
  _inherits(MidSideEffect, _Effect);

  var _super = _createSuper(MidSideEffect);

  function MidSideEffect(options) {
    var _this;

    _classCallCheck(this, MidSideEffect);

    _this = _super.call(this, options);
    _this.name = "MidSideEffect";
    _this._midSideMerge = new _component_channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_2__["MidSideMerge"]({
      context: _this.context
    });
    _this._midSideSplit = new _component_channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_1__["MidSideSplit"]({
      context: _this.context
    });
    _this._midSend = _this._midSideSplit.mid;
    _this._sideSend = _this._midSideSplit.side;
    _this._midReturn = _this._midSideMerge.mid;
    _this._sideReturn = _this._midSideMerge.side; // the connections

    _this.effectSend.connect(_this._midSideSplit);

    _this._midSideMerge.connect(_this.effectReturn);

    return _this;
  }
  /**
   * Connect the mid chain of the effect
   */


  _createClass(MidSideEffect, [{
    key: "connectEffectMid",
    value: function connectEffectMid() {
      var _this$_midSend;

      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {
        nodes[_key] = arguments[_key];
      }

      (_this$_midSend = this._midSend).chain.apply(_this$_midSend, nodes.concat([this._midReturn]));
    }
    /**
     * Connect the side chain of the effect
     */

  }, {
    key: "connectEffectSide",
    value: function connectEffectSide() {
      var _this$_sideSend;

      for (var _len2 = arguments.length, nodes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        nodes[_key2] = arguments[_key2];
      }

      (_this$_sideSend = this._sideSend).chain.apply(_this$_sideSend, nodes.concat([this._sideReturn]));
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MidSideEffect.prototype), "dispose", this).call(this);

      this._midSideSplit.dispose();

      this._midSideMerge.dispose();

      this._midSend.dispose();

      this._sideSend.dispose();

      this._midReturn.dispose();

      this._sideReturn.dispose();

      return this;
    }
  }]);

  return MidSideEffect;
}(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Phaser.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Phaser.js ***!
  \******************************************************/
/*! exports provided: Phaser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Phaser", function() { return Phaser; });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Phaser is a phaser effect. Phasers work by changing the phase
 * of different frequency components of an incoming signal. Read more on
 * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).
 * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).
 * @example
 * const phaser = new Tone.Phaser({
 * 	frequency: 15,
 * 	octaves: 5,
 * 	baseFrequency: 1000
 * }).toDestination();
 * const synth = new Tone.FMSynth().connect(phaser);
 * synth.triggerAttackRelease("E3", "2n");
 * @category Effect
 */

var Phaser = /*#__PURE__*/function (_StereoEffect) {
  _inherits(Phaser, _StereoEffect);

  var _super = _createSuper(Phaser);

  function Phaser() {
    var _this2, _this3;

    var _this;

    _classCallCheck(this, Phaser);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Phaser.getDefaults(), arguments, ["frequency", "octaves", "baseFrequency"]));
    _this.name = "Phaser";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Phaser.getDefaults(), arguments, ["frequency", "octaves", "baseFrequency"]);
    _this._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      frequency: options.frequency,
      min: 0,
      max: 1
    });
    _this._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      frequency: options.frequency,
      min: 0,
      max: 1,
      phase: 180
    });
    _this._baseFrequency = _this.toFrequency(options.baseFrequency);
    _this._octaves = options.octaves;
    _this.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
      context: _this.context,
      value: options.Q,
      units: "positive"
    });
    _this._filtersL = _this._makeFilters(options.stages, _this._lfoL);
    _this._filtersR = _this._makeFilters(options.stages, _this._lfoR);
    _this.frequency = _this._lfoL.frequency;
    _this.frequency.value = options.frequency; // connect them up

    (_this2 = _this).connectEffectLeft.apply(_this2, _toConsumableArray(_this._filtersL));

    (_this3 = _this).connectEffectRight.apply(_this3, _toConsumableArray(_this._filtersR)); // control the frequency with one LFO


    _this._lfoL.frequency.connect(_this._lfoR.frequency); // set the options


    _this.baseFrequency = options.baseFrequency;
    _this.octaves = options.octaves; // start the lfo

    _this._lfoL.start();

    _this._lfoR.start();

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["frequency", "Q"]);
    return _this;
  }

  _createClass(Phaser, [{
    key: "_makeFilters",
    value: function _makeFilters(stages, connectToFreq) {
      var filters = []; // make all the filters

      for (var i = 0; i < stages; i++) {
        var filter = this.context.createBiquadFilter();
        filter.type = "allpass";
        this.Q.connect(filter.Q);
        connectToFreq.connect(filter.frequency);
        filters.push(filter);
      }

      return filters;
    }
    /**
     * The number of octaves the phase goes above the baseFrequency
     */

  }, {
    key: "octaves",
    get: function get() {
      return this._octaves;
    },
    set: function set(octaves) {
      this._octaves = octaves;
      var max = this._baseFrequency * Math.pow(2, octaves);
      this._lfoL.max = max;
      this._lfoR.max = max;
    }
    /**
     * The the base frequency of the filters.
     */

  }, {
    key: "baseFrequency",
    get: function get() {
      return this._baseFrequency;
    },
    set: function set(freq) {
      this._baseFrequency = this.toFrequency(freq);
      this._lfoL.min = this._baseFrequency;
      this._lfoR.min = this._baseFrequency;
      this.octaves = this._octaves;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Phaser.prototype), "dispose", this).call(this);

      this.Q.dispose();

      this._lfoL.dispose();

      this._lfoR.dispose();

      this._filtersL.forEach(function (f) {
        return f.disconnect();
      });

      this._filtersR.forEach(function (f) {
        return f.disconnect();
      });

      this.frequency.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
        frequency: 0.5,
        octaves: 3,
        stages: 10,
        Q: 10,
        baseFrequency: 350
      });
    }
  }]);

  return Phaser;
}(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/PingPongDelay.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/PingPongDelay.js ***!
  \*************************************************************/
/*! exports provided: PingPongDelay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PingPongDelay", function() { return PingPongDelay; });
/* harmony import */ var _StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoXFeedbackEffect */ "./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * PingPongDelay is a feedback delay effect where the echo is heard
 * first in one channel and next in the opposite channel. In a stereo
 * system these are the right and left channels.
 * PingPongDelay in more simplified terms is two Tone.FeedbackDelays
 * with independent delay values. Each delay is routed to one channel
 * (left or right), and the channel triggered second will always
 * trigger at the same interval after the first.
 * @example
 * const pingPong = new Tone.PingPongDelay("4n", 0.2).toDestination();
 * const drum = new Tone.MembraneSynth().connect(pingPong);
 * drum.triggerAttackRelease("C4", "32n");
 * @category Effect
 */

var PingPongDelay = /*#__PURE__*/function (_StereoXFeedbackEffec) {
  _inherits(PingPongDelay, _StereoXFeedbackEffec);

  var _super = _createSuper(PingPongDelay);

  function PingPongDelay() {
    var _this;

    _classCallCheck(this, PingPongDelay);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PingPongDelay.getDefaults(), arguments, ["delayTime", "feedback"]));
    _this.name = "PingPongDelay";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PingPongDelay.getDefaults(), arguments, ["delayTime", "feedback"]);
    _this._leftDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__["Delay"]({
      context: _this.context,
      maxDelay: options.maxDelay
    });
    _this._rightDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__["Delay"]({
      context: _this.context,
      maxDelay: options.maxDelay
    });
    _this._rightPreDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__["Delay"]({
      context: _this.context,
      maxDelay: options.maxDelay
    });
    _this.delayTime = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
      context: _this.context,
      units: "time",
      value: options.delayTime
    }); // connect it up

    _this.connectEffectLeft(_this._leftDelay);

    _this.connectEffectRight(_this._rightPreDelay, _this._rightDelay);

    _this.delayTime.fan(_this._leftDelay.delayTime, _this._rightDelay.delayTime, _this._rightPreDelay.delayTime); // rearranged the feedback to be after the rightPreDelay


    _this._feedbackL.disconnect();

    _this._feedbackL.connect(_this._rightDelay);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["delayTime"]);
    return _this;
  }

  _createClass(PingPongDelay, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PingPongDelay.prototype), "dispose", this).call(this);

      this._leftDelay.dispose();

      this._rightDelay.dispose();

      this._rightPreDelay.dispose();

      this.delayTime.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoXFeedbackEffect"].getDefaults(), {
        delayTime: 0.25,
        maxDelay: 1
      });
    }
  }]);

  return PingPongDelay;
}(_StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoXFeedbackEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/PitchShift.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/PitchShift.js ***!
  \**********************************************************/
/*! exports provided: PitchShift */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PitchShift", function() { return PitchShift; });
/* harmony import */ var _FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FeedbackEffect */ "./node_modules/tone/build/esm/effect/FeedbackEffect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * PitchShift does near-realtime pitch shifting to the incoming signal.
 * The effect is achieved by speeding up or slowing down the delayTime
 * of a DelayNode using a sawtooth wave.
 * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).
 * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).
 * @category Effect
 */

var PitchShift = /*#__PURE__*/function (_FeedbackEffect) {
  _inherits(PitchShift, _FeedbackEffect);

  var _super = _createSuper(PitchShift);

  function PitchShift() {
    var _this;

    _classCallCheck(this, PitchShift);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PitchShift.getDefaults(), arguments, ["pitch"]));
    _this.name = "PitchShift";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PitchShift.getDefaults(), arguments, ["pitch"]);
    _this._frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context
    });
    _this._delayA = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
      maxDelay: 1,
      context: _this.context
    });
    _this._lfoA = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      min: 0,
      max: 0.1,
      type: "sawtooth"
    }).connect(_this._delayA.delayTime);
    _this._delayB = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
      maxDelay: 1,
      context: _this.context
    });
    _this._lfoB = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      min: 0,
      max: 0.1,
      type: "sawtooth",
      phase: 180
    }).connect(_this._delayB.delayTime);
    _this._crossFade = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_4__["CrossFade"]({
      context: _this.context
    });
    _this._crossFadeLFO = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      min: 0,
      max: 1,
      type: "triangle",
      phase: 90
    }).connect(_this._crossFade.fade);
    _this._feedbackDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
      delayTime: options.delayTime,
      context: _this.context
    });
    _this.delayTime = _this._feedbackDelay.delayTime;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_6__["readOnly"])(_assertThisInitialized(_this), "delayTime");
    _this._pitch = options.pitch;
    _this._windowSize = options.windowSize; // connect the two delay lines up

    _this._delayA.connect(_this._crossFade.a);

    _this._delayB.connect(_this._crossFade.b); // connect the frequency


    _this._frequency.fan(_this._lfoA.frequency, _this._lfoB.frequency, _this._crossFadeLFO.frequency); // route the input


    _this.effectSend.fan(_this._delayA, _this._delayB);

    _this._crossFade.chain(_this._feedbackDelay, _this.effectReturn); // start the LFOs at the same time


    var now = _this.now();

    _this._lfoA.start(now);

    _this._lfoB.start(now);

    _this._crossFadeLFO.start(now); // set the initial value


    _this.windowSize = _this._windowSize;
    return _this;
  }

  _createClass(PitchShift, [{
    key: "pitch",
    get:
    /**
     * Repitch the incoming signal by some interval (measured in semi-tones).
     * @example
     * const pitchShift = new Tone.PitchShift().toDestination();
     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();
     * pitchShift.pitch = -12; // down one octave
     * pitchShift.pitch = 7; // up a fifth
     */
    function get() {
      return this._pitch;
    },
    set: function set(interval) {
      this._pitch = interval;
      var factor = 0;

      if (interval < 0) {
        this._lfoA.min = 0;
        this._lfoA.max = this._windowSize;
        this._lfoB.min = 0;
        this._lfoB.max = this._windowSize;
        factor = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__["intervalToFrequencyRatio"])(interval - 1) + 1;
      } else {
        this._lfoA.min = this._windowSize;
        this._lfoA.max = 0;
        this._lfoB.min = this._windowSize;
        this._lfoB.max = 0;
        factor = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__["intervalToFrequencyRatio"])(interval) - 1;
      }

      this._frequency.value = factor * (1.2 / this._windowSize);
    }
    /**
     * The window size corresponds roughly to the sample length in a looping sampler.
     * Smaller values are desirable for a less noticeable delay time of the pitch shifted
     * signal, but larger values will result in smoother pitch shifting for larger intervals.
     * A nominal range of 0.03 to 0.1 is recommended.
     */

  }, {
    key: "windowSize",
    get: function get() {
      return this._windowSize;
    },
    set: function set(size) {
      this._windowSize = this.toSeconds(size);
      this.pitch = this._pitch;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PitchShift.prototype), "dispose", this).call(this);

      this._frequency.dispose();

      this._delayA.dispose();

      this._delayB.dispose();

      this._lfoA.dispose();

      this._lfoB.dispose();

      this._crossFade.dispose();

      this._crossFadeLFO.dispose();

      this._feedbackDelay.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["FeedbackEffect"].getDefaults(), {
        pitch: 0,
        windowSize: 0.1,
        delayTime: 0,
        feedback: 0
      });
    }
  }]);

  return PitchShift;
}(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["FeedbackEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Reverb.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Reverb.js ***!
  \******************************************************/
/*! exports provided: Reverb */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reverb", function() { return Reverb; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_Noise__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../source/Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










/**
 * Simple convolution created with decaying noise.
 * Generates an Impulse Response Buffer
 * with Tone.Offline then feeds the IR into ConvolverNode.
 * The impulse response generation is async, so you have
 * to wait until [[ready]] resolves before it will make a sound.
 *
 * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).
 * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.
 *
 * @category Effect
 */

var Reverb = /*#__PURE__*/function (_Effect) {
  _inherits(Reverb, _Effect);

  var _super = _createSuper(Reverb);

  function Reverb() {
    var _this;

    _classCallCheck(this, Reverb);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Reverb.getDefaults(), arguments, ["decay"]));
    _this.name = "Reverb";
    /**
     * Convolver node
     */

    _this._convolver = _this.context.createConvolver();
    /**
     * Resolves when the reverb buffer is generated. Whenever either [[decay]]
     * or [[preDelay]] are set, you have to wait until [[ready]] resolves
     * before the IR is generated with the latest values.
     */

    _this.ready = Promise.resolve();
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Reverb.getDefaults(), arguments, ["decay"]);
    _this._decay = options.decay;
    _this._preDelay = options.preDelay;

    _this.generate();

    _this.connectEffect(_this._convolver);

    return _this;
  }

  _createClass(Reverb, [{
    key: "decay",
    get:
    /**
     * The duration of the reverb.
     */
    function get() {
      return this._decay;
    },
    set: function set(time) {
      time = this.toSeconds(time);
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assertRange"])(time, 0.001);
      this._decay = time;
      this.generate();
    }
    /**
     * The amount of time before the reverb is fully ramped in.
     */

  }, {
    key: "preDelay",
    get: function get() {
      return this._preDelay;
    },
    set: function set(time) {
      time = this.toSeconds(time);
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assertRange"])(time, 0);
      this._preDelay = time;
      this.generate();
    }
    /**
     * Generate the Impulse Response. Returns a promise while the IR is being generated.
     * @return Promise which returns this object.
     */

  }, {
    key: "generate",
    value: function generate() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var previousReady, context, noiseL, noiseR, merge, gainNode, renderPromise;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                previousReady = this.ready; // create a noise burst which decays over the duration in each channel

                context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_7__["OfflineContext"](2, this._decay + this._preDelay, this.context.sampleRate);
                noiseL = new _source_Noise__WEBPACK_IMPORTED_MODULE_5__["Noise"]({
                  context: context
                });
                noiseR = new _source_Noise__WEBPACK_IMPORTED_MODULE_5__["Noise"]({
                  context: context
                });
                merge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_2__["Merge"]({
                  context: context
                });
                noiseL.connect(merge, 0, 0);
                noiseR.connect(merge, 0, 1);
                gainNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
                  context: context
                }).toDestination();
                merge.connect(gainNode);
                noiseL.start(0);
                noiseR.start(0); // predelay

                gainNode.gain.setValueAtTime(0, 0);
                gainNode.gain.setValueAtTime(1, this._preDelay); // decay

                gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay); // render the buffer

                renderPromise = context.render();
                this.ready = renderPromise.then(_core_util_Interface__WEBPACK_IMPORTED_MODULE_8__["noOp"]); // wait for the previous `ready` to resolve

                _context.next = 18;
                return previousReady;

              case 18:
                _context.next = 20;
                return renderPromise;

              case 20:
                this._convolver.buffer = _context.sent.get();
                return _context.abrupt("return", this);

              case 22:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Reverb.prototype), "dispose", this).call(this);

      this._convolver.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_6__["Effect"].getDefaults(), {
        decay: 1.5,
        preDelay: 0.01
      });
    }
  }]);

  return Reverb;
}(_Effect__WEBPACK_IMPORTED_MODULE_6__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoEffect.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoEffect.js ***!
  \************************************************************/
/*! exports provided: StereoEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StereoEffect", function() { return StereoEffect; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/channel/CrossFade */ "./node_modules/tone/build/esm/component/channel/CrossFade.js");
/* harmony import */ var _component_channel_Split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Base class for Stereo effects.
 */

var StereoEffect = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(StereoEffect, _ToneAudioNode);

  var _super = _createSuper(StereoEffect);

  function StereoEffect(options) {
    var _this;

    _classCallCheck(this, StereoEffect);

    _this = _super.call(this, options);
    _this.name = "StereoEffect";
    _this.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
      context: _this.context
    }); // force mono sources to be stereo

    _this.input.channelCount = 2;
    _this.input.channelCountMode = "explicit";
    _this._dryWet = _this.output = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_1__["CrossFade"]({
      context: _this.context,
      fade: options.wet
    });
    _this.wet = _this._dryWet.fade;
    _this._split = new _component_channel_Split__WEBPACK_IMPORTED_MODULE_2__["Split"]({
      context: _this.context,
      channels: 2
    });
    _this._merge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_4__["Merge"]({
      context: _this.context,
      channels: 2
    }); // connections

    _this.input.connect(_this._split); // dry wet connections


    _this.input.connect(_this._dryWet.a);

    _this._merge.connect(_this._dryWet.b);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this), ["wet"]);
    return _this;
  }
  /**
   * Connect the left part of the effect
   */


  _createClass(StereoEffect, [{
    key: "connectEffectLeft",
    value: function connectEffectLeft() {
      var _ref;

      this._split.connect(arguments.length <= 0 ? undefined : arguments[0], 0, 0);

      _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"].apply(void 0, arguments);
      Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])((_ref = arguments.length - 1, _ref < 0 || arguments.length <= _ref ? undefined : arguments[_ref]), this._merge, 0, 0);
    }
    /**
     * Connect the right part of the effect
     */

  }, {
    key: "connectEffectRight",
    value: function connectEffectRight() {
      var _ref2;

      this._split.connect(arguments.length <= 0 ? undefined : arguments[0], 1, 0);

      _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"].apply(void 0, arguments);
      Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])((_ref2 = arguments.length - 1, _ref2 < 0 || arguments.length <= _ref2 ? undefined : arguments[_ref2]), this._merge, 0, 1);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(StereoEffect.prototype), "dispose", this).call(this);

      this._dryWet.dispose();

      this._split.dispose();

      this._merge.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
        wet: 1
      });
    }
  }]);

  return StereoEffect;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js":
/*!********************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js ***!
  \********************************************************************/
/*! exports provided: StereoFeedbackEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StereoFeedbackEffect", function() { return StereoFeedbackEffect; });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _component_channel_Split__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../component/channel/Split */ "./node_modules/tone/build/esm/component/channel/Split.js");
/* harmony import */ var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../component/channel/Merge */ "./node_modules/tone/build/esm/component/channel/Merge.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Base class for stereo feedback effects where the effectReturn is fed back into the same channel.
 */

var StereoFeedbackEffect = /*#__PURE__*/function (_StereoEffect) {
  _inherits(StereoFeedbackEffect, _StereoEffect);

  var _super = _createSuper(StereoFeedbackEffect);

  function StereoFeedbackEffect(options) {
    var _this;

    _classCallCheck(this, StereoFeedbackEffect);

    _this = _super.call(this, options);
    _this.feedback = new _signal_Signal__WEBPACK_IMPORTED_MODULE_1__["Signal"]({
      context: _this.context,
      value: options.feedback,
      units: "normalRange"
    });
    _this._feedbackL = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });
    _this._feedbackR = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });
    _this._feedbackSplit = new _component_channel_Split__WEBPACK_IMPORTED_MODULE_4__["Split"]({
      context: _this.context,
      channels: 2
    });
    _this._feedbackMerge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_5__["Merge"]({
      context: _this.context,
      channels: 2
    });

    _this._merge.connect(_this._feedbackSplit);

    _this._feedbackMerge.connect(_this._split); // the left output connected to the left input


    _this._feedbackSplit.connect(_this._feedbackL, 0, 0);

    _this._feedbackL.connect(_this._feedbackMerge, 0, 0); // the right output connected to the right input


    _this._feedbackSplit.connect(_this._feedbackR, 1, 0);

    _this._feedbackR.connect(_this._feedbackMerge, 0, 1); // the feedback control


    _this.feedback.fan(_this._feedbackL.gain, _this._feedbackR.gain);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["feedback"]);
    return _this;
  }

  _createClass(StereoFeedbackEffect, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(StereoFeedbackEffect.prototype), "dispose", this).call(this);

      this.feedback.dispose();

      this._feedbackL.dispose();

      this._feedbackR.dispose();

      this._feedbackSplit.dispose();

      this._feedbackMerge.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
        feedback: 0.5
      });
    }
  }]);

  return StereoFeedbackEffect;
}(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoWidener.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoWidener.js ***!
  \*************************************************************/
/*! exports provided: StereoWidener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StereoWidener", function() { return StereoWidener; });
/* harmony import */ var _effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../effect/MidSideEffect */ "./node_modules/tone/build/esm/effect/MidSideEffect.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Subtract__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * Applies a width factor to the mid/side seperation.
 * 0 is all mid and 1 is all side.
 * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
 * ```
 * Mid *= 2*(1-width)<br>
 * Side *= 2*width
 * ```
 * @category Effect
 */

var StereoWidener = /*#__PURE__*/function (_MidSideEffect) {
  _inherits(StereoWidener, _MidSideEffect);

  var _super = _createSuper(StereoWidener);

  function StereoWidener() {
    var _this;

    _classCallCheck(this, StereoWidener);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(StereoWidener.getDefaults(), arguments, ["width"]));
    _this.name = "StereoWidener";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(StereoWidener.getDefaults(), arguments, ["width"]);
    _this.width = new _signal_Signal__WEBPACK_IMPORTED_MODULE_1__["Signal"]({
      context: _this.context,
      value: options.width,
      units: "normalRange"
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this), ["width"]);
    _this._twoTimesWidthMid = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
      context: _this.context,
      value: 2
    });
    _this._twoTimesWidthSide = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
      context: _this.context,
      value: 2
    });
    _this._midMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
      context: _this.context
    });

    _this._twoTimesWidthMid.connect(_this._midMult.factor);

    _this.connectEffectMid(_this._midMult);

    _this._oneMinusWidth = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_3__["Subtract"]({
      context: _this.context
    });

    _this._oneMinusWidth.connect(_this._twoTimesWidthMid);

    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_6__["connect"])(_this.context.getConstant(1), _this._oneMinusWidth);

    _this.width.connect(_this._oneMinusWidth.subtrahend);

    _this._sideMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
      context: _this.context
    });

    _this.width.connect(_this._twoTimesWidthSide);

    _this._twoTimesWidthSide.connect(_this._sideMult.factor);

    _this.connectEffectSide(_this._sideMult);

    return _this;
  }

  _createClass(StereoWidener, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(StereoWidener.prototype), "dispose", this).call(this);

      this.width.dispose();

      this._midMult.dispose();

      this._sideMult.dispose();

      this._twoTimesWidthMid.dispose();

      this._twoTimesWidthSide.dispose();

      this._oneMinusWidth.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__["MidSideEffect"].getDefaults(), {
        width: 0.5
      });
    }
  }]);

  return StereoWidener;
}(_effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__["MidSideEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js ***!
  \*********************************************************************/
/*! exports provided: StereoXFeedbackEffect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StereoXFeedbackEffect", function() { return StereoXFeedbackEffect; });
/* harmony import */ var _StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoFeedbackEffect */ "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right
 * and right to left instead of on the same channel.
 * ```
 * +--------------------------------+ feedbackL <-----------------------------------+
 * |                                                                                |
 * +-->                          +----->        +---->                          +-----+
 *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |
 * +-->                          +----->        +---->                          +---+ |
 * |                                                                                  |
 * +--------------------------------+ feedbackR <-------------------------------------+
 * ```
 */

var StereoXFeedbackEffect = /*#__PURE__*/function (_StereoFeedbackEffect) {
  _inherits(StereoXFeedbackEffect, _StereoFeedbackEffect);

  var _super = _createSuper(StereoXFeedbackEffect);

  function StereoXFeedbackEffect(options) {
    var _this;

    _classCallCheck(this, StereoXFeedbackEffect);

    _this = _super.call(this, options); // the left output connected to the right input

    _this._feedbackL.disconnect();

    _this._feedbackL.connect(_this._feedbackMerge, 0, 1); // the left output connected to the right input


    _this._feedbackR.disconnect();

    _this._feedbackR.connect(_this._feedbackMerge, 0, 0);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["readOnly"])(_assertThisInitialized(_this), ["feedback"]);
    return _this;
  }

  return StereoXFeedbackEffect;
}(_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoFeedbackEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Tremolo.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Tremolo.js ***!
  \*******************************************************/
/*! exports provided: Tremolo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tremolo", function() { return Tremolo; });
/* harmony import */ var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StereoEffect */ "./node_modules/tone/build/esm/effect/StereoEffect.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].
 * The effect is a stereo effect where the modulation phase is inverted in each channel.
 *
 * @example
 * // create a tremolo and start it's LFO
 * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();
 * // route an oscillator through the tremolo and start it
 * const oscillator = new Tone.Oscillator().connect(tremolo).start();
 *
 * @category Effect
 */

var Tremolo = /*#__PURE__*/function (_StereoEffect) {
  _inherits(Tremolo, _StereoEffect);

  var _super = _createSuper(Tremolo);

  function Tremolo() {
    var _this;

    _classCallCheck(this, Tremolo);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Tremolo.getDefaults(), arguments, ["frequency", "depth"]));
    _this.name = "Tremolo";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Tremolo.getDefaults(), arguments, ["frequency", "depth"]);
    _this._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__["LFO"]({
      context: _this.context,
      type: options.type,
      min: 1,
      max: 0
    });
    _this._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__["LFO"]({
      context: _this.context,
      type: options.type,
      min: 1,
      max: 0
    });
    _this._amplitudeL = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });
    _this._amplitudeR = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
      context: _this.context,
      value: options.frequency,
      units: "frequency"
    });
    _this.depth = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
      context: _this.context,
      value: options.depth,
      units: "normalRange"
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this), ["frequency", "depth"]);

    _this.connectEffectLeft(_this._amplitudeL);

    _this.connectEffectRight(_this._amplitudeR);

    _this._lfoL.connect(_this._amplitudeL.gain);

    _this._lfoR.connect(_this._amplitudeR.gain);

    _this.frequency.fan(_this._lfoL.frequency, _this._lfoR.frequency);

    _this.depth.fan(_this._lfoR.amplitude, _this._lfoL.amplitude);

    _this.spread = options.spread;
    return _this;
  }

  _createClass(Tremolo, [{
    key: "start",
    value:
    /**
     * Start the tremolo.
     */
    function start(time) {
      this._lfoL.start(time);

      this._lfoR.start(time);

      return this;
    }
    /**
     * Stop the tremolo.
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this._lfoL.stop(time);

      this._lfoR.stop(time);

      return this;
    }
    /**
     * Sync the effect to the transport.
     */

  }, {
    key: "sync",
    value: function sync() {
      this._lfoL.sync();

      this._lfoR.sync();

      this.context.transport.syncSignal(this.frequency);
      return this;
    }
    /**
     * Unsync the filter from the transport
     */

  }, {
    key: "unsync",
    value: function unsync() {
      this._lfoL.unsync();

      this._lfoR.unsync();

      this.context.transport.unsyncSignal(this.frequency);
      return this;
    }
    /**
     * The oscillator type.
     */

  }, {
    key: "type",
    get: function get() {
      return this._lfoL.type;
    },
    set: function set(type) {
      this._lfoL.type = type;
      this._lfoR.type = type;
    }
    /**
     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
     * When set to 180, LFO's will be panned hard left and right respectively.
     */

  }, {
    key: "spread",
    get: function get() {
      return this._lfoR.phase - this._lfoL.phase; // 180
    },
    set: function set(spread) {
      this._lfoL.phase = 90 - spread / 2;
      this._lfoR.phase = spread / 2 + 90;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Tremolo.prototype), "dispose", this).call(this);

      this._lfoL.dispose();

      this._lfoR.dispose();

      this._amplitudeL.dispose();

      this._amplitudeR.dispose();

      this.frequency.dispose();
      this.depth.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
        frequency: 10,
        type: "sine",
        depth: 0.5,
        spread: 180
      });
    }
  }]);

  return Tremolo;
}(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/Vibrato.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/Vibrato.js ***!
  \*******************************************************/
/*! exports provided: Vibrato */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Vibrato", function() { return Vibrato; });
/* harmony import */ var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Effect */ "./node_modules/tone/build/esm/effect/Effect.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/Delay */ "./node_modules/tone/build/esm/core/context/Delay.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO
 * modulates the delayTime of the delay, causing the pitch to rise and fall.
 * @category Effect
 */

var Vibrato = /*#__PURE__*/function (_Effect) {
  _inherits(Vibrato, _Effect);

  var _super = _createSuper(Vibrato);

  function Vibrato() {
    var _this;

    _classCallCheck(this, Vibrato);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Vibrato.getDefaults(), arguments, ["frequency", "depth"]));
    _this.name = "Vibrato";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Vibrato.getDefaults(), arguments, ["frequency", "depth"]);
    _this._delayNode = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
      context: _this.context,
      delayTime: 0,
      maxDelay: options.maxDelay
    });
    _this._lfo = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
      context: _this.context,
      type: options.type,
      min: 0,
      max: options.maxDelay,
      frequency: options.frequency,
      phase: -90 // offse the phase so the resting position is in the center

    }).start().connect(_this._delayNode.delayTime);
    _this.frequency = _this._lfo.frequency;
    _this.depth = _this._lfo.amplitude;
    _this.depth.value = options.depth;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["frequency", "depth"]);

    _this.effectSend.chain(_this._delayNode, _this.effectReturn);

    return _this;
  }

  _createClass(Vibrato, [{
    key: "type",
    get:
    /**
     * Type of oscillator attached to the Vibrato.
     */
    function get() {
      return this._lfo.type;
    },
    set: function set(type) {
      this._lfo.type = type;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Vibrato.prototype), "dispose", this).call(this);

      this._delayNode.dispose();

      this._lfo.dispose();

      this.frequency.dispose();
      this.depth.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
        maxDelay: 0.005,
        frequency: 5,
        depth: 0.1,
        type: "sine"
      });
    }
  }]);

  return Vibrato;
}(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/effect/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/effect/index.js ***!
  \*****************************************************/
/*! exports provided: AutoFilter, AutoPanner, AutoWah, BitCrusher, Chebyshev, Chorus, Distortion, FeedbackDelay, FrequencyShifter, Freeverb, JCReverb, PingPongDelay, PitchShift, Phaser, Reverb, StereoWidener, Tremolo, Vibrato */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _AutoFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AutoFilter */ "./node_modules/tone/build/esm/effect/AutoFilter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoFilter", function() { return _AutoFilter__WEBPACK_IMPORTED_MODULE_0__["AutoFilter"]; });

/* harmony import */ var _AutoPanner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AutoPanner */ "./node_modules/tone/build/esm/effect/AutoPanner.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoPanner", function() { return _AutoPanner__WEBPACK_IMPORTED_MODULE_1__["AutoPanner"]; });

/* harmony import */ var _AutoWah__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AutoWah */ "./node_modules/tone/build/esm/effect/AutoWah.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoWah", function() { return _AutoWah__WEBPACK_IMPORTED_MODULE_2__["AutoWah"]; });

/* harmony import */ var _BitCrusher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BitCrusher */ "./node_modules/tone/build/esm/effect/BitCrusher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BitCrusher", function() { return _BitCrusher__WEBPACK_IMPORTED_MODULE_3__["BitCrusher"]; });

/* harmony import */ var _Chebyshev__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Chebyshev */ "./node_modules/tone/build/esm/effect/Chebyshev.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chebyshev", function() { return _Chebyshev__WEBPACK_IMPORTED_MODULE_4__["Chebyshev"]; });

/* harmony import */ var _Chorus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Chorus */ "./node_modules/tone/build/esm/effect/Chorus.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chorus", function() { return _Chorus__WEBPACK_IMPORTED_MODULE_5__["Chorus"]; });

/* harmony import */ var _Distortion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Distortion */ "./node_modules/tone/build/esm/effect/Distortion.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Distortion", function() { return _Distortion__WEBPACK_IMPORTED_MODULE_6__["Distortion"]; });

/* harmony import */ var _FeedbackDelay__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./FeedbackDelay */ "./node_modules/tone/build/esm/effect/FeedbackDelay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function() { return _FeedbackDelay__WEBPACK_IMPORTED_MODULE_7__["FeedbackDelay"]; });

/* harmony import */ var _FrequencyShifter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./FrequencyShifter */ "./node_modules/tone/build/esm/effect/FrequencyShifter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function() { return _FrequencyShifter__WEBPACK_IMPORTED_MODULE_8__["FrequencyShifter"]; });

/* harmony import */ var _Freeverb__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Freeverb */ "./node_modules/tone/build/esm/effect/Freeverb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Freeverb", function() { return _Freeverb__WEBPACK_IMPORTED_MODULE_9__["Freeverb"]; });

/* harmony import */ var _JCReverb__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./JCReverb */ "./node_modules/tone/build/esm/effect/JCReverb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JCReverb", function() { return _JCReverb__WEBPACK_IMPORTED_MODULE_10__["JCReverb"]; });

/* harmony import */ var _PingPongDelay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./PingPongDelay */ "./node_modules/tone/build/esm/effect/PingPongDelay.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PingPongDelay", function() { return _PingPongDelay__WEBPACK_IMPORTED_MODULE_11__["PingPongDelay"]; });

/* harmony import */ var _PitchShift__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./PitchShift */ "./node_modules/tone/build/esm/effect/PitchShift.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PitchShift", function() { return _PitchShift__WEBPACK_IMPORTED_MODULE_12__["PitchShift"]; });

/* harmony import */ var _Phaser__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Phaser */ "./node_modules/tone/build/esm/effect/Phaser.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Phaser", function() { return _Phaser__WEBPACK_IMPORTED_MODULE_13__["Phaser"]; });

/* harmony import */ var _Reverb__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Reverb */ "./node_modules/tone/build/esm/effect/Reverb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Reverb", function() { return _Reverb__WEBPACK_IMPORTED_MODULE_14__["Reverb"]; });

/* harmony import */ var _StereoWidener__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./StereoWidener */ "./node_modules/tone/build/esm/effect/StereoWidener.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StereoWidener", function() { return _StereoWidener__WEBPACK_IMPORTED_MODULE_15__["StereoWidener"]; });

/* harmony import */ var _Tremolo__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Tremolo */ "./node_modules/tone/build/esm/effect/Tremolo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tremolo", function() { return _Tremolo__WEBPACK_IMPORTED_MODULE_16__["Tremolo"]; });

/* harmony import */ var _Vibrato__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Vibrato */ "./node_modules/tone/build/esm/effect/Vibrato.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Vibrato", function() { return _Vibrato__WEBPACK_IMPORTED_MODULE_17__["Vibrato"]; });




















/***/ }),

/***/ "./node_modules/tone/build/esm/event/Loop.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Loop.js ***!
  \***************************************************/
/*! exports provided: Loop */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Loop", function() { return Loop; });
/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");
/* harmony import */ var _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Loop creates a looped callback at the
 * specified interval. The callback can be
 * started, stopped and scheduled along
 * the Transport's timeline.
 * @example
 * const loop = new Tone.Loop((time) => {
 * 	// triggered every eighth note.
 * 	console.log(time);
 * }, "8n").start(0);
 * Tone.Transport.start();
 * @category Event
 */

var Loop = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(Loop, _ToneWithContext);

  var _super = _createSuper(Loop);

  function Loop() {
    var _this;

    _classCallCheck(this, Loop);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Loop.getDefaults(), arguments, ["callback", "interval"]));
    _this.name = "Loop";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Loop.getDefaults(), arguments, ["callback", "interval"]);
    _this._event = new _ToneEvent__WEBPACK_IMPORTED_MODULE_0__["ToneEvent"]({
      context: _this.context,
      callback: _this._tick.bind(_assertThisInitialized(_this)),
      loop: true,
      loopEnd: options.interval,
      playbackRate: options.playbackRate,
      probability: options.probability
    });
    _this.callback = options.callback; // set the iterations

    _this.iterations = options.iterations;
    return _this;
  }

  _createClass(Loop, [{
    key: "start",
    value:
    /**
     * Start the loop at the specified time along the Transport's timeline.
     * @param  time  When to start the Loop.
     */
    function start(time) {
      this._event.start(time);

      return this;
    }
    /**
     * Stop the loop at the given time.
     * @param  time  When to stop the Loop.
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this._event.stop(time);

      return this;
    }
    /**
     * Cancel all scheduled events greater than or equal to the given time
     * @param  time  The time after which events will be cancel.
     */

  }, {
    key: "cancel",
    value: function cancel(time) {
      this._event.cancel(time);

      return this;
    }
    /**
     * Internal function called when the notes should be called
     * @param time  The time the event occurs
     */

  }, {
    key: "_tick",
    value: function _tick(time) {
      this.callback(time);
    }
    /**
     * The state of the Loop, either started or stopped.
     */

  }, {
    key: "state",
    get: function get() {
      return this._event.state;
    }
    /**
     * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.
     */

  }, {
    key: "progress",
    get: function get() {
      return this._event.progress;
    }
    /**
     * The time between successive callbacks.
     * @example
     * const loop = new Tone.Loop();
     * loop.interval = "8n"; // loop every 8n
     */

  }, {
    key: "interval",
    get: function get() {
      return this._event.loopEnd;
    },
    set: function set(interval) {
      this._event.loopEnd = interval;
    }
    /**
     * The playback rate of the loop. The normal playback rate is 1 (no change).
     * A `playbackRate` of 2 would be twice as fast.
     */

  }, {
    key: "playbackRate",
    get: function get() {
      return this._event.playbackRate;
    },
    set: function set(rate) {
      this._event.playbackRate = rate;
    }
    /**
     * Random variation +/-0.01s to the scheduled time.
     * Or give it a time value which it will randomize by.
     */

  }, {
    key: "humanize",
    get: function get() {
      return this._event.humanize;
    },
    set: function set(variation) {
      this._event.humanize = variation;
    }
    /**
     * The probably of the callback being invoked.
     */

  }, {
    key: "probability",
    get: function get() {
      return this._event.probability;
    },
    set: function set(prob) {
      this._event.probability = prob;
    }
    /**
     * Muting the Loop means that no callbacks are invoked.
     */

  }, {
    key: "mute",
    get: function get() {
      return this._event.mute;
    },
    set: function set(mute) {
      this._event.mute = mute;
    }
    /**
     * The number of iterations of the loop. The default value is `Infinity` (loop forever).
     */

  }, {
    key: "iterations",
    get: function get() {
      if (this._event.loop === true) {
        return Infinity;
      } else {
        return this._event.loop;
      }
    },
    set: function set(iters) {
      if (iters === Infinity) {
        this._event.loop = true;
      } else {
        this._event.loop = iters;
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Loop.prototype), "dispose", this).call(this);

      this._event.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"].getDefaults(), {
        interval: "4n",
        callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
        playbackRate: 1,
        iterations: Infinity,
        probability: 1,
        mute: false,
        humanize: false
      });
    }
  }]);

  return Loop;
}(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/event/Part.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Part.js ***!
  \***************************************************/
/*! exports provided: Part */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Part", function() { return Part; });
/* harmony import */ var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.
 *
 * @example
 * const synth = new Tone.Synth().toDestination();
 * const part = new Tone.Part(((time, note) => {
 * 	// the notes given as the second element in the array
 * 	// will be passed in as the second argument
 * 	synth.triggerAttackRelease(note, "8n", time);
 * }), [[0, "C2"], ["0:2", "C3"], ["0:3:2", "G2"]]);
 * Tone.Transport.start();
 * @example
 * const synth = new Tone.Synth().toDestination();
 * // use an array of objects as long as the object has a "time" attribute
 * const part = new Tone.Part(((time, value) => {
 * 	// the value is an object which contains both the note and the velocity
 * 	synth.triggerAttackRelease(value.note, "8n", time, value.velocity);
 * }), [{ time: 0, note: "C3", velocity: 0.9 },
 * 	{ time: "0:2", note: "C4", velocity: 0.5 }
 * ]).start(0);
 * Tone.Transport.start();
 * @category Event
 */

var Part = /*#__PURE__*/function (_ToneEvent) {
  _inherits(Part, _ToneEvent);

  var _super = _createSuper(Part);

  function Part() {
    var _this;

    _classCallCheck(this, Part);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Part.getDefaults(), arguments, ["callback", "events"]));
    _this.name = "Part";
    /**
     * Tracks the scheduled events
     */

    _this._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__["StateTimeline"]("stopped");
    /**
     * The events that belong to this part
     */

    _this._events = new Set();
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Part.getDefaults(), arguments, ["callback", "events"]); // make sure things are assigned in the right order

    _this._state.increasing = true; // add the events

    options.events.forEach(function (event) {
      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isArray"])(event)) {
        _this.add(event[0], event[1]);
      } else {
        _this.add(event);
      }
    });
    return _this;
  }

  _createClass(Part, [{
    key: "start",
    value:
    /**
     * Start the part at the given time.
     * @param  time    When to start the part.
     * @param  offset  The offset from the start of the part to begin playing at.
     */
    function start(time, offset) {
      var _this2 = this;

      var ticks = this.toTicks(time);

      if (this._state.getValueAtTime(ticks) !== "started") {
        offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, this._loop ? this._loopStart : 0);

        if (this._loop) {
          offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, this._loopStart);
        } else {
          offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, 0);
        }

        var computedOffset = this.toTicks(offset);

        this._state.add({
          id: -1,
          offset: computedOffset,
          state: "started",
          time: ticks
        });

        this._forEach(function (event) {
          _this2._startNote(event, ticks, computedOffset);
        });
      }

      return this;
    }
    /**
     * Start the event in the given event at the correct time given
     * the ticks and offset and looping.
     * @param  event
     * @param  ticks
     * @param  offset
     */

  }, {
    key: "_startNote",
    value: function _startNote(event, ticks, offset) {
      ticks -= offset;

      if (this._loop) {
        if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {
          if (event.startOffset < offset) {
            // start it on the next loop
            ticks += this._getLoopDuration();
          }

          event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, ticks));
        } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {
          event.loop = false;
          event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, ticks));
        }
      } else if (event.startOffset >= offset) {
        event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, ticks));
      }
    }
  }, {
    key: "startOffset",
    get: function get() {
      return this._startOffset;
    },
    set: function set(offset) {
      var _this3 = this;

      this._startOffset = offset;

      this._forEach(function (event) {
        event.startOffset += _this3._startOffset;
      });
    }
    /**
     * Stop the part at the given time.
     * @param  time  When to stop the part.
     */

  }, {
    key: "stop",
    value: function stop(time) {
      var ticks = this.toTicks(time);

      this._state.cancel(ticks);

      this._state.setStateAtTime("stopped", ticks);

      this._forEach(function (event) {
        event.stop(time);
      });

      return this;
    }
    /**
     * Get/Set an Event's value at the given time.
     * If a value is passed in and no event exists at
     * the given time, one will be created with that value.
     * If two events are at the same time, the first one will
     * be returned.
     * @example
     * const part = new Tone.Part();
     * part.at("1m"); // returns the part at the first measure
     * part.at("2m", "C2"); // set the value at "2m" to C2.
     * // if an event didn't exist at that time, it will be created.
     * @param time The time of the event to get or set.
     * @param value If a value is passed in, the value of the event at the given time will be set to it.
     */

  }, {
    key: "at",
    value: function at(time, value) {
      var timeInTicks = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_1__["TransportTimeClass"](this.context, time).toTicks();
      var tickTime = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, 1).toSeconds();

      var iterator = this._events.values();

      var result = iterator.next();

      while (!result.done) {
        var event = result.value;

        if (Math.abs(timeInTicks - event.startOffset) < tickTime) {
          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(value)) {
            event.value = value;
          }

          return event;
        }

        result = iterator.next();
      } // if there was no event at that time, create one


      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(value)) {
        this.add(time, value); // return the new event

        return this.at(time);
      } else {
        return null;
      }
    }
  }, {
    key: "add",
    value: function add(time, value) {
      // extract the parameters
      if (time instanceof Object && Reflect.has(time, "time")) {
        value = time;
        time = value.time;
      }

      var ticks = this.toTicks(time);
      var event;

      if (value instanceof _ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"]) {
        event = value;
        event.callback = this._tick.bind(this);
      } else {
        event = new _ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"]({
          callback: this._tick.bind(this),
          context: this.context,
          value: value
        });
      } // the start offset


      event.startOffset = ticks; // initialize the values

      event.set({
        humanize: this.humanize,
        loop: this.loop,
        loopEnd: this.loopEnd,
        loopStart: this.loopStart,
        playbackRate: this.playbackRate,
        probability: this.probability
      });

      this._events.add(event); // start the note if it should be played right now


      this._restartEvent(event);

      return this;
    }
    /**
     * Restart the given event
     */

  }, {
    key: "_restartEvent",
    value: function _restartEvent(event) {
      var _this4 = this;

      this._state.forEach(function (stateEvent) {
        if (stateEvent.state === "started") {
          _this4._startNote(event, stateEvent.time, stateEvent.offset);
        } else {
          // stop the note
          event.stop(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](_this4.context, stateEvent.time));
        }
      });
    }
  }, {
    key: "remove",
    value: function remove(time, value) {
      var _this5 = this;

      // extract the parameters
      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isObject"])(time) && time.hasOwnProperty("time")) {
        value = time;
        time = value.time;
      }

      time = this.toTicks(time);

      this._events.forEach(function (event) {
        if (event.startOffset === time) {
          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isUndef"])(value) || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(value) && event.value === value) {
            _this5._events.delete(event);

            event.dispose();
          }
        }
      });

      return this;
    }
    /**
     * Remove all of the notes from the group.
     */

  }, {
    key: "clear",
    value: function clear() {
      this._forEach(function (event) {
        return event.dispose();
      });

      this._events.clear();

      return this;
    }
    /**
     * Cancel scheduled state change events: i.e. "start" and "stop".
     * @param after The time after which to cancel the scheduled events.
     */

  }, {
    key: "cancel",
    value: function cancel(after) {
      this._forEach(function (event) {
        return event.cancel(after);
      });

      this._state.cancel(this.toTicks(after));

      return this;
    }
    /**
     * Iterate over all of the events
     */

  }, {
    key: "_forEach",
    value: function _forEach(callback) {
      if (this._events) {
        this._events.forEach(function (event) {
          if (event instanceof Part) {
            event._forEach(callback);
          } else {
            callback(event);
          }
        });
      }

      return this;
    }
    /**
     * Set the attribute of all of the events
     * @param  attr  the attribute to set
     * @param  value      The value to set it to
     */

  }, {
    key: "_setAll",
    value: function _setAll(attr, value) {
      this._forEach(function (event) {
        event[attr] = value;
      });
    }
    /**
     * Internal tick method
     * @param  time  The time of the event in seconds
     */

  }, {
    key: "_tick",
    value: function _tick(time, value) {
      if (!this.mute) {
        this.callback(time, value);
      }
    }
    /**
     * Determine if the event should be currently looping
     * given the loop boundries of this Part.
     * @param  event  The event to test
     */

  }, {
    key: "_testLoopBoundries",
    value: function _testLoopBoundries(event) {
      if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {
        event.cancel(0);
      } else if (event.state === "stopped") {
        // reschedule it if it's stopped
        this._restartEvent(event);
      }
    }
  }, {
    key: "probability",
    get: function get() {
      return this._probability;
    },
    set: function set(prob) {
      this._probability = prob;

      this._setAll("probability", prob);
    }
  }, {
    key: "humanize",
    get: function get() {
      return this._humanize;
    },
    set: function set(variation) {
      this._humanize = variation;

      this._setAll("humanize", variation);
    }
    /**
     * If the part should loop or not
     * between Part.loopStart and
     * Part.loopEnd. If set to true,
     * the part will loop indefinitely,
     * if set to a number greater than 1
     * it will play a specific number of
     * times, if set to false, 0 or 1, the
     * part will only play once.
     * @example
     * const part = new Tone.Part();
     * // loop the part 8 times
     * part.loop = 8;
     */

  }, {
    key: "loop",
    get: function get() {
      return this._loop;
    },
    set: function set(loop) {
      var _this6 = this;

      this._loop = loop;

      this._forEach(function (event) {
        event.loopStart = _this6.loopStart;
        event.loopEnd = _this6.loopEnd;
        event.loop = loop;

        _this6._testLoopBoundries(event);
      });
    }
    /**
     * The loopEnd point determines when it will
     * loop if Part.loop is true.
     */

  }, {
    key: "loopEnd",
    get: function get() {
      return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._loopEnd).toSeconds();
    },
    set: function set(loopEnd) {
      var _this7 = this;

      this._loopEnd = this.toTicks(loopEnd);

      if (this._loop) {
        this._forEach(function (event) {
          event.loopEnd = loopEnd;

          _this7._testLoopBoundries(event);
        });
      }
    }
    /**
     * The loopStart point determines when it will
     * loop if Part.loop is true.
     */

  }, {
    key: "loopStart",
    get: function get() {
      return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._loopStart).toSeconds();
    },
    set: function set(loopStart) {
      var _this8 = this;

      this._loopStart = this.toTicks(loopStart);

      if (this._loop) {
        this._forEach(function (event) {
          event.loopStart = _this8.loopStart;

          _this8._testLoopBoundries(event);
        });
      }
    }
    /**
     * The playback rate of the part
     */

  }, {
    key: "playbackRate",
    get: function get() {
      return this._playbackRate;
    },
    set: function set(rate) {
      this._playbackRate = rate;

      this._setAll("playbackRate", rate);
    }
    /**
     * The number of scheduled notes in the part.
     */

  }, {
    key: "length",
    get: function get() {
      return this._events.size;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Part.prototype), "dispose", this).call(this);

      this.clear();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"].getDefaults(), {
        events: []
      });
    }
  }]);

  return Part;
}(_ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/event/Pattern.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Pattern.js ***!
  \******************************************************/
/*! exports provided: Pattern */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pattern", function() { return Pattern; });
/* harmony import */ var _Loop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loop */ "./node_modules/tone/build/esm/event/Loop.js");
/* harmony import */ var _PatternGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PatternGenerator */ "./node_modules/tone/build/esm/event/PatternGenerator.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Pattern arpeggiates between the given notes
 * in a number of patterns.
 * @example
 * const pattern = new Tone.Pattern((time, note) => {
 * 	// the order of the notes passed in depends on the pattern
 * }, ["C2", "D4", "E5", "A6"], "upDown");
 * @category Event
 */

var Pattern = /*#__PURE__*/function (_Loop) {
  _inherits(Pattern, _Loop);

  var _super = _createSuper(Pattern);

  function Pattern() {
    var _this;

    _classCallCheck(this, Pattern);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Pattern.getDefaults(), arguments, ["callback", "values", "pattern"]));
    _this.name = "Pattern";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Pattern.getDefaults(), arguments, ["callback", "values", "pattern"]);
    _this.callback = options.callback;
    _this._values = options.values;
    _this._pattern = Object(_PatternGenerator__WEBPACK_IMPORTED_MODULE_1__["PatternGenerator"])(options.values, options.pattern);
    _this._type = options.pattern;
    return _this;
  }

  _createClass(Pattern, [{
    key: "_tick",
    value:
    /**
     * Internal function called when the notes should be called
     */
    function _tick(time) {
      var value = this._pattern.next();

      this._value = value.value;
      this.callback(time, this._value);
    }
    /**
     * The array of events.
     */

  }, {
    key: "values",
    get: function get() {
      return this._values;
    },
    set: function set(val) {
      this._values = val; // reset the pattern

      this.pattern = this._type;
    }
    /**
     * The current value of the pattern.
     */

  }, {
    key: "value",
    get: function get() {
      return this._value;
    }
    /**
     * The pattern type. See Tone.CtrlPattern for the full list of patterns.
     */

  }, {
    key: "pattern",
    get: function get() {
      return this._type;
    },
    set: function set(pattern) {
      this._type = pattern;
      this._pattern = Object(_PatternGenerator__WEBPACK_IMPORTED_MODULE_1__["PatternGenerator"])(this._values, this._type);
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Loop__WEBPACK_IMPORTED_MODULE_0__["Loop"].getDefaults(), {
        pattern: "up",
        values: [],
        callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"]
      });
    }
  }]);

  return Pattern;
}(_Loop__WEBPACK_IMPORTED_MODULE_0__["Loop"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/event/PatternGenerator.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/event/PatternGenerator.js ***!
  \***************************************************************/
/*! exports provided: PatternGenerator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PatternGenerator", function() { return PatternGenerator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");


var _marked = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(upPatternGen),
    _marked2 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(downPatternGen),
    _marked3 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(infiniteGen),
    _marked4 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(alternatingGenerator),
    _marked5 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(jumpUp),
    _marked6 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(jumpDown),
    _marked7 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(randomGen),
    _marked8 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(randomOnce),
    _marked9 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(randomWalk),
    _marked10 = /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(PatternGenerator);



/**
 * Start at the first value and go up to the last
 */

function upPatternGen(values) {
  var index;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function upPatternGen$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          index = 0;

        case 1:
          if (!(index < values.length)) {
            _context.next = 8;
            break;
          }

          index = clampToArraySize(index, values);
          _context.next = 5;
          return values[index];

        case 5:
          index++;
          _context.next = 1;
          break;

        case 8:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}
/**
 * Start at the last value and go down to 0
 */


function downPatternGen(values) {
  var index;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function downPatternGen$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          index = values.length - 1;

        case 1:
          if (!(index >= 0)) {
            _context2.next = 8;
            break;
          }

          index = clampToArraySize(index, values);
          _context2.next = 5;
          return values[index];

        case 5:
          index--;
          _context2.next = 1;
          break;

        case 8:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}
/**
 * Infinitely yield the generator
 */


function infiniteGen(values, gen) {
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function infiniteGen$(_context3) {
    while (1) {
      switch (_context3.prev = _context3.next) {
        case 0:
          if (false) {}

          return _context3.delegateYield(gen(values), "t0", 2);

        case 2:
          _context3.next = 0;
          break;

        case 4:
        case "end":
          return _context3.stop();
      }
    }
  }, _marked3);
}
/**
 * Make sure that the index is in the given range
 */


function clampToArraySize(index, values) {
  return Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_2__["clamp"])(index, 0, values.length - 1);
}
/**
 * Alternate between two generators
 */


function alternatingGenerator(values, directionUp) {
  var index;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function alternatingGenerator$(_context4) {
    while (1) {
      switch (_context4.prev = _context4.next) {
        case 0:
          index = directionUp ? 0 : values.length - 1;

        case 1:
          if (false) {}

          index = clampToArraySize(index, values);
          _context4.next = 5;
          return values[index];

        case 5:
          if (directionUp) {
            index++;

            if (index >= values.length - 1) {
              directionUp = false;
            }
          } else {
            index--;

            if (index <= 0) {
              directionUp = true;
            }
          }

          _context4.next = 1;
          break;

        case 8:
        case "end":
          return _context4.stop();
      }
    }
  }, _marked4);
}
/**
 * Starting from the bottom move up 2, down 1
 */


function jumpUp(values) {
  var index, stepIndex;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function jumpUp$(_context5) {
    while (1) {
      switch (_context5.prev = _context5.next) {
        case 0:
          index = 0;
          stepIndex = 0;

        case 2:
          if (!(index < values.length)) {
            _context5.next = 10;
            break;
          }

          index = clampToArraySize(index, values);
          _context5.next = 6;
          return values[index];

        case 6:
          stepIndex++;
          index += stepIndex % 2 ? 2 : -1;
          _context5.next = 2;
          break;

        case 10:
        case "end":
          return _context5.stop();
      }
    }
  }, _marked5);
}
/**
 * Starting from the top move down 2, up 1
 */


function jumpDown(values) {
  var index, stepIndex;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function jumpDown$(_context6) {
    while (1) {
      switch (_context6.prev = _context6.next) {
        case 0:
          index = values.length - 1;
          stepIndex = 0;

        case 2:
          if (!(index >= 0)) {
            _context6.next = 10;
            break;
          }

          index = clampToArraySize(index, values);
          _context6.next = 6;
          return values[index];

        case 6:
          stepIndex++;
          index += stepIndex % 2 ? -2 : 1;
          _context6.next = 2;
          break;

        case 10:
        case "end":
          return _context6.stop();
      }
    }
  }, _marked6);
}
/**
 * Choose a random index each time
 */


function randomGen(values) {
  var randomIndex;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function randomGen$(_context7) {
    while (1) {
      switch (_context7.prev = _context7.next) {
        case 0:
          if (false) {}

          randomIndex = Math.floor(Math.random() * values.length);
          _context7.next = 4;
          return values[randomIndex];

        case 4:
          _context7.next = 0;
          break;

        case 6:
        case "end":
          return _context7.stop();
      }
    }
  }, _marked7);
}
/**
 * Randomly go through all of the values once before choosing a new random order
 */


function randomOnce(values) {
  var copy, i, randVal, index;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function randomOnce$(_context8) {
    while (1) {
      switch (_context8.prev = _context8.next) {
        case 0:
          // create an array of indices
          copy = [];

          for (i = 0; i < values.length; i++) {
            copy.push(i);
          }

        case 2:
          if (!(copy.length > 0)) {
            _context8.next = 9;
            break;
          }

          // random choose an index, and then remove it so it's not chosen again
          randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);
          index = clampToArraySize(randVal[0], values);
          _context8.next = 7;
          return values[index];

        case 7:
          _context8.next = 2;
          break;

        case 9:
        case "end":
          return _context8.stop();
      }
    }
  }, _marked8);
}
/**
 * Randomly choose to walk up or down 1 index in the values array
 */


function randomWalk(values) {
  var index;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function randomWalk$(_context9) {
    while (1) {
      switch (_context9.prev = _context9.next) {
        case 0:
          // randomly choose a starting index in the values array
          index = Math.floor(Math.random() * values.length);

        case 1:
          if (false) {}

          if (index === 0) {
            index++; // at bottom of array, so force upward step
          } else if (index === values.length - 1) {
            index--; // at top of array, so force downward step
          } else if (Math.random() < 0.5) {
            // else choose random downward or upward step
            index--;
          } else {
            index++;
          }

          _context9.next = 5;
          return values[index];

        case 5:
          _context9.next = 1;
          break;

        case 7:
        case "end":
          return _context9.stop();
      }
    }
  }, _marked9);
}
/**
 * PatternGenerator returns a generator which will iterate over the given array
 * of values and yield the items according to the passed in pattern
 * @param values An array of values to iterate over
 * @param pattern The name of the pattern use when iterating over
 * @param index Where to start in the offset of the values array
 */


function PatternGenerator(values) {
  var pattern,
      index,
      _args10 = arguments;
  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function PatternGenerator$(_context10) {
    while (1) {
      switch (_context10.prev = _context10.next) {
        case 0:
          pattern = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : "up";
          index = _args10.length > 2 && _args10[2] !== undefined ? _args10[2] : 0;
          // safeguards
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_1__["assert"])(values.length > 0, "The array must have more than one value in it");
          _context10.t0 = pattern;
          _context10.next = _context10.t0 === "up" ? 6 : _context10.t0 === "down" ? 7 : _context10.t0 === "upDown" ? 8 : _context10.t0 === "downUp" ? 9 : _context10.t0 === "alternateUp" ? 10 : _context10.t0 === "alternateDown" ? 11 : _context10.t0 === "random" ? 12 : _context10.t0 === "randomOnce" ? 13 : _context10.t0 === "randomWalk" ? 14 : 15;
          break;

        case 6:
          return _context10.delegateYield(infiniteGen(values, upPatternGen), "t1", 7);

        case 7:
          return _context10.delegateYield(infiniteGen(values, downPatternGen), "t2", 8);

        case 8:
          return _context10.delegateYield(alternatingGenerator(values, true), "t3", 9);

        case 9:
          return _context10.delegateYield(alternatingGenerator(values, false), "t4", 10);

        case 10:
          return _context10.delegateYield(infiniteGen(values, jumpUp), "t5", 11);

        case 11:
          return _context10.delegateYield(infiniteGen(values, jumpDown), "t6", 12);

        case 12:
          return _context10.delegateYield(randomGen(values), "t7", 13);

        case 13:
          return _context10.delegateYield(infiniteGen(values, randomOnce), "t8", 14);

        case 14:
          return _context10.delegateYield(randomWalk(values), "t9", 15);

        case 15:
        case "end":
          return _context10.stop();
      }
    }
  }, _marked10);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/event/Sequence.js":
/*!*******************************************************!*\
  !*** ./node_modules/tone/build/esm/event/Sequence.js ***!
  \*******************************************************/
/*! exports provided: Sequence */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sequence", function() { return Sequence; });
/* harmony import */ var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Part__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Part */ "./node_modules/tone/build/esm/event/Part.js");
/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * A sequence is an alternate notation of a part. Instead
 * of passing in an array of [time, event] pairs, pass
 * in an array of events which will be spaced at the
 * given subdivision. Sub-arrays will subdivide that beat
 * by the number of items are in the array.
 * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)
 * @example
 * const synth = new Tone.Synth().toDestination();
 * const seq = new Tone.Sequence((time, note) => {
 * 	synth.triggerAttackRelease(note, 0.1, time);
 * 	// subdivisions are given as subarrays
 * }, ["C4", ["E4", "D4", "E4"], "G4", ["A4", "G4"]]).start(0);
 * Tone.Transport.start();
 * @category Event
 */

var Sequence = /*#__PURE__*/function (_ToneEvent) {
  _inherits(Sequence, _ToneEvent);

  var _super = _createSuper(Sequence);

  function Sequence() {
    var _this;

    _classCallCheck(this, Sequence);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Sequence.getDefaults(), arguments, ["callback", "events", "subdivision"]));
    _this.name = "Sequence";
    /**
     * The object responsible for scheduling all of the events
     */

    _this._part = new _Part__WEBPACK_IMPORTED_MODULE_3__["Part"]({
      callback: _this._seqCallback.bind(_assertThisInitialized(_this)),
      context: _this.context
    });
    /**
     * private reference to all of the sequence proxies
     */

    _this._events = [];
    /**
     * The proxied array
     */

    _this._eventsArray = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Sequence.getDefaults(), arguments, ["callback", "events", "subdivision"]);
    _this._subdivision = _this.toTicks(options.subdivision);
    _this.events = options.events; // set all of the values

    _this.loop = options.loop;
    _this.loopStart = options.loopStart;
    _this.loopEnd = options.loopEnd;
    _this.playbackRate = options.playbackRate;
    _this.probability = options.probability;
    _this.humanize = options.humanize;
    _this.mute = options.mute;
    _this.playbackRate = options.playbackRate;
    return _this;
  }

  _createClass(Sequence, [{
    key: "_seqCallback",
    value:
    /**
     * The internal callback for when an event is invoked
     */
    function _seqCallback(time, value) {
      if (value !== null) {
        this.callback(time, value);
      }
    }
    /**
     * The sequence
     */

  }, {
    key: "events",
    get: function get() {
      return this._events;
    },
    set: function set(s) {
      this.clear();
      this._eventsArray = s;
      this._events = this._createSequence(this._eventsArray);

      this._eventsUpdated();
    }
    /**
     * Start the part at the given time.
     * @param  time    When to start the part.
     * @param  offset  The offset index to start at
     */

  }, {
    key: "start",
    value: function start(time, offset) {
      this._part.start(time, offset ? this._indexTime(offset) : offset);

      return this;
    }
    /**
     * Stop the part at the given time.
     * @param  time  When to stop the part.
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this._part.stop(time);

      return this;
    }
    /**
     * The subdivision of the sequence. This can only be
     * set in the constructor. The subdivision is the
     * interval between successive steps.
     */

  }, {
    key: "subdivision",
    get: function get() {
      return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._subdivision).toSeconds();
    }
    /**
     * Create a sequence proxy which can be monitored to create subsequences
     */

  }, {
    key: "_createSequence",
    value: function _createSequence(array) {
      var _this2 = this;

      return new Proxy(array, {
        get: function get(target, property) {
          // property is index in this case
          return target[property];
        },
        set: function set(target, property, value) {
          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isString"])(property) && isFinite(parseInt(property, 10))) {
            if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
              target[property] = _this2._createSequence(value);
            } else {
              target[property] = value;
            }
          } else {
            target[property] = value;
          }

          _this2._eventsUpdated(); // return true to accept the changes


          return true;
        }
      });
    }
    /**
     * When the sequence has changed, all of the events need to be recreated
     */

  }, {
    key: "_eventsUpdated",
    value: function _eventsUpdated() {
      this._part.clear();

      this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset); // update the loopEnd


      this.loopEnd = this.loopEnd;
    }
    /**
     * reschedule all of the events that need to be rescheduled
     */

  }, {
    key: "_rescheduleSequence",
    value: function _rescheduleSequence(sequence, subdivision, startOffset) {
      var _this3 = this;

      sequence.forEach(function (value, index) {
        var eventOffset = index * subdivision + startOffset;

        if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
          _this3._rescheduleSequence(value, subdivision / value.length, eventOffset);
        } else {
          var startTime = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](_this3.context, eventOffset, "i").toSeconds();

          _this3._part.add(startTime, value);
        }
      });
    }
    /**
     * Get the time of the index given the Sequence's subdivision
     * @param  index
     * @return The time of that index
     */

  }, {
    key: "_indexTime",
    value: function _indexTime(index) {
      return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, index * this._subdivision + this.startOffset).toSeconds();
    }
    /**
     * Clear all of the events
     */

  }, {
    key: "clear",
    value: function clear() {
      this._part.clear();

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Sequence.prototype), "dispose", this).call(this);

      this._part.dispose();

      return this;
    } //-------------------------------------
    // PROXY CALLS
    //-------------------------------------

  }, {
    key: "loop",
    get: function get() {
      return this._part.loop;
    },
    set: function set(l) {
      this._part.loop = l;
    }
    /**
     * The index at which the sequence should start looping
     */

  }, {
    key: "loopStart",
    get: function get() {
      return this._loopStart;
    },
    set: function set(index) {
      this._loopStart = index;
      this._part.loopStart = this._indexTime(index);
    }
    /**
     * The index at which the sequence should end looping
     */

  }, {
    key: "loopEnd",
    get: function get() {
      return this._loopEnd;
    },
    set: function set(index) {
      this._loopEnd = index;

      if (index === 0) {
        this._part.loopEnd = this._indexTime(this._eventsArray.length);
      } else {
        this._part.loopEnd = this._indexTime(index);
      }
    }
  }, {
    key: "startOffset",
    get: function get() {
      return this._part.startOffset;
    },
    set: function set(start) {
      this._part.startOffset = start;
    }
  }, {
    key: "playbackRate",
    get: function get() {
      return this._part.playbackRate;
    },
    set: function set(rate) {
      this._part.playbackRate = rate;
    }
  }, {
    key: "probability",
    get: function get() {
      return this._part.probability;
    },
    set: function set(prob) {
      this._part.probability = prob;
    }
  }, {
    key: "progress",
    get: function get() {
      return this._part.progress;
    }
  }, {
    key: "humanize",
    get: function get() {
      return this._part.humanize;
    },
    set: function set(variation) {
      this._part.humanize = variation;
    }
    /**
     * The number of scheduled events
     */

  }, {
    key: "length",
    get: function get() {
      return this._part.length;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(_ToneEvent__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"].getDefaults(), ["value"]), {
        events: [],
        loop: true,
        loopEnd: 0,
        loopStart: 0,
        subdivision: "8n"
      });
    }
  }]);

  return Sequence;
}(_ToneEvent__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/event/ToneEvent.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/event/ToneEvent.js ***!
  \********************************************************/
/*! exports provided: ToneEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneEvent", function() { return ToneEvent; });
/* harmony import */ var _core_clock_Transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/clock/Transport */ "./node_modules/tone/build/esm/core/clock/Transport.js");
/* harmony import */ var _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneWithContext */ "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
/* harmony import */ var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/type/Ticks */ "./node_modules/tone/build/esm/core/type/Ticks.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable
 * callback for a single or repeatable events along the timeline.
 *
 * @example
 * const synth = new Tone.PolySynth().toDestination();
 * const chordEvent = new Tone.ToneEvent(((time, chord) => {
 * 	// the chord as well as the exact time of the event
 * 	// are passed in as arguments to the callback function
 * 	synth.triggerAttackRelease(chord, 0.5, time);
 * }), ["D4", "E4", "F4"]);
 * // start the chord at the beginning of the transport timeline
 * chordEvent.start();
 * // loop it every measure for 8 measures
 * chordEvent.loop = 8;
 * chordEvent.loopEnd = "1m";
 * @category Event
 */

var ToneEvent = /*#__PURE__*/function (_ToneWithContext) {
  _inherits(ToneEvent, _ToneWithContext);

  var _super = _createSuper(ToneEvent);

  function ToneEvent() {
    var _this;

    _classCallCheck(this, ToneEvent);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneEvent.getDefaults(), arguments, ["callback", "value"]));
    _this.name = "ToneEvent";
    /**
     * Tracks the scheduled events
     */

    _this._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_5__["StateTimeline"]("stopped");
    /**
     * A delay time from when the event is scheduled to start
     */

    _this._startOffset = 0;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneEvent.getDefaults(), arguments, ["callback", "value"]);
    _this._loop = options.loop;
    _this.callback = options.callback;
    _this.value = options.value;
    _this._loopStart = _this.toTicks(options.loopStart);
    _this._loopEnd = _this.toTicks(options.loopEnd);
    _this._playbackRate = options.playbackRate;
    _this._probability = options.probability;
    _this._humanize = options.humanize;
    _this.mute = options.mute;
    _this._playbackRate = options.playbackRate;
    _this._state.increasing = true; // schedule the events for the first time

    _this._rescheduleEvents();

    return _this;
  }

  _createClass(ToneEvent, [{
    key: "_rescheduleEvents",
    value:
    /**
     * Reschedule all of the events along the timeline
     * with the updated values.
     * @param after Only reschedules events after the given time.
     */
    function _rescheduleEvents() {
      var _this2 = this;

      var after = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;

      // if no argument is given, schedules all of the events
      this._state.forEachFrom(after, function (event) {
        var duration;

        if (event.state === "started") {
          if (event.id !== -1) {
            _this2.context.transport.clear(event.id);
          }

          var startTick = event.time + Math.round(_this2.startOffset / _this2._playbackRate);

          if (_this2._loop === true || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(_this2._loop) && _this2._loop > 1) {
            duration = Infinity;

            if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(_this2._loop)) {
              duration = _this2._loop * _this2._getLoopDuration();
            }

            var nextEvent = _this2._state.getAfter(startTick);

            if (nextEvent !== null) {
              duration = Math.min(duration, nextEvent.time - startTick);
            }

            if (duration !== Infinity) {
              // schedule a stop since it's finite duration
              _this2._state.setStateAtTime("stopped", startTick + duration + 1, {
                id: -1
              });

              duration = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this2.context, duration);
            }

            var interval = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this2.context, _this2._getLoopDuration());
            event.id = _this2.context.transport.scheduleRepeat(_this2._tick.bind(_this2), interval, new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this2.context, startTick), duration);
          } else {
            event.id = _this2.context.transport.schedule(_this2._tick.bind(_this2), new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this2.context, startTick));
          }
        }
      });
    }
    /**
     * Returns the playback state of the note, either "started" or "stopped".
     */

  }, {
    key: "state",
    get: function get() {
      return this._state.getValueAtTime(this.context.transport.ticks);
    }
    /**
     * The start from the scheduled start time.
     */

  }, {
    key: "startOffset",
    get: function get() {
      return this._startOffset;
    },
    set: function set(offset) {
      this._startOffset = offset;
    }
    /**
     * The probability of the notes being triggered.
     */

  }, {
    key: "probability",
    get: function get() {
      return this._probability;
    },
    set: function set(prob) {
      this._probability = prob;
    }
    /**
     * If set to true, will apply small random variation
     * to the callback time. If the value is given as a time, it will randomize
     * by that amount.
     * @example
     * const event = new Tone.ToneEvent();
     * event.humanize = true;
     */

  }, {
    key: "humanize",
    get: function get() {
      return this._humanize;
    },
    set: function set(variation) {
      this._humanize = variation;
    }
    /**
     * Start the note at the given time.
     * @param  time  When the event should start.
     */

  }, {
    key: "start",
    value: function start(time) {
      var ticks = this.toTicks(time);

      if (this._state.getValueAtTime(ticks) === "stopped") {
        this._state.add({
          id: -1,
          state: "started",
          time: ticks
        });

        this._rescheduleEvents(ticks);
      }

      return this;
    }
    /**
     * Stop the Event at the given time.
     * @param  time  When the event should stop.
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this.cancel(time);
      var ticks = this.toTicks(time);

      if (this._state.getValueAtTime(ticks) === "started") {
        this._state.setStateAtTime("stopped", ticks, {
          id: -1
        });

        var previousEvent = this._state.getBefore(ticks);

        var reschedulTime = ticks;

        if (previousEvent !== null) {
          reschedulTime = previousEvent.time;
        }

        this._rescheduleEvents(reschedulTime);
      }

      return this;
    }
    /**
     * Cancel all scheduled events greater than or equal to the given time
     * @param  time  The time after which events will be cancel.
     */

  }, {
    key: "cancel",
    value: function cancel(time) {
      var _this3 = this;

      time = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(time, -Infinity);
      var ticks = this.toTicks(time);

      this._state.forEachFrom(ticks, function (event) {
        _this3.context.transport.clear(event.id);
      });

      this._state.cancel(ticks);

      return this;
    }
    /**
     * The callback function invoker. Also
     * checks if the Event is done playing
     * @param  time  The time of the event in seconds
     */

  }, {
    key: "_tick",
    value: function _tick(time) {
      var ticks = this.context.transport.getTicksAtTime(time);

      if (!this.mute && this._state.getValueAtTime(ticks) === "started") {
        if (this.probability < 1 && Math.random() > this.probability) {
          return;
        }

        if (this.humanize) {
          var variation = 0.02;

          if (!Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isBoolean"])(this.humanize)) {
            variation = this.toSeconds(this.humanize);
          }

          time += (Math.random() * 2 - 1) * variation;
        }

        this.callback(time, this.value);
      }
    }
    /**
     * Get the duration of the loop.
     */

  }, {
    key: "_getLoopDuration",
    value: function _getLoopDuration() {
      return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);
    }
    /**
     * If the note should loop or not
     * between ToneEvent.loopStart and
     * ToneEvent.loopEnd. If set to true,
     * the event will loop indefinitely,
     * if set to a number greater than 1
     * it will play a specific number of
     * times, if set to false, 0 or 1, the
     * part will only play once.
     */

  }, {
    key: "loop",
    get: function get() {
      return this._loop;
    },
    set: function set(loop) {
      this._loop = loop;

      this._rescheduleEvents();
    }
    /**
     * The playback rate of the note. Defaults to 1.
     * @example
     * const note = new Tone.ToneEvent();
     * note.loop = true;
     * // repeat the note twice as fast
     * note.playbackRate = 2;
     */

  }, {
    key: "playbackRate",
    get: function get() {
      return this._playbackRate;
    },
    set: function set(rate) {
      this._playbackRate = rate;

      this._rescheduleEvents();
    }
    /**
     * The loopEnd point is the time the event will loop
     * if ToneEvent.loop is true.
     */

  }, {
    key: "loopEnd",
    get: function get() {
      return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](this.context, this._loopEnd).toSeconds();
    },
    set: function set(loopEnd) {
      this._loopEnd = this.toTicks(loopEnd);

      if (this._loop) {
        this._rescheduleEvents();
      }
    }
    /**
     * The time when the loop should start.
     */

  }, {
    key: "loopStart",
    get: function get() {
      return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](this.context, this._loopStart).toSeconds();
    },
    set: function set(loopStart) {
      this._loopStart = this.toTicks(loopStart);

      if (this._loop) {
        this._rescheduleEvents();
      }
    }
    /**
     * The current progress of the loop interval.
     * Returns 0 if the event is not started yet or
     * it is not set to loop.
     */

  }, {
    key: "progress",
    get: function get() {
      if (this._loop) {
        var ticks = this.context.transport.ticks;

        var lastEvent = this._state.get(ticks);

        if (lastEvent !== null && lastEvent.state === "started") {
          var loopDuration = this._getLoopDuration();

          var progress = (ticks - lastEvent.time) % loopDuration;
          return progress / loopDuration;
        } else {
          return 0;
        }
      } else {
        return 0;
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneEvent.prototype), "dispose", this).call(this);

      this.cancel();

      this._state.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"].getDefaults(), {
        callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
        humanize: false,
        loop: false,
        loopEnd: "1m",
        loopStart: 0,
        mute: false,
        playbackRate: 1,
        probability: 1,
        value: null
      });
    }
  }]);

  return ToneEvent;
}(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/event/index.js":
/*!****************************************************!*\
  !*** ./node_modules/tone/build/esm/event/index.js ***!
  \****************************************************/
/*! exports provided: Loop, Part, Pattern, Sequence, ToneEvent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Loop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Loop */ "./node_modules/tone/build/esm/event/Loop.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Loop", function() { return _Loop__WEBPACK_IMPORTED_MODULE_0__["Loop"]; });

/* harmony import */ var _Part__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Part */ "./node_modules/tone/build/esm/event/Part.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Part", function() { return _Part__WEBPACK_IMPORTED_MODULE_1__["Part"]; });

/* harmony import */ var _Pattern__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Pattern */ "./node_modules/tone/build/esm/event/Pattern.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pattern", function() { return _Pattern__WEBPACK_IMPORTED_MODULE_2__["Pattern"]; });

/* harmony import */ var _Sequence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sequence */ "./node_modules/tone/build/esm/event/Sequence.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sequence", function() { return _Sequence__WEBPACK_IMPORTED_MODULE_3__["Sequence"]; });

/* harmony import */ var _ToneEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneEvent */ "./node_modules/tone/build/esm/event/ToneEvent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneEvent", function() { return _ToneEvent__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"]; });







/***/ }),

/***/ "./node_modules/tone/build/esm/index.js":
/*!**********************************************!*\
  !*** ./node_modules/tone/build/esm/index.js ***!
  \**********************************************/
/*! exports provided: getContext, setContext, Clock, Context, BaseContext, Delay, Gain, Offline, OfflineContext, Param, ToneAudioBuffer, ToneAudioBuffers, ToneAudioNode, connectSeries, connect, disconnect, FrequencyClass, Frequency, MidiClass, Midi, TimeClass, Time, TicksClass, Ticks, TransportTimeClass, TransportTime, Emitter, IntervalTimeline, StateTimeline, Timeline, isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote, dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof, optionsFromArguments, defaultArg, Unit, debug, Noise, UserMedia, Oscillator, AMOscillator, FMOscillator, PulseOscillator, FatOscillator, PWMOscillator, OmniOscillator, ToneOscillatorNode, LFO, ToneBufferSource, Player, Players, GrainPlayer, Add, Abs, AudioToGain, GainToAudio, GreaterThan, GreaterThanZero, Multiply, Negate, Pow, Signal, connectSignal, Scale, ScaleExp, Subtract, SyncedSignal, WaveShaper, Zero, AMSynth, DuoSynth, FMSynth, MetalSynth, MembraneSynth, MonoSynth, NoiseSynth, PluckSynth, PolySynth, Sampler, Synth, Loop, Part, Pattern, Sequence, ToneEvent, AutoFilter, AutoPanner, AutoWah, BitCrusher, Chebyshev, Chorus, Distortion, FeedbackDelay, FrequencyShifter, Freeverb, JCReverb, PingPongDelay, PitchShift, Phaser, Reverb, StereoWidener, Tremolo, Vibrato, Analyser, Meter, FFT, DCMeter, Waveform, Follower, Channel, CrossFade, Merge, MidSideMerge, MidSideSplit, Mono, MultibandSplit, Panner, Panner3D, PanVol, Recorder, Solo, Split, Volume, Compressor, Gate, Limiter, MidSideCompressor, MultibandCompressor, AmplitudeEnvelope, Envelope, FrequencyEnvelope, EQ3, Filter, OnePoleFilter, FeedbackCombFilter, LowpassCombFilter, Convolver, BiquadFilter, version, start, supported, now, immediate, Transport, getTransport, Destination, Master, getDestination, Listener, getListener, Draw, getDraw, context, loaded, Buffer, Buffers, BufferSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "now", function() { return now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "immediate", function() { return immediate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Transport", function() { return Transport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTransport", function() { return getTransport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Destination", function() { return Destination; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Master", function() { return Master; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDestination", function() { return getDestination; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Listener", function() { return Listener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getListener", function() { return getListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Draw", function() { return Draw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDraw", function() { return getDraw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "context", function() { return context; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loaded", function() { return loaded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Buffer", function() { return Buffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Buffers", function() { return Buffers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BufferSource", function() { return BufferSource; });
/* harmony import */ var _core_Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Global */ "./node_modules/tone/build/esm/core/Global.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getContext", function() { return _core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setContext", function() { return _core_Global__WEBPACK_IMPORTED_MODULE_0__["setContext"]; });

/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes */ "./node_modules/tone/build/esm/classes.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Clock", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Clock"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Context", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Context"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BaseContext", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["BaseContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Delay", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Delay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gain", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Gain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Offline", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Offline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OfflineContext", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["OfflineContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Param", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Param"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connectSeries", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["connectSeries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connect", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["connect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disconnect", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["disconnect"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyClass", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FrequencyClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Frequency", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Frequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidiClass", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MidiClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Midi", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Midi"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeClass", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["TimeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Time", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Time"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TicksClass", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["TicksClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Ticks", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Ticks"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["TransportTimeClass"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransportTime", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["TransportTime"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Emitter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Emitter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["IntervalTimeline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StateTimeline", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["StateTimeline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Timeline", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Timeline"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUndef", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isUndef"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isDefined", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isDefined"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isFunction", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isFunction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNumber", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isNumber"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isObject", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isObject"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isBoolean", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isBoolean"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isArray", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isArray"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isString", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isString"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isNote", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["isNote"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dbToGain", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["dbToGain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gainToDb", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["gainToDb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["intervalToFrequencyRatio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ftom", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ftom"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mtof", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["mtof"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "defaultArg", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["defaultArg"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Unit", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Unit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["debug"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Noise", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Noise"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserMedia", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["UserMedia"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Oscillator", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Oscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AMOscillator", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["AMOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FMOscillator", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FMOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PulseOscillator", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["PulseOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FatOscillator", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FatOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PWMOscillator", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["PWMOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OmniOscillator", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["OmniOscillator"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneOscillatorNode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LFO", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["LFO"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneBufferSource"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Player", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Player"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Players", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Players"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GrainPlayer", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["GrainPlayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Add", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Add"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Abs", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Abs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AudioToGain", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["AudioToGain"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GainToAudio", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["GainToAudio"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GreaterThan", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["GreaterThan"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["GreaterThanZero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Multiply", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Multiply"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Negate", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Negate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pow", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Pow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Signal", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Signal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connectSignal", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["connectSignal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Scale"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScaleExp", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ScaleExp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subtract", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Subtract"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncedSignal", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["SyncedSignal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WaveShaper", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Zero", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Zero"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AMSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["AMSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DuoSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["DuoSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FMSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FMSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetalSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MetalSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MembraneSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MembraneSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MonoSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NoiseSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["NoiseSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PluckSynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["PluckSynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PolySynth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["PolySynth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sampler", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Sampler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Synth", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Synth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Loop", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Loop"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Part", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Part"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pattern", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Pattern"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sequence", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Sequence"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneEvent", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneEvent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoFilter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["AutoFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoPanner", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["AutoPanner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AutoWah", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["AutoWah"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BitCrusher", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["BitCrusher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chebyshev", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Chebyshev"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chorus", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Chorus"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Distortion", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Distortion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FeedbackDelay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FrequencyShifter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Freeverb", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Freeverb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JCReverb", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["JCReverb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PingPongDelay", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["PingPongDelay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PitchShift", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["PitchShift"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Phaser", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Phaser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Reverb", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Reverb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StereoWidener", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["StereoWidener"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tremolo", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Tremolo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Vibrato", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Vibrato"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Analyser", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Analyser"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Meter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Meter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FFT", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FFT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DCMeter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["DCMeter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Waveform", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Waveform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Follower", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Follower"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Channel", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Channel"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CrossFade", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["CrossFade"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Merge", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideMerge", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MidSideMerge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideSplit", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MidSideSplit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Mono", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Mono"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultibandSplit", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MultibandSplit"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Panner", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Panner"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Panner3D", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Panner3D"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PanVol", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["PanVol"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Recorder", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Recorder"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Solo", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Solo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Split", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Split"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Volume", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Volume"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Compressor", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Compressor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Gate", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Gate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Limiter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Limiter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MidSideCompressor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["MultibandCompressor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["AmplitudeEnvelope"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Envelope", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Envelope"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FrequencyEnvelope"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EQ3", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["EQ3"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Filter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Filter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["OnePoleFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["FeedbackCombFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["LowpassCombFilter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Convolver", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["Convolver"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BiquadFilter", function() { return _classes__WEBPACK_IMPORTED_MODULE_1__["BiquadFilter"]; });

/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./version */ "./node_modules/tone/build/esm/version.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "version", function() { return _version__WEBPACK_IMPORTED_MODULE_2__["version"]; });

/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "start", function() { return _core_Global__WEBPACK_IMPORTED_MODULE_0__["start"]; });

/* harmony import */ var _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/context/AudioContext */ "./node_modules/tone/build/esm/core/context/AudioContext.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "supported", function() { return _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__["supported"]; });

/* harmony import */ var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony import */ var _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./source/buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");







/**
 * The current audio context time of the global [[Context]].
 * See [[Context.now]]
 * @category Core
 */

function now() {
  return Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().now();
}
/**
 * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]
 * See [[Context.immediate]]
 * @category Core
 */

function immediate() {
  return Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().immediate();
}
/**
 * The Transport object belonging to the global Tone.js Context.
 * See [[Transport]]
 * @category Core
 */

var Transport = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().transport;
/**
 * The Transport object belonging to the global Tone.js Context.
 * See [[Transport]]
 * @category Core
 */

function getTransport() {
  return Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().transport;
}
/**
 * The Destination (output) belonging to the global Tone.js Context.
 * See [[Destination]]
 * @category Core
 */

var Destination = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().destination;
/**
 * @deprecated Use [[Destination]]
 */

var Master = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().destination;
/**
 * The Destination (output) belonging to the global Tone.js Context.
 * See [[Destination]]
 * @category Core
 */

function getDestination() {
  return Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().destination;
}
/**
 * The [[Listener]] belonging to the global Tone.js Context.
 * @category Core
 */

var Listener = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().listener;
/**
 * The [[Listener]] belonging to the global Tone.js Context.
 * @category Core
 */

function getListener() {
  return Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().listener;
}
/**
 * Draw is used to synchronize the draw frame with the Transport's callbacks.
 * See [[Draw]]
 * @category Core
 */

var Draw = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().draw;
/**
 * Get the singleton attached to the global context.
 * Draw is used to synchronize the draw frame with the Transport's callbacks.
 * See [[Draw]]
 * @category Core
 */

function getDraw() {
  return Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().draw;
}
/**
 * A reference to the global context
 * See [[Context]]
 */

var context = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])();
/**
 * Promise which resolves when all of the loading promises are resolved.
 * Alias for static [[ToneAudioBuffer.loaded]] method.
 * @category Core
 */

function loaded() {
  return _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__["ToneAudioBuffer"].loaded();
} // this fills in name changes from 13.x to 14.x



var Buffer = _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__["ToneAudioBuffer"];
var Buffers = _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_5__["ToneAudioBuffers"];
var BufferSource = _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__["ToneBufferSource"];

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/AMSynth.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/AMSynth.js ***!
  \***********************************************************/
/*! exports provided: AMSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AMSynth", function() { return AMSynth; });
/* harmony import */ var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal/AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModulationSynth */ "./node_modules/tone/build/esm/instrument/ModulationSynth.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * AMSynth uses the output of one Tone.Synth to modulate the
 * amplitude of another Tone.Synth. The harmonicity (the ratio between
 * the two signals) affects the timbre of the output signal greatly.
 * Read more about Amplitude Modulation Synthesis on
 * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).
 *
 * @example
 * const synth = new Tone.AMSynth().toDestination();
 * synth.triggerAttackRelease("C4", "4n");
 *
 * @category Instrument
 */

var AMSynth = /*#__PURE__*/function (_ModulationSynth) {
  _inherits(AMSynth, _ModulationSynth);

  var _super = _createSuper(AMSynth);

  function AMSynth() {
    var _this;

    _classCallCheck(this, AMSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AMSynth.getDefaults(), arguments));
    _this.name = "AMSynth";
    _this._modulationScale = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_0__["AudioToGain"]({
      context: _this.context
    }); // control the two voices frequency

    _this.frequency.connect(_this._carrier.frequency);

    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);

    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);

    _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);

    _this._carrier.chain(_this._modulationNode, _this.output);

    return _this;
  }

  _createClass(AMSynth, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(AMSynth.prototype), "dispose", this).call(this);

      this._modulationScale.dispose();

      return this;
    }
  }]);

  return AMSynth;
}(_ModulationSynth__WEBPACK_IMPORTED_MODULE_2__["ModulationSynth"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/DuoSynth.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/DuoSynth.js ***!
  \************************************************************/
/*! exports provided: DuoSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DuoSynth", function() { return DuoSynth; });
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _MonoSynth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MonoSynth */ "./node_modules/tone/build/esm/instrument/MonoSynth.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../source/oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the
 * frequency ratio between the two voices and vibrato effect.
 * @example
 * const duoSynth = new Tone.DuoSynth().toDestination();
 * duoSynth.triggerAttackRelease("C4", "2n");
 * @category Instrument
 */

var DuoSynth = /*#__PURE__*/function (_Monophonic) {
  _inherits(DuoSynth, _Monophonic);

  var _super = _createSuper(DuoSynth);

  function DuoSynth() {
    var _this;

    _classCallCheck(this, DuoSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(DuoSynth.getDefaults(), arguments));
    _this.name = "DuoSynth";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(DuoSynth.getDefaults(), arguments);
    _this.voice0 = new _MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"](Object.assign(options.voice0, {
      context: _this.context,
      onsilence: function onsilence() {
        return _this.onsilence(_assertThisInitialized(_this));
      }
    }));
    _this.voice1 = new _MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"](Object.assign(options.voice1, {
      context: _this.context
    }));
    _this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__["Multiply"]({
      context: _this.context,
      units: "positive",
      value: options.harmonicity
    });
    _this._vibrato = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_4__["LFO"]({
      frequency: options.vibratoRate,
      context: _this.context,
      min: -50,
      max: 50
    }); // start the vibrato immediately

    _this._vibrato.start();

    _this.vibratoRate = _this._vibrato.frequency;
    _this._vibratoGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
      context: _this.context,
      units: "normalRange",
      gain: options.vibratoAmount
    });
    _this.vibratoAmount = _this._vibratoGain.gain;
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: 440
    });
    _this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]({
      context: _this.context,
      units: "cents",
      value: options.detune
    }); // control the two voices frequency

    _this.frequency.connect(_this.voice0.frequency);

    _this.frequency.chain(_this.harmonicity, _this.voice1.frequency);

    _this._vibrato.connect(_this._vibratoGain);

    _this._vibratoGain.fan(_this.voice0.detune, _this.voice1.detune);

    _this.detune.fan(_this.voice0.detune, _this.voice1.detune);

    _this.voice0.connect(_this.output);

    _this.voice1.connect(_this.output);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["voice0", "voice1", "frequency", "vibratoAmount", "vibratoRate"]);
    return _this;
  }

  _createClass(DuoSynth, [{
    key: "getLevelAtTime",
    value: function getLevelAtTime(time) {
      time = this.toSeconds(time);
      return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);
    }
  }, {
    key: "_triggerEnvelopeAttack",
    value:
    /**
     * Trigger the attack portion of the note
     */
    function _triggerEnvelopeAttack(time, velocity) {
      // @ts-ignore
      this.voice0._triggerEnvelopeAttack(time, velocity); // @ts-ignore


      this.voice1._triggerEnvelopeAttack(time, velocity);
    }
    /**
     * Trigger the release portion of the note
     */

  }, {
    key: "_triggerEnvelopeRelease",
    value: function _triggerEnvelopeRelease(time) {
      // @ts-ignore
      this.voice0._triggerEnvelopeRelease(time); // @ts-ignore


      this.voice1._triggerEnvelopeRelease(time);

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(DuoSynth.prototype), "dispose", this).call(this);

      this.voice0.dispose();
      this.voice1.dispose();
      this.frequency.dispose();
      this.detune.dispose();

      this._vibrato.dispose();

      this.vibratoRate.dispose();

      this._vibratoGain.dispose();

      this.harmonicity.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["deepMerge"])(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"].getDefaults(), {
        vibratoAmount: 0.5,
        vibratoRate: 5,
        harmonicity: 1.5,
        voice0: Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["deepMerge"])(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["omitFromObject"])(_MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"].getDefaults(), Object.keys(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"].getDefaults())), {
          filterEnvelope: {
            attack: 0.01,
            decay: 0.0,
            sustain: 1,
            release: 0.5
          },
          envelope: {
            attack: 0.01,
            decay: 0.0,
            sustain: 1,
            release: 0.5
          }
        }),
        voice1: Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["deepMerge"])(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["omitFromObject"])(_MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"].getDefaults(), Object.keys(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"].getDefaults())), {
          filterEnvelope: {
            attack: 0.01,
            decay: 0.0,
            sustain: 1,
            release: 0.5
          },
          envelope: {
            attack: 0.01,
            decay: 0.0,
            sustain: 1,
            release: 0.5
          }
        })
      });
    }
  }]);

  return DuoSynth;
}(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/FMSynth.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/FMSynth.js ***!
  \***********************************************************/
/*! exports provided: FMSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FMSynth", function() { return FMSynth; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ModulationSynth */ "./node_modules/tone/build/esm/instrument/ModulationSynth.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates
 * the frequency of a second Tone.Synth. A lot of spectral content
 * can be explored using the modulationIndex parameter. Read more about
 * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).
 *
 * @example
 * const fmSynth = new Tone.FMSynth().toDestination();
 * fmSynth.triggerAttackRelease("C5", "4n");
 *
 * @category Instrument
 */

var FMSynth = /*#__PURE__*/function (_ModulationSynth) {
  _inherits(FMSynth, _ModulationSynth);

  var _super = _createSuper(FMSynth);

  function FMSynth() {
    var _this;

    _classCallCheck(this, FMSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FMSynth.getDefaults(), arguments));
    _this.name = "FMSynth";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FMSynth.getDefaults(), arguments);
    _this.modulationIndex = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__["Multiply"]({
      context: _this.context,
      value: options.modulationIndex
    }); // control the two voices frequency

    _this.frequency.connect(_this._carrier.frequency);

    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);

    _this.frequency.chain(_this.modulationIndex, _this._modulationNode);

    _this.detune.fan(_this._carrier.detune, _this._modulator.detune);

    _this._modulator.connect(_this._modulationNode.gain);

    _this._modulationNode.connect(_this._carrier.frequency);

    _this._carrier.connect(_this.output);

    return _this;
  }

  _createClass(FMSynth, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FMSynth.prototype), "dispose", this).call(this);

      this.modulationIndex.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_ModulationSynth__WEBPACK_IMPORTED_MODULE_2__["ModulationSynth"].getDefaults(), {
        modulationIndex: 10
      });
    }
  }]);

  return FMSynth;
}(_ModulationSynth__WEBPACK_IMPORTED_MODULE_2__["ModulationSynth"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Instrument.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Instrument.js ***!
  \**************************************************************/
/*! exports provided: Instrument */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Instrument", function() { return Instrument; });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Base-class for all instruments
 */

var Instrument = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Instrument, _ToneAudioNode);

  var _super = _createSuper(Instrument);

  function Instrument() {
    var _this;

    _classCallCheck(this, Instrument);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Instrument.getDefaults(), arguments));
    /**
     * Keep track of all events scheduled to the transport
     * when the instrument is 'synced'
     */

    _this._scheduledEvents = [];
    /**
     * If the instrument is currently synced
     */

    _this._synced = false;
    _this._original_triggerAttack = _this.triggerAttack;
    _this._original_triggerRelease = _this.triggerRelease;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Instrument.getDefaults(), arguments);
    _this._volume = _this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
      context: _this.context,
      volume: options.volume
    });
    _this.volume = _this._volume.volume;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "volume");
    return _this;
  }

  _createClass(Instrument, [{
    key: "sync",
    value:
    /**
     * Sync the instrument to the Transport. All subsequent calls of
     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.
     * @example
     * const fmSynth = new Tone.FMSynth().toDestination();
     * fmSynth.volume.value = -6;
     * fmSynth.sync();
     * // schedule 3 notes when the transport first starts
     * fmSynth.triggerAttackRelease("C4", "8n", 0);
     * fmSynth.triggerAttackRelease("E4", "8n", "8n");
     * fmSynth.triggerAttackRelease("G4", "8n", "4n");
     * // start the transport to hear the notes
     * Tone.Transport.start();
     */
    function sync() {
      if (this._syncState()) {
        this._syncMethod("triggerAttack", 1);

        this._syncMethod("triggerRelease", 0);
      }

      return this;
    }
    /**
     * set _sync
     */

  }, {
    key: "_syncState",
    value: function _syncState() {
      var changed = false;

      if (!this._synced) {
        this._synced = true;
        changed = true;
      }

      return changed;
    }
    /**
     * Wrap the given method so that it can be synchronized
     * @param method Which method to wrap and sync
     * @param  timePosition What position the time argument appears in
     */

  }, {
    key: "_syncMethod",
    value: function _syncMethod(method, timePosition) {
      var _this2 = this;

      var originalMethod = this["_original_" + method] = this[method];

      this[method] = function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var time = args[timePosition];

        var id = _this2.context.transport.schedule(function (t) {
          args[timePosition] = t;
          originalMethod.apply(_this2, args);
        }, time);

        _this2._scheduledEvents.push(id);
      };
    }
    /**
     * Unsync the instrument from the Transport
     */

  }, {
    key: "unsync",
    value: function unsync() {
      var _this3 = this;

      this._scheduledEvents.forEach(function (id) {
        return _this3.context.transport.clear(id);
      });

      this._scheduledEvents = [];

      if (this._synced) {
        this._synced = false;
        this.triggerAttack = this._original_triggerAttack;
        this.triggerRelease = this._original_triggerRelease;
      }

      return this;
    }
    /**
     * Trigger the attack and then the release after the duration.
     * @param  note     The note to trigger.
     * @param  duration How long the note should be held for before
     *                         triggering the release. This value must be greater than 0.
     * @param time  When the note should be triggered.
     * @param  velocity The velocity the note should be triggered at.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * // trigger "C4" for the duration of an 8th note
     * synth.triggerAttackRelease("C4", "8n");
     */

  }, {
    key: "triggerAttackRelease",
    value: function triggerAttackRelease(note, duration, time, velocity) {
      var computedTime = this.toSeconds(time);
      var computedDuration = this.toSeconds(duration);
      this.triggerAttack(note, computedTime, velocity);
      this.triggerRelease(computedTime + computedDuration);
      return this;
    }
    /**
     * clean up
     * @returns {Instrument} this
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Instrument.prototype), "dispose", this).call(this);

      this._volume.dispose();

      this.unsync();
      this._scheduledEvents = [];
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        volume: 0
      });
    }
  }]);

  return Instrument;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/MembraneSynth.js":
/*!*****************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/MembraneSynth.js ***!
  \*****************************************************************/
/*! exports provided: MembraneSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MembraneSynth", function() { return MembraneSynth; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * MembraneSynth makes kick and tom sounds using a single oscillator
 * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator
 * is routed through a Tone.AmplitudeEnvelope to the output. The drum
 * quality of the sound comes from the frequency envelope applied
 * during MembraneSynth.triggerAttack(note). The frequency envelope
 * starts at <code>note * .octaves</code> and ramps to <code>note</code>
 * over the duration of <code>.pitchDecay</code>.
 * @example
 * const synth = new Tone.MembraneSynth().toDestination();
 * synth.triggerAttackRelease("C2", "8n");
 * @category Instrument
 */

var MembraneSynth = /*#__PURE__*/function (_Synth) {
  _inherits(MembraneSynth, _Synth);

  var _super = _createSuper(MembraneSynth);

  function MembraneSynth() {
    var _this;

    _classCallCheck(this, MembraneSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MembraneSynth.getDefaults(), arguments));
    _this.name = "MembraneSynth";
    /**
     * Portamento is ignored in this synth. use pitch decay instead.
     */

    _this.portamento = 0;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MembraneSynth.getDefaults(), arguments);
    _this.pitchDecay = options.pitchDecay;
    _this.octaves = options.octaves;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["oscillator", "envelope"]);
    return _this;
  }

  _createClass(MembraneSynth, [{
    key: "setNote",
    value: function setNote(note, time) {
      var seconds = this.toSeconds(time);
      var hertz = this.toFrequency(note instanceof _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__["FrequencyClass"] ? note.toFrequency() : note);
      var maxNote = hertz * this.octaves;
      this.oscillator.frequency.setValueAtTime(maxNote, seconds);
      this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MembraneSynth.prototype), "dispose", this).call(this);

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["deepMerge"])(_Monophonic__WEBPACK_IMPORTED_MODULE_4__["Monophonic"].getDefaults(), _Synth__WEBPACK_IMPORTED_MODULE_5__["Synth"].getDefaults(), {
        envelope: {
          attack: 0.001,
          attackCurve: "exponential",
          decay: 0.4,
          release: 1.4,
          sustain: 0.01
        },
        octaves: 10,
        oscillator: {
          type: "sine"
        },
        pitchDecay: 0.05
      });
    }
  }]);

  return MembraneSynth;
}(_Synth__WEBPACK_IMPORTED_MODULE_5__["Synth"]);

Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__["range"])(0)], MembraneSynth.prototype, "octaves", void 0);

Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__["timeRange"])(0)], MembraneSynth.prototype, "pitchDecay", void 0);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/MetalSynth.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/MetalSynth.js ***!
  \**************************************************************/
/*! exports provided: MetalSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MetalSynth", function() { return MetalSynth; });
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _source_oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../source/oscillator/FMOscillator */ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }












/**
 * Inharmonic ratio of frequencies based on the Roland TR-808
 * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model
 */

var inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];
/**
 * A highly inharmonic and spectrally complex source with a highpass filter
 * and amplitude envelope which is good for making metallophone sounds.
 * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).
 * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).
 * @category Instrument
 */

var MetalSynth = /*#__PURE__*/function (_Monophonic) {
  _inherits(MetalSynth, _Monophonic);

  var _super = _createSuper(MetalSynth);

  function MetalSynth() {
    var _this;

    _classCallCheck(this, MetalSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(MetalSynth.getDefaults(), arguments));
    _this.name = "MetalSynth";
    /**
     * The array of FMOscillators
     */

    _this._oscillators = [];
    /**
     * The frequency multipliers
     */

    _this._freqMultipliers = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(MetalSynth.getDefaults(), arguments);
    _this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_8__["Signal"]({
      context: _this.context,
      units: "cents",
      value: options.detune
    });
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_8__["Signal"]({
      context: _this.context,
      units: "frequency"
    });
    _this._amplitude = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context,
      gain: 0
    }).connect(_this.output);
    _this._highpass = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]({
      // Q: -3.0102999566398125,
      Q: 0,
      context: _this.context,
      type: "highpass"
    }).connect(_this._amplitude);

    for (var i = 0; i < inharmRatios.length; i++) {
      var osc = new _source_oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_9__["FMOscillator"]({
        context: _this.context,
        harmonicity: options.harmonicity,
        modulationIndex: options.modulationIndex,
        modulationType: "square",
        onstop: i === 0 ? function () {
          return _this.onsilence(_assertThisInitialized(_this));
        } : _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
        type: "square"
      });
      osc.connect(_this._highpass);
      _this._oscillators[i] = osc;
      var mult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__["Multiply"]({
        context: _this.context,
        value: inharmRatios[i]
      });
      _this._freqMultipliers[i] = mult;

      _this.frequency.chain(mult, osc.frequency);

      _this.detune.connect(osc.detune);
    }

    _this._filterFreqScaler = new _signal_Scale__WEBPACK_IMPORTED_MODULE_7__["Scale"]({
      context: _this.context,
      max: 7000,
      min: _this.toFrequency(options.resonance)
    });
    _this.envelope = new _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__["Envelope"]({
      attack: options.envelope.attack,
      attackCurve: "linear",
      context: _this.context,
      decay: options.envelope.decay,
      release: options.envelope.release,
      sustain: 0
    });

    _this.envelope.chain(_this._filterFreqScaler, _this._highpass.frequency);

    _this.envelope.connect(_this._amplitude.gain); // set the octaves


    _this._octaves = options.octaves;
    _this.octaves = options.octaves;
    return _this;
  }

  _createClass(MetalSynth, [{
    key: "_triggerEnvelopeAttack",
    value:
    /**
     * Trigger the attack.
     * @param time When the attack should be triggered.
     * @param velocity The velocity that the envelope should be triggered at.
     */
    function _triggerEnvelopeAttack(time) {
      var _this2 = this;

      var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      this.envelope.triggerAttack(time, velocity);

      this._oscillators.forEach(function (osc) {
        return osc.start(time);
      });

      if (this.envelope.sustain === 0) {
        this._oscillators.forEach(function (osc) {
          osc.stop(time + _this2.toSeconds(_this2.envelope.attack) + _this2.toSeconds(_this2.envelope.decay));
        });
      }

      return this;
    }
    /**
     * Trigger the release of the envelope.
     * @param time When the release should be triggered.
     */

  }, {
    key: "_triggerEnvelopeRelease",
    value: function _triggerEnvelopeRelease(time) {
      var _this3 = this;

      this.envelope.triggerRelease(time);

      this._oscillators.forEach(function (osc) {
        return osc.stop(time + _this3.toSeconds(_this3.envelope.release));
      });

      return this;
    }
  }, {
    key: "getLevelAtTime",
    value: function getLevelAtTime(time) {
      time = this.toSeconds(time);
      return this.envelope.getValueAtTime(time);
    }
    /**
     * The modulationIndex of the oscillators which make up the source.
     * see [[FMOscillator.modulationIndex]]
     * @min 1
     * @max 100
     */

  }, {
    key: "modulationIndex",
    get: function get() {
      return this._oscillators[0].modulationIndex.value;
    },
    set: function set(val) {
      this._oscillators.forEach(function (osc) {
        return osc.modulationIndex.value = val;
      });
    }
    /**
     * The harmonicity of the oscillators which make up the source.
     * see Tone.FMOscillator.harmonicity
     * @min 0.1
     * @max 10
     */

  }, {
    key: "harmonicity",
    get: function get() {
      return this._oscillators[0].harmonicity.value;
    },
    set: function set(val) {
      this._oscillators.forEach(function (osc) {
        return osc.harmonicity.value = val;
      });
    }
    /**
     * The lower level of the highpass filter which is attached to the envelope.
     * This value should be between [0, 7000]
     * @min 0
     * @max 7000
     */

  }, {
    key: "resonance",
    get: function get() {
      return this._filterFreqScaler.min;
    },
    set: function set(val) {
      this._filterFreqScaler.min = this.toFrequency(val);
      this.octaves = this._octaves;
    }
    /**
     * The number of octaves above the "resonance" frequency
     * that the filter ramps during the attack/decay envelope
     * @min 0
     * @max 8
     */

  }, {
    key: "octaves",
    get: function get() {
      return this._octaves;
    },
    set: function set(val) {
      this._octaves = val;
      this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MetalSynth.prototype), "dispose", this).call(this);

      this._oscillators.forEach(function (osc) {
        return osc.dispose();
      });

      this._freqMultipliers.forEach(function (freqMult) {
        return freqMult.dispose();
      });

      this.frequency.dispose();
      this.detune.dispose();

      this._filterFreqScaler.dispose();

      this._amplitude.dispose();

      this.envelope.dispose();

      this._highpass.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["deepMerge"])(_Monophonic__WEBPACK_IMPORTED_MODULE_10__["Monophonic"].getDefaults(), {
        envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults())), {
          attack: 0.001,
          decay: 1.4,
          release: 0.2
        }),
        harmonicity: 5.1,
        modulationIndex: 32,
        octaves: 1.5,
        resonance: 4000
      });
    }
  }]);

  return MetalSynth;
}(_Monophonic__WEBPACK_IMPORTED_MODULE_10__["Monophonic"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/ModulationSynth.js":
/*!*******************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/ModulationSynth.js ***!
  \*******************************************************************/
/*! exports provided: ModulationSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModulationSynth", function() { return ModulationSynth; });
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }












/**
 * Base class for both AM and FM synths
 */

var ModulationSynth = /*#__PURE__*/function (_Monophonic) {
  _inherits(ModulationSynth, _Monophonic);

  var _super = _createSuper(ModulationSynth);

  function ModulationSynth() {
    var _this;

    _classCallCheck(this, ModulationSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["optionsFromArguments"])(ModulationSynth.getDefaults(), arguments));
    _this.name = "ModulationSynth";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["optionsFromArguments"])(ModulationSynth.getDefaults(), arguments);
    _this._carrier = new _Synth__WEBPACK_IMPORTED_MODULE_8__["Synth"]({
      context: _this.context,
      oscillator: options.oscillator,
      envelope: options.envelope,
      onsilence: function onsilence() {
        return _this.onsilence(_assertThisInitialized(_this));
      },
      volume: -10
    });
    _this._modulator = new _Synth__WEBPACK_IMPORTED_MODULE_8__["Synth"]({
      context: _this.context,
      oscillator: options.modulation,
      envelope: options.modulationEnvelope,
      volume: -10
    });
    _this.oscillator = _this._carrier.oscillator;
    _this.envelope = _this._carrier.envelope;
    _this.modulation = _this._modulator.oscillator;
    _this.modulationEnvelope = _this._modulator.envelope;
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]({
      context: _this.context,
      units: "frequency"
    });
    _this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]({
      context: _this.context,
      value: options.detune,
      units: "cents"
    });
    _this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__["Multiply"]({
      context: _this.context,
      value: options.harmonicity,
      minValue: 0
    });
    _this._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context,
      gain: 0
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_9__["readOnly"])(_assertThisInitialized(_this), ["frequency", "harmonicity", "oscillator", "envelope", "modulation", "modulationEnvelope", "detune"]);
    return _this;
  }

  _createClass(ModulationSynth, [{
    key: "_triggerEnvelopeAttack",
    value:
    /**
     * Trigger the attack portion of the note
     */
    function _triggerEnvelopeAttack(time, velocity) {
      // @ts-ignore
      this._carrier._triggerEnvelopeAttack(time, velocity); // @ts-ignore


      this._modulator._triggerEnvelopeAttack(time, velocity);
    }
    /**
     * Trigger the release portion of the note
     */

  }, {
    key: "_triggerEnvelopeRelease",
    value: function _triggerEnvelopeRelease(time) {
      // @ts-ignore
      this._carrier._triggerEnvelopeRelease(time); // @ts-ignore


      this._modulator._triggerEnvelopeRelease(time);

      return this;
    }
  }, {
    key: "getLevelAtTime",
    value: function getLevelAtTime(time) {
      time = this.toSeconds(time);
      return this.envelope.getValueAtTime(time);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ModulationSynth.prototype), "dispose", this).call(this);

      this._carrier.dispose();

      this._modulator.dispose();

      this.frequency.dispose();
      this.detune.dispose();
      this.harmonicity.dispose();

      this._modulationNode.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"].getDefaults(), {
        harmonicity: 3,
        oscillator: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"].getDefaults(), [].concat(_toConsumableArray(Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__["Source"].getDefaults())), ["frequency", "detune"])), {
          type: "sine"
        }),
        envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults())), {
          attack: 0.01,
          decay: 0.01,
          sustain: 1,
          release: 0.5
        }),
        modulation: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"].getDefaults(), [].concat(_toConsumableArray(Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__["Source"].getDefaults())), ["frequency", "detune"])), {
          type: "square"
        }),
        modulationEnvelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults())), {
          attack: 0.5,
          decay: 0.0,
          sustain: 1,
          release: 0.5
        })
      });
    }
  }]);

  return ModulationSynth;
}(_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/MonoSynth.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/MonoSynth.js ***!
  \*************************************************************/
/*! exports provided: MonoSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonoSynth", function() { return MonoSynth; });
/* harmony import */ var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component/filter/Filter */ "./node_modules/tone/build/esm/component/filter/Filter.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../instrument/Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
/* harmony import */ var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../component/envelope/FrequencyEnvelope */ "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }











/**
 * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.
 * The amplitude of the Oscillator and the cutoff frequency of the
 * Filter are controlled by Envelopes.
 * <img src="https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240">
 * @example
 * const synth = new Tone.MonoSynth({
 * 	oscillator: {
 * 		type: "square"
 * 	},
 * 	envelope: {
 * 		attack: 0.1
 * 	}
 * }).toDestination();
 * synth.triggerAttackRelease("C4", "8n");
 * @category Instrument
 */

var MonoSynth = /*#__PURE__*/function (_Monophonic) {
  _inherits(MonoSynth, _Monophonic);

  var _super = _createSuper(MonoSynth);

  function MonoSynth() {
    var _this;

    _classCallCheck(this, MonoSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(MonoSynth.getDefaults(), arguments));
    _this.name = "MonoSynth";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(MonoSynth.getDefaults(), arguments);
    _this.oscillator = new _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"](Object.assign(options.oscillator, {
      context: _this.context,
      detune: options.detune,
      onstop: function onstop() {
        return _this.onsilence(_assertThisInitialized(_this));
      }
    }));
    _this.frequency = _this.oscillator.frequency;
    _this.detune = _this.oscillator.detune;
    _this.filter = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__["Filter"](Object.assign(options.filter, {
      context: _this.context
    }));
    _this.filterEnvelope = new _component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__["FrequencyEnvelope"](Object.assign(options.filterEnvelope, {
      context: _this.context
    }));
    _this.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__["AmplitudeEnvelope"](Object.assign(options.envelope, {
      context: _this.context
    })); // connect the oscillators to the output

    _this.oscillator.chain(_this.filter, _this.envelope, _this.output); // connect the filter envelope


    _this.filterEnvelope.connect(_this.filter.frequency);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["oscillator", "frequency", "detune", "filter", "filterEnvelope", "envelope"]);
    return _this;
  }

  _createClass(MonoSynth, [{
    key: "_triggerEnvelopeAttack",
    value:
    /**
     * start the attack portion of the envelope
     * @param time the time the attack should start
     * @param velocity the velocity of the note (0-1)
     */
    function _triggerEnvelopeAttack(time) {
      var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      this.envelope.triggerAttack(time, velocity);
      this.filterEnvelope.triggerAttack(time);
      this.oscillator.start(time);

      if (this.envelope.sustain === 0) {
        var computedAttack = this.toSeconds(this.envelope.attack);
        var computedDecay = this.toSeconds(this.envelope.decay);
        this.oscillator.stop(time + computedAttack + computedDecay);
      }
    }
    /**
     * start the release portion of the envelope
     * @param time the time the release should start
     */

  }, {
    key: "_triggerEnvelopeRelease",
    value: function _triggerEnvelopeRelease(time) {
      this.envelope.triggerRelease(time);
      this.filterEnvelope.triggerRelease(time);
      this.oscillator.stop(time + this.toSeconds(this.envelope.release));
    }
  }, {
    key: "getLevelAtTime",
    value: function getLevelAtTime(time) {
      time = this.toSeconds(time);
      return this.envelope.getValueAtTime(time);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(MonoSynth.prototype), "dispose", this).call(this);

      this.oscillator.dispose();
      this.envelope.dispose();
      this.filterEnvelope.dispose();
      this.filter.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"].getDefaults(), {
        envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__["ToneAudioNode"].getDefaults())), {
          attack: 0.005,
          decay: 0.1,
          release: 1,
          sustain: 0.9
        }),
        filter: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__["Filter"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__["ToneAudioNode"].getDefaults())), {
          Q: 1,
          rolloff: -12,
          type: "lowpass"
        }),
        filterEnvelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__["FrequencyEnvelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__["ToneAudioNode"].getDefaults())), {
          attack: 0.6,
          baseFrequency: 200,
          decay: 0.2,
          exponent: 2,
          octaves: 3,
          release: 2,
          sustain: 0.5
        }),
        oscillator: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"].getDefaults(), Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__["Source"].getDefaults())), {
          type: "sawtooth"
        })
      });
    }
  }]);

  return MonoSynth;
}(_instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Monophonic.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Monophonic.js ***!
  \**************************************************************/
/*! exports provided: Monophonic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Monophonic", function() { return Monophonic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _instrument_Instrument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../instrument/Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * Abstract base class for other monophonic instruments to extend.
 */

var Monophonic = /*#__PURE__*/function (_Instrument) {
  _inherits(Monophonic, _Instrument);

  var _super = _createSuper(Monophonic);

  function Monophonic() {
    var _this;

    _classCallCheck(this, Monophonic);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Monophonic.getDefaults(), arguments));
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Monophonic.getDefaults(), arguments);
    _this.portamento = options.portamento;
    _this.onsilence = options.onsilence;
    return _this;
  }

  _createClass(Monophonic, [{
    key: "triggerAttack",
    value:
    /**
     * Trigger the attack of the note optionally with a given velocity.
     * @param  note The note to trigger.
     * @param  time When the note should start.
     * @param  velocity The velocity scaler determines how "loud" the note will be triggered.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * // trigger the note a half second from now at half velocity
     * synth.triggerAttack("C4", "+0.5", 0.5);
     */
    function triggerAttack(note, time) {
      var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      this.log("triggerAttack", note, time, velocity);
      var seconds = this.toSeconds(time);

      this._triggerEnvelopeAttack(seconds, velocity);

      this.setNote(note, seconds);
      return this;
    }
    /**
     * Trigger the release portion of the envelope
     * @param  time If no time is given, the release happens immediatly
     * @example
     * const synth = new Tone.Synth().toDestination();
     * synth.triggerAttack("C4");
     * // trigger the release a second from now
     * synth.triggerRelease("+1");
     */

  }, {
    key: "triggerRelease",
    value: function triggerRelease(time) {
      this.log("triggerRelease", time);
      var seconds = this.toSeconds(time);

      this._triggerEnvelopeRelease(seconds);

      return this;
    }
    /**
     * Set the note at the given time. If no time is given, the note
     * will set immediately.
     * @param note The note to change to.
     * @param  time The time when the note should be set.
     * @example
     * const synth = new Tone.Synth().toDestination();
     * synth.triggerAttack("C4");
     * // change to F#6 in one quarter note from now.
     * synth.setNote("F#6", "+4n");
     */

  }, {
    key: "setNote",
    value: function setNote(note, time) {
      var computedTime = this.toSeconds(time);
      var computedFrequency = note instanceof _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__["FrequencyClass"] ? note.toFrequency() : note;

      if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {
        var portTime = this.toSeconds(this.portamento);
        this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);
      } else {
        this.frequency.setValueAtTime(computedFrequency, computedTime);
      }

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_4__["Instrument"].getDefaults(), {
        detune: 0,
        onsilence: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
        portamento: 0
      });
    }
  }]);

  return Monophonic;
}(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_4__["Instrument"]);

Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_5__["timeRange"])(0)], Monophonic.prototype, "portamento", void 0);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/NoiseSynth.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/NoiseSynth.js ***!
  \**************************************************************/
/*! exports provided: NoiseSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoiseSynth", function() { return NoiseSynth; });
/* harmony import */ var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_Noise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony import */ var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].
 * ```
 * +-------+   +-------------------+
 * | Noise +>--> AmplitudeEnvelope +>--> Output
 * +-------+   +-------------------+
 * ```
 * @example
 * const noiseSynth = new Tone.NoiseSynth().toDestination();
 * noiseSynth.triggerAttackRelease("8n", 0.05);
 * @category Instrument
 */

var NoiseSynth = /*#__PURE__*/function (_Instrument) {
  _inherits(NoiseSynth, _Instrument);

  var _super = _createSuper(NoiseSynth);

  function NoiseSynth() {
    var _this;

    _classCallCheck(this, NoiseSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(NoiseSynth.getDefaults(), arguments));
    _this.name = "NoiseSynth";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(NoiseSynth.getDefaults(), arguments);
    _this.noise = new _source_Noise__WEBPACK_IMPORTED_MODULE_2__["Noise"](Object.assign({
      context: _this.context
    }, options.noise));
    _this.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__["AmplitudeEnvelope"](Object.assign({
      context: _this.context
    }, options.envelope)); // connect the noise to the output

    _this.noise.chain(_this.envelope, _this.output);

    return _this;
  }

  _createClass(NoiseSynth, [{
    key: "triggerAttack",
    value:
    /**
     * Start the attack portion of the envelopes. Unlike other
     * instruments, Tone.NoiseSynth doesn't have a note.
     * @example
     * const noiseSynth = new Tone.NoiseSynth().toDestination();
     * noiseSynth.triggerAttack();
     */
    function triggerAttack(time) {
      var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      time = this.toSeconds(time); // the envelopes

      this.envelope.triggerAttack(time, velocity); // start the noise

      this.noise.start(time);

      if (this.envelope.sustain === 0) {
        this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));
      }

      return this;
    }
    /**
     * Start the release portion of the envelopes.
     */

  }, {
    key: "triggerRelease",
    value: function triggerRelease(time) {
      time = this.toSeconds(time);
      this.envelope.triggerRelease(time);
      this.noise.stop(time + this.toSeconds(this.envelope.release));
      return this;
    }
  }, {
    key: "sync",
    value: function sync() {
      if (this._syncState()) {
        this._syncMethod("triggerAttack", 0);

        this._syncMethod("triggerRelease", 0);
      }

      return this;
    }
  }, {
    key: "triggerAttackRelease",
    value: function triggerAttackRelease(duration, time) {
      var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      time = this.toSeconds(time);
      duration = this.toSeconds(duration);
      this.triggerAttack(time, velocity);
      this.triggerRelease(time + duration);
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(NoiseSynth.prototype), "dispose", this).call(this);

      this.noise.dispose();
      this.envelope.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"].getDefaults(), {
        envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_5__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults())), {
          decay: 0.1,
          sustain: 0.0
        }),
        noise: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(_source_Noise__WEBPACK_IMPORTED_MODULE_2__["Noise"].getDefaults(), Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults())), {
          type: "white"
        })
      });
    }
  }]);

  return NoiseSynth;
}(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/PluckSynth.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/PluckSynth.js ***!
  \**************************************************************/
/*! exports provided: PluckSynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PluckSynth", function() { return PluckSynth; });
/* harmony import */ var _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/filter/LowpassCombFilter */ "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_Noise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../source/Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony import */ var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Karplus-String string synthesis.
 * @example
 * const plucky = new Tone.PluckSynth().toDestination();
 * plucky.triggerAttack("C4", "+0.5");
 * plucky.triggerAttack("C3", "+1");
 * plucky.triggerAttack("C2", "+1.5");
 * plucky.triggerAttack("C1", "+2");
 * @category Instrument
 */

var PluckSynth = /*#__PURE__*/function (_Instrument) {
  _inherits(PluckSynth, _Instrument);

  var _super = _createSuper(PluckSynth);

  function PluckSynth() {
    var _this;

    _classCallCheck(this, PluckSynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PluckSynth.getDefaults(), arguments));
    _this.name = "PluckSynth";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PluckSynth.getDefaults(), arguments);
    _this._noise = new _source_Noise__WEBPACK_IMPORTED_MODULE_2__["Noise"]({
      context: _this.context,
      type: "pink"
    });
    _this.attackNoise = options.attackNoise;
    _this._lfcf = new _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_0__["LowpassCombFilter"]({
      context: _this.context,
      dampening: options.dampening,
      resonance: options.resonance
    });
    _this.resonance = options.resonance;
    _this.release = options.release;

    _this._noise.connect(_this._lfcf);

    _this._lfcf.connect(_this.output);

    return _this;
  }

  _createClass(PluckSynth, [{
    key: "dampening",
    get:
    /**
     * The dampening control. i.e. the lowpass filter frequency of the comb filter
     * @min 0
     * @max 7000
     */
    function get() {
      return this._lfcf.dampening;
    },
    set: function set(fq) {
      this._lfcf.dampening = fq;
    }
  }, {
    key: "triggerAttack",
    value: function triggerAttack(note, time) {
      var freq = this.toFrequency(note);
      time = this.toSeconds(time);
      var delayAmount = 1 / freq;

      this._lfcf.delayTime.setValueAtTime(delayAmount, time);

      this._noise.start(time);

      this._noise.stop(time + delayAmount * this.attackNoise);

      this._lfcf.resonance.cancelScheduledValues(time);

      this._lfcf.resonance.setValueAtTime(this.resonance, time);

      return this;
    }
    /**
     * Ramp down the [[resonance]] to 0 over the duration of the release time.
     */

  }, {
    key: "triggerRelease",
    value: function triggerRelease(time) {
      this._lfcf.resonance.linearRampTo(0, this.release, time);

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PluckSynth.prototype), "dispose", this).call(this);

      this._noise.dispose();

      this._lfcf.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["deepMerge"])(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"].getDefaults(), {
        attackNoise: 1,
        dampening: 4000,
        resonance: 0.7,
        release: 1
      });
    }
  }]);

  return PluckSynth;
}(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/PolySynth.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/PolySynth.js ***!
  \*************************************************************/
/*! exports provided: PolySynth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PolySynth", function() { return PolySynth; });
/* harmony import */ var _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/type/Midi */ "./node_modules/tone/build/esm/core/type/Midi.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * PolySynth handles voice creation and allocation for any
 * instruments passed in as the second paramter. PolySynth is
 * not a synthesizer by itself, it merely manages voices of
 * one of the other types of synths, allowing any of the
 * monophonic synthesizers to be polyphonic.
 *
 * @example
 * const synth = new Tone.PolySynth().toDestination();
 * // set the attributes across all the voices using 'set'
 * synth.set({ detune: -1200 });
 * // play a chord
 * synth.triggerAttackRelease(["C4", "E4", "A4"], 1);
 * @category Instrument
 */

var PolySynth = /*#__PURE__*/function (_Instrument) {
  _inherits(PolySynth, _Instrument);

  var _super = _createSuper(PolySynth);

  function PolySynth() {
    var _this;

    _classCallCheck(this, PolySynth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PolySynth.getDefaults(), arguments, ["voice", "options"]));
    _this.name = "PolySynth";
    /**
     * The voices which are not currently in use
     */

    _this._availableVoices = [];
    /**
     * The currently active voices
     */

    _this._activeVoices = [];
    /**
     * All of the allocated voices for this synth.
     */

    _this._voices = [];
    /**
     * The GC timeout. Held so that it could be cancelled when the node is disposed.
     */

    _this._gcTimeout = -1;
    /**
     * A moving average of the number of active voices
     */

    _this._averageActiveVoices = 0;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PolySynth.getDefaults(), arguments, ["voice", "options"]); // check against the old API (pre 14.3.0)

    Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(!Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(options.voice), "DEPRECATED: The polyphony count is no longer the first argument.");
    var defaults = options.voice.getDefaults();
    _this.options = Object.assign(defaults, options.options);
    _this.voice = options.voice;
    _this.maxPolyphony = options.maxPolyphony; // create the first voice

    _this._dummyVoice = _this._getNextAvailableVoice(); // remove it from the voices list

    var index = _this._voices.indexOf(_this._dummyVoice);

    _this._voices.splice(index, 1); // kick off the GC interval


    _this._gcTimeout = _this.context.setInterval(_this._collectGarbage.bind(_assertThisInitialized(_this)), 1);
    return _this;
  }

  _createClass(PolySynth, [{
    key: "activeVoices",
    get:
    /**
     * The number of active voices.
     */
    function get() {
      return this._activeVoices.length;
    }
    /**
     * Invoked when the source is done making sound, so that it can be
     * readded to the pool of available voices
     */

  }, {
    key: "_makeVoiceAvailable",
    value: function _makeVoiceAvailable(voice) {
      this._availableVoices.push(voice); // remove the midi note from 'active voices'


      var activeVoiceIndex = this._activeVoices.findIndex(function (e) {
        return e.voice === voice;
      });

      this._activeVoices.splice(activeVoiceIndex, 1);
    }
    /**
     * Get an available voice from the pool of available voices.
     * If one is not available and the maxPolyphony limit is reached,
     * steal a voice, otherwise return null.
     */

  }, {
    key: "_getNextAvailableVoice",
    value: function _getNextAvailableVoice() {
      // if there are available voices, return the first one
      if (this._availableVoices.length) {
        return this._availableVoices.shift();
      } else if (this._voices.length < this.maxPolyphony) {
        // otherwise if there is still more maxPolyphony, make a new voice
        var voice = new this.voice(Object.assign(this.options, {
          context: this.context,
          onsilence: this._makeVoiceAvailable.bind(this)
        }));
        voice.connect(this.output);

        this._voices.push(voice);

        return voice;
      } else {
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["warn"])("Max polyphony exceeded. Note dropped.");
      }
    }
    /**
     * Occasionally check if there are any allocated voices which can be cleaned up.
     */

  }, {
    key: "_collectGarbage",
    value: function _collectGarbage() {
      this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);

      if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {
        // take off an available note
        var firstAvail = this._availableVoices.shift();

        var index = this._voices.indexOf(firstAvail);

        this._voices.splice(index, 1);

        if (!this.context.isOffline) {
          firstAvail.dispose();
        }
      }
    }
    /**
     * Internal method which triggers the attack
     */

  }, {
    key: "_triggerAttack",
    value: function _triggerAttack(notes, time, velocity) {
      var _this2 = this;

      notes.forEach(function (note) {
        var midiNote = new _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__["MidiClass"](_this2.context, note).toMidi();

        var voice = _this2._getNextAvailableVoice();

        if (voice) {
          voice.triggerAttack(note, time, velocity);

          _this2._activeVoices.push({
            midi: midiNote,
            voice: voice,
            released: false
          });

          _this2.log("triggerAttack", note, time);
        }
      });
    }
    /**
     * Internal method which triggers the release
     */

  }, {
    key: "_triggerRelease",
    value: function _triggerRelease(notes, time) {
      var _this3 = this;

      notes.forEach(function (note) {
        var midiNote = new _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__["MidiClass"](_this3.context, note).toMidi();

        var event = _this3._activeVoices.find(function (_ref) {
          var midi = _ref.midi,
              released = _ref.released;
          return midi === midiNote && !released;
        });

        if (event) {
          // trigger release on that note
          event.voice.triggerRelease(time); // mark it as released

          event.released = true;

          _this3.log("triggerRelease", note, time);
        }
      });
    }
    /**
     * Schedule the attack/release events. If the time is in the future, then it should set a timeout
     * to wait for just-in-time scheduling
     */

  }, {
    key: "_scheduleEvent",
    value: function _scheduleEvent(type, notes, time, velocity) {
      var _this4 = this;

      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(!this.disposed, "Synth was already disposed"); // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout

      if (time <= this.now()) {
        // do it immediately
        if (type === "attack") {
          this._triggerAttack(notes, time, velocity);
        } else {
          this._triggerRelease(notes, time);
        }
      } else {
        // schedule it to start in the future
        this.context.setTimeout(function () {
          _this4._scheduleEvent(type, notes, time, velocity);
        }, time - this.now());
      }
    }
    /**
     * Trigger the attack portion of the note
     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
     * @param  time  The start time of the note.
     * @param velocity The velocity of the note.
     * @example
     * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();
     * // trigger a chord immediately with a velocity of 0.2
     * synth.triggerAttack(["Ab3", "C4", "F5"], Tone.now(), 0.2);
     */

  }, {
    key: "triggerAttack",
    value: function triggerAttack(notes, time, velocity) {
      if (!Array.isArray(notes)) {
        notes = [notes];
      }

      var computedTime = this.toSeconds(time);

      this._scheduleEvent("attack", notes, computedTime, velocity);

      return this;
    }
    /**
     * Trigger the release of the note. Unlike monophonic instruments,
     * a note (or array of notes) needs to be passed in as the first argument.
     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
     * @param  time  When the release will be triggered.
     * @example
     * @example
     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
     * poly.triggerAttack(["Ab3", "C4", "F5"]);
     * // trigger the release of the given notes.
     * poly.triggerRelease(["Ab3", "C4"], "+1");
     * poly.triggerRelease("F5", "+3");
     */

  }, {
    key: "triggerRelease",
    value: function triggerRelease(notes, time) {
      if (!Array.isArray(notes)) {
        notes = [notes];
      }

      var computedTime = this.toSeconds(time);

      this._scheduleEvent("release", notes, computedTime);

      return this;
    }
    /**
     * Trigger the attack and release after the specified duration
     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.
     * @param  duration the duration of the note
     * @param  time  if no time is given, defaults to now
     * @param  velocity the velocity of the attack (0-1)
     * @example
     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
     * // can pass in an array of durations as well
     * poly.triggerAttackRelease(["Eb3", "G4", "Bb4", "D5"], [4, 3, 2, 1]);
     */

  }, {
    key: "triggerAttackRelease",
    value: function triggerAttackRelease(notes, duration, time, velocity) {
      var computedTime = this.toSeconds(time);
      this.triggerAttack(notes, computedTime, velocity);

      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(duration)) {
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(notes), "If the duration is an array, the notes must also be an array");
        notes = notes;

        for (var i = 0; i < notes.length; i++) {
          var d = duration[Math.min(i, duration.length - 1)];
          var durationSeconds = this.toSeconds(d);
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(durationSeconds > 0, "The duration must be greater than 0");
          this.triggerRelease(notes[i], computedTime + durationSeconds);
        }
      } else {
        var _durationSeconds = this.toSeconds(duration);

        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(_durationSeconds > 0, "The duration must be greater than 0");
        this.triggerRelease(notes, computedTime + _durationSeconds);
      }

      return this;
    }
  }, {
    key: "sync",
    value: function sync() {
      if (this._syncState()) {
        this._syncMethod("triggerAttack", 1);

        this._syncMethod("triggerRelease", 1);
      }

      return this;
    }
    /**
     * Set a member/attribute of the voices
     * @example
     * const poly = new Tone.PolySynth().toDestination();
     * // set all of the voices using an options object for the synth type
     * poly.set({
     * 	envelope: {
     * 		attack: 0.25
     * 	}
     * });
     * poly.triggerAttackRelease("Bb3", 0.2);
     */

  }, {
    key: "set",
    value: function set(options) {
      // remove options which are controlled by the PolySynth
      var sanitizedOptions = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(options, ["onsilence", "context"]); // store all of the options

      this.options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["deepMerge"])(this.options, sanitizedOptions);

      this._voices.forEach(function (voice) {
        return voice.set(sanitizedOptions);
      });

      this._dummyVoice.set(sanitizedOptions);

      return this;
    }
  }, {
    key: "get",
    value: function get() {
      return this._dummyVoice.get();
    }
    /**
     * Trigger the release portion of all the currently active voices immediately.
     * Useful for silencing the synth.
     */

  }, {
    key: "releaseAll",
    value: function releaseAll(time) {
      var computedTime = this.toSeconds(time);

      this._activeVoices.forEach(function (_ref2) {
        var voice = _ref2.voice;
        voice.triggerRelease(computedTime);
      });

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PolySynth.prototype), "dispose", this).call(this);

      this._dummyVoice.dispose();

      this._voices.forEach(function (v) {
        return v.dispose();
      });

      this._activeVoices = [];
      this._availableVoices = [];
      this.context.clearInterval(this._gcTimeout);
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"].getDefaults(), {
        maxPolyphony: 32,
        options: {},
        voice: _Synth__WEBPACK_IMPORTED_MODULE_4__["Synth"]
      });
    }
  }]);

  return PolySynth;
}(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Sampler.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Sampler.js ***!
  \***********************************************************/
/*! exports provided: Sampler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sampler", function() { return Sampler; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/type/Frequency */ "./node_modules/tone/build/esm/core/type/Frequency.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _instrument_Instrument__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../instrument/Instrument */ "./node_modules/tone/build/esm/instrument/Instrument.js");
/* harmony import */ var _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../source/buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }












/**
 * Pass in an object which maps the note's pitch or midi value to the url,
 * then you can trigger the attack and release of that note like other instruments.
 * By automatically repitching the samples, it is possible to play pitches which
 * were not explicitly included which can save loading time.
 *
 * For sample or buffer playback where repitching is not necessary,
 * use [[Player]].
 * @example
 * const sampler = new Tone.Sampler({
 * 	urls: {
 * 		A1: "A1.mp3",
 * 		A2: "A2.mp3",
 * 	},
 * 	baseUrl: "https://tonejs.github.io/audio/casio/",
 * 	onload: () => {
 * 		sampler.triggerAttackRelease(["C1", "E1", "G1", "B1"], 0.5);
 * 	}
 * }).toDestination();
 * @category Instrument
 */

var Sampler = /*#__PURE__*/function (_Instrument) {
  _inherits(Sampler, _Instrument);

  var _super = _createSuper(Sampler);

  function Sampler() {
    var _this;

    _classCallCheck(this, Sampler);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls"));
    _this.name = "Sampler";
    /**
     * The object of all currently playing BufferSources
     */

    _this._activeSources = new Map();
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
    var urlMap = {};
    Object.keys(options.urls).forEach(function (note) {
      var noteNumber = parseInt(note, 10);
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note) || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(noteNumber) && isFinite(noteNumber), "url key is neither a note or midi pitch: ".concat(note));

      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note)) {
        // convert the note name to MIDI
        var mid = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](_this.context, note).toMidi();
        urlMap[mid] = options.urls[note];
      } else if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(noteNumber) && isFinite(noteNumber)) {
        // otherwise if it's numbers assume it's midi
        urlMap[noteNumber] = options.urls[noteNumber];
      }
    });
    _this._buffers = new _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffers"]({
      urls: urlMap,
      onload: options.onload,
      baseUrl: options.baseUrl,
      onerror: options.onerror
    });
    _this.attack = options.attack;
    _this.release = options.release;
    _this.curve = options.curve; // invoke the callback if it's already loaded

    if (_this._buffers.loaded) {
      // invoke onload deferred
      Promise.resolve().then(options.onload);
    }

    return _this;
  }

  _createClass(Sampler, [{
    key: "_findClosest",
    value:
    /**
     * Returns the difference in steps between the given midi note at the closets sample.
     */
    function _findClosest(midi) {
      // searches within 8 octaves of the given midi note
      var MAX_INTERVAL = 96;
      var interval = 0;

      while (interval < MAX_INTERVAL) {
        // check above and below
        if (this._buffers.has(midi + interval)) {
          return -interval;
        } else if (this._buffers.has(midi - interval)) {
          return interval;
        }

        interval++;
      }

      throw new Error("No available buffers for note: ".concat(midi));
    }
    /**
     * @param  notes	The note to play, or an array of notes.
     * @param  time     When to play the note
     * @param  velocity The velocity to play the sample back.
     */

  }, {
    key: "triggerAttack",
    value: function triggerAttack(notes, time) {
      var _this2 = this;

      var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      this.log("triggerAttack", notes, time, velocity);

      if (!Array.isArray(notes)) {
        notes = [notes];
      }

      notes.forEach(function (note) {
        var midiFloat = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_2__["ftomf"])(new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](_this2.context, note).toFrequency());
        var midi = Math.round(midiFloat);
        var remainder = midiFloat - midi; // find the closest note pitch

        var difference = _this2._findClosest(midi);

        var closestNote = midi - difference;

        var buffer = _this2._buffers.get(closestNote);

        var playbackRate = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_2__["intervalToFrequencyRatio"])(difference + remainder); // play that note

        var source = new _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_8__["ToneBufferSource"]({
          url: buffer,
          context: _this2.context,
          curve: _this2.curve,
          fadeIn: _this2.attack,
          fadeOut: _this2.release,
          playbackRate: playbackRate
        }).connect(_this2.output);
        source.start(time, 0, buffer.duration / playbackRate, velocity); // add it to the active sources

        if (!Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(_this2._activeSources.get(midi))) {
          _this2._activeSources.set(midi, []);
        }

        _this2._activeSources.get(midi).push(source); // remove it when it's done


        source.onended = function () {
          if (_this2._activeSources && _this2._activeSources.has(midi)) {
            var sources = _this2._activeSources.get(midi);

            var index = sources.indexOf(source);

            if (index !== -1) {
              sources.splice(index, 1);
            }
          }
        };
      });
      return this;
    }
    /**
     * @param  notes	The note to release, or an array of notes.
     * @param  time     	When to release the note.
     */

  }, {
    key: "triggerRelease",
    value: function triggerRelease(notes, time) {
      var _this3 = this;

      this.log("triggerRelease", notes, time);

      if (!Array.isArray(notes)) {
        notes = [notes];
      }

      notes.forEach(function (note) {
        var midi = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](_this3.context, note).toMidi(); // find the note

        if (_this3._activeSources.has(midi) && _this3._activeSources.get(midi).length) {
          var sources = _this3._activeSources.get(midi);

          time = _this3.toSeconds(time);
          sources.forEach(function (source) {
            source.stop(time);
          });

          _this3._activeSources.set(midi, []);
        }
      });
      return this;
    }
    /**
     * Release all currently active notes.
     * @param  time     	When to release the notes.
     */

  }, {
    key: "releaseAll",
    value: function releaseAll(time) {
      var computedTime = this.toSeconds(time);

      this._activeSources.forEach(function (sources) {
        while (sources.length) {
          var source = sources.shift();
          source.stop(computedTime);
        }
      });

      return this;
    }
  }, {
    key: "sync",
    value: function sync() {
      if (this._syncState()) {
        this._syncMethod("triggerAttack", 1);

        this._syncMethod("triggerRelease", 1);
      }

      return this;
    }
    /**
     * Invoke the attack phase, then after the duration, invoke the release.
     * @param  notes	The note to play and release, or an array of notes.
     * @param  duration The time the note should be held
     * @param  time     When to start the attack
     * @param  velocity The velocity of the attack
     */

  }, {
    key: "triggerAttackRelease",
    value: function triggerAttackRelease(notes, duration, time) {
      var _this4 = this;

      var velocity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
      var computedTime = this.toSeconds(time);
      this.triggerAttack(notes, computedTime, velocity);

      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(duration)) {
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(notes), "notes must be an array when duration is array");
        notes.forEach(function (note, index) {
          var d = duration[Math.min(index, duration.length - 1)];

          _this4.triggerRelease(note, computedTime + _this4.toSeconds(d));
        });
      } else {
        this.triggerRelease(notes, computedTime + this.toSeconds(duration));
      }

      return this;
    }
    /**
     * Add a note to the sampler.
     * @param  note      The buffer's pitch.
     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.
     * @param  callback  The callback to invoke when the url is loaded.
     */

  }, {
    key: "add",
    value: function add(note, url, callback) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note) || isFinite(note), "note must be a pitch or midi: ".concat(note));

      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note)) {
        // convert the note name to MIDI
        var mid = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](this.context, note).toMidi();

        this._buffers.add(mid, url, callback);
      } else {
        // otherwise if it's numbers assume it's midi
        this._buffers.add(note, url, callback);
      }

      return this;
    }
    /**
     * If the buffers are loaded or not
     */

  }, {
    key: "loaded",
    get: function get() {
      return this._buffers.loaded;
    }
    /**
     * Clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Sampler.prototype), "dispose", this).call(this);

      this._buffers.dispose();

      this._activeSources.forEach(function (sources) {
        sources.forEach(function (source) {
          return source.dispose();
        });
      });

      this._activeSources.clear();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_7__["Instrument"].getDefaults(), {
        attack: 0,
        baseUrl: "",
        curve: "exponential",
        onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
        onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
        release: 0.1,
        urls: {}
      });
    }
  }]);

  return Sampler;
}(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_7__["Instrument"]);

Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__["timeRange"])(0)], Sampler.prototype, "attack", void 0);

Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__["timeRange"])(0)], Sampler.prototype, "release", void 0);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/Synth.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/Synth.js ***!
  \*********************************************************/
/*! exports provided: Synth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Synth", function() { return Synth; });
/* harmony import */ var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/envelope/AmplitudeEnvelope */ "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
/* harmony import */ var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component/envelope/Envelope */ "./node_modules/tone/build/esm/component/envelope/Envelope.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../source/oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Monophonic__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Monophonic */ "./node_modules/tone/build/esm/instrument/Monophonic.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].
 * ```
 * +----------------+   +-------------------+
 * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output
 * +----------------+   +-------------------+
 * ```
 * @example
 * const synth = new Tone.Synth().toDestination();
 * synth.triggerAttackRelease("C4", "8n");
 * @category Instrument
 */

var Synth = /*#__PURE__*/function (_Monophonic) {
  _inherits(Synth, _Monophonic);

  var _super = _createSuper(Synth);

  function Synth() {
    var _this;

    _classCallCheck(this, Synth);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Synth.getDefaults(), arguments));
    _this.name = "Synth";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Synth.getDefaults(), arguments);
    _this.oscillator = new _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__["OmniOscillator"](Object.assign({
      context: _this.context,
      detune: options.detune,
      onstop: function onstop() {
        return _this.onsilence(_assertThisInitialized(_this));
      }
    }, options.oscillator));
    _this.frequency = _this.oscillator.frequency;
    _this.detune = _this.oscillator.detune;
    _this.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__["AmplitudeEnvelope"](Object.assign({
      context: _this.context
    }, options.envelope)); // connect the oscillators to the output

    _this.oscillator.chain(_this.envelope, _this.output);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["oscillator", "frequency", "detune", "envelope"]);
    return _this;
  }

  _createClass(Synth, [{
    key: "_triggerEnvelopeAttack",
    value:
    /**
     * start the attack portion of the envelope
     * @param time the time the attack should start
     * @param velocity the velocity of the note (0-1)
     */
    function _triggerEnvelopeAttack(time, velocity) {
      // the envelopes
      this.envelope.triggerAttack(time, velocity);
      this.oscillator.start(time); // if there is no release portion, stop the oscillator

      if (this.envelope.sustain === 0) {
        var computedAttack = this.toSeconds(this.envelope.attack);
        var computedDecay = this.toSeconds(this.envelope.decay);
        this.oscillator.stop(time + computedAttack + computedDecay);
      }
    }
    /**
     * start the release portion of the envelope
     * @param time the time the release should start
     */

  }, {
    key: "_triggerEnvelopeRelease",
    value: function _triggerEnvelopeRelease(time) {
      this.envelope.triggerRelease(time);
      this.oscillator.stop(time + this.toSeconds(this.envelope.release));
    }
  }, {
    key: "getLevelAtTime",
    value: function getLevelAtTime(time) {
      time = this.toSeconds(time);
      return this.envelope.getValueAtTime(time);
    }
    /**
     * clean up
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Synth.prototype), "dispose", this).call(this);

      this.oscillator.dispose();
      this.envelope.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Monophonic__WEBPACK_IMPORTED_MODULE_7__["Monophonic"].getDefaults(), {
        envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults())), {
          attack: 0.005,
          decay: 0.1,
          release: 1,
          sustain: 0.3
        }),
        oscillator: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__["OmniOscillator"].getDefaults(), [].concat(_toConsumableArray(Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults())), ["frequency", "detune"])), {
          type: "triangle"
        })
      });
    }
  }]);

  return Synth;
}(_Monophonic__WEBPACK_IMPORTED_MODULE_7__["Monophonic"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/instrument/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/instrument/index.js ***!
  \*********************************************************/
/*! exports provided: AMSynth, DuoSynth, FMSynth, MetalSynth, MembraneSynth, MonoSynth, NoiseSynth, PluckSynth, PolySynth, Sampler, Synth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _AMSynth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AMSynth */ "./node_modules/tone/build/esm/instrument/AMSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AMSynth", function() { return _AMSynth__WEBPACK_IMPORTED_MODULE_0__["AMSynth"]; });

/* harmony import */ var _DuoSynth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DuoSynth */ "./node_modules/tone/build/esm/instrument/DuoSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DuoSynth", function() { return _DuoSynth__WEBPACK_IMPORTED_MODULE_1__["DuoSynth"]; });

/* harmony import */ var _FMSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FMSynth */ "./node_modules/tone/build/esm/instrument/FMSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FMSynth", function() { return _FMSynth__WEBPACK_IMPORTED_MODULE_2__["FMSynth"]; });

/* harmony import */ var _MetalSynth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MetalSynth */ "./node_modules/tone/build/esm/instrument/MetalSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetalSynth", function() { return _MetalSynth__WEBPACK_IMPORTED_MODULE_3__["MetalSynth"]; });

/* harmony import */ var _MembraneSynth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MembraneSynth */ "./node_modules/tone/build/esm/instrument/MembraneSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MembraneSynth", function() { return _MembraneSynth__WEBPACK_IMPORTED_MODULE_4__["MembraneSynth"]; });

/* harmony import */ var _MonoSynth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MonoSynth */ "./node_modules/tone/build/esm/instrument/MonoSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MonoSynth", function() { return _MonoSynth__WEBPACK_IMPORTED_MODULE_5__["MonoSynth"]; });

/* harmony import */ var _NoiseSynth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./NoiseSynth */ "./node_modules/tone/build/esm/instrument/NoiseSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NoiseSynth", function() { return _NoiseSynth__WEBPACK_IMPORTED_MODULE_6__["NoiseSynth"]; });

/* harmony import */ var _PluckSynth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./PluckSynth */ "./node_modules/tone/build/esm/instrument/PluckSynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PluckSynth", function() { return _PluckSynth__WEBPACK_IMPORTED_MODULE_7__["PluckSynth"]; });

/* harmony import */ var _PolySynth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./PolySynth */ "./node_modules/tone/build/esm/instrument/PolySynth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PolySynth", function() { return _PolySynth__WEBPACK_IMPORTED_MODULE_8__["PolySynth"]; });

/* harmony import */ var _Sampler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Sampler */ "./node_modules/tone/build/esm/instrument/Sampler.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Sampler", function() { return _Sampler__WEBPACK_IMPORTED_MODULE_9__["Sampler"]; });

/* harmony import */ var _Synth__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Synth */ "./node_modules/tone/build/esm/instrument/Synth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Synth", function() { return _Synth__WEBPACK_IMPORTED_MODULE_10__["Synth"]; });













/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Abs.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Abs.js ***!
  \***************************************************/
/*! exports provided: Abs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Abs", function() { return Abs; });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Return the absolute value of an incoming signal.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const abs = new Tone.Abs().toDestination();
 * 	const signal = new Tone.Signal(1);
 * 	signal.rampTo(-1, 0.5);
 * 	signal.connect(abs);
 * }, 0.5, 1);
 * @category Signal
 */

var Abs = /*#__PURE__*/function (_SignalOperator) {
  _inherits(Abs, _SignalOperator);

  var _super = _createSuper(Abs);

  function Abs() {
    var _this;

    _classCallCheck(this, Abs);

    _this = _super.apply(this, arguments);
    _this.name = "Abs";
    /**
     * The node which converts the audio ranges
     */

    _this._abs = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
      context: _this.context,
      mapping: function mapping(val) {
        if (Math.abs(val) < 0.001) {
          return 0;
        } else {
          return Math.abs(val);
        }
      }
    });
    /**
     * The AudioRange input [-1, 1]
     */

    _this.input = _this._abs;
    /**
     * The output range [0, 1]
     */

    _this.output = _this._abs;
    return _this;
  }
  /**
   * clean up
   */


  _createClass(Abs, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Abs.prototype), "dispose", this).call(this);

      this._abs.dispose();

      return this;
    }
  }]);

  return Abs;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Add.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Add.js ***!
  \***************************************************/
/*! exports provided: Add */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Add", function() { return Add; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Add a signal and a number or two signals. When no value is
 * passed into the constructor, Tone.Add will sum input and `addend`
 * If a value is passed into the constructor, the it will be added to the input.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const add = new Tone.Add(2).toDestination();
 * 	add.addend.setValueAtTime(1, 0.2);
 * 	const signal = new Tone.Signal(2);
 * 	// add a signal and a scalar
 * 	signal.connect(add);
 * 	signal.setValueAtTime(1, 0.1);
 * }, 0.5, 1);
 * @category Signal
 */

var Add = /*#__PURE__*/function (_Signal) {
  _inherits(Add, _Signal);

  var _super = _createSuper(Add);

  function Add() {
    var _this;

    _classCallCheck(this, Add);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Add.getDefaults(), arguments, ["value"])));
    _this.override = false;
    _this.name = "Add";
    /**
     * the summing node
     */

    _this._sum = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
      context: _this.context
    });
    _this.input = _this._sum;
    _this.output = _this._sum;
    /**
     * The value which is added to the input signal
     */

    _this.addend = _this._param;
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"])(_this._constantSource, _this._sum);
    return _this;
  }

  _createClass(Add, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Add.prototype), "dispose", this).call(this);

      this._sum.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"].getDefaults(), {
        value: 0
      });
    }
  }]);

  return Add;
}(_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/AudioToGain.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/AudioToGain.js ***!
  \***********************************************************/
/*! exports provided: AudioToGain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AudioToGain", function() { return AudioToGain; });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].
 * See [[GainToAudio]].
 * @category Signal
 */

var AudioToGain = /*#__PURE__*/function (_SignalOperator) {
  _inherits(AudioToGain, _SignalOperator);

  var _super = _createSuper(AudioToGain);

  function AudioToGain() {
    var _this;

    _classCallCheck(this, AudioToGain);

    _this = _super.apply(this, arguments);
    _this.name = "AudioToGain";
    /**
     * The node which converts the audio ranges
     */

    _this._norm = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
      context: _this.context,
      mapping: function mapping(x) {
        return (x + 1) / 2;
      }
    });
    /**
     * The AudioRange input [-1, 1]
     */

    _this.input = _this._norm;
    /**
     * The GainRange output [0, 1]
     */

    _this.output = _this._norm;
    return _this;
  }
  /**
   * clean up
   */


  _createClass(AudioToGain, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(AudioToGain.prototype), "dispose", this).call(this);

      this._norm.dispose();

      return this;
    }
  }]);

  return AudioToGain;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/GainToAudio.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/GainToAudio.js ***!
  \***********************************************************/
/*! exports provided: GainToAudio */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GainToAudio", function() { return GainToAudio; });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].
 * See [[AudioToGain]].
 * @category Signal
 */

var GainToAudio = /*#__PURE__*/function (_SignalOperator) {
  _inherits(GainToAudio, _SignalOperator);

  var _super = _createSuper(GainToAudio);

  function GainToAudio() {
    var _this;

    _classCallCheck(this, GainToAudio);

    _this = _super.apply(this, arguments);
    _this.name = "GainToAudio";
    /**
     * The node which converts the audio ranges
     */

    _this._norm = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
      context: _this.context,
      mapping: function mapping(x) {
        return Math.abs(x) * 2 - 1;
      }
    });
    /**
     * The NormalRange input [0, 1]
     */

    _this.input = _this._norm;
    /**
     * The AudioRange output [-1, 1]
     */

    _this.output = _this._norm;
    return _this;
  }
  /**
   * clean up
   */


  _createClass(GainToAudio, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(GainToAudio.prototype), "dispose", this).call(this);

      this._norm.dispose();

      return this;
    }
  }]);

  return GainToAudio;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/GreaterThan.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/GreaterThan.js ***!
  \***********************************************************/
/*! exports provided: GreaterThan */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GreaterThan", function() { return GreaterThan; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Subtract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _GreaterThanZero__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GreaterThanZero */ "./node_modules/tone/build/esm/signal/GreaterThanZero.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Output 1 if the signal is greater than the value, otherwise outputs 0.
 * can compare two signals or a signal and a number.
 *
 * @example
 * return Tone.Offline(() => {
 * 	const gt = new Tone.GreaterThan(2).toDestination();
 * 	const sig = new Tone.Signal(4).connect(gt);
 * }, 0.1, 1);
 * @category Signal
 */

var GreaterThan = /*#__PURE__*/function (_Signal) {
  _inherits(GreaterThan, _Signal);

  var _super = _createSuper(GreaterThan);

  function GreaterThan() {
    var _this;

    _classCallCheck(this, GreaterThan);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(GreaterThan.getDefaults(), arguments, ["value"])));
    _this.name = "GreaterThan";
    _this.override = false;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(GreaterThan.getDefaults(), arguments, ["value"]);
    _this._subtract = _this.input = new _Subtract__WEBPACK_IMPORTED_MODULE_1__["Subtract"]({
      context: _this.context,
      value: options.value
    });
    _this._gtz = _this.output = new _GreaterThanZero__WEBPACK_IMPORTED_MODULE_3__["GreaterThanZero"]({
      context: _this.context
    });
    _this.comparator = _this._param = _this._subtract.subtrahend;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), "comparator"); // connect

    _this._subtract.connect(_this._gtz);

    return _this;
  }

  _createClass(GreaterThan, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(GreaterThan.prototype), "dispose", this).call(this);

      this._gtz.dispose();

      this._subtract.dispose();

      this.comparator.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"].getDefaults(), {
        value: 0
      });
    }
  }]);

  return GreaterThan;
}(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/GreaterThanZero.js":
/*!***************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/GreaterThanZero.js ***!
  \***************************************************************/
/*! exports provided: GreaterThanZero */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function() { return GreaterThanZero; });
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * GreaterThanZero outputs 1 when the input is strictly greater than zero
 * @example
 * return Tone.Offline(() => {
 * 	const gt0 = new Tone.GreaterThanZero().toDestination();
 * 	const sig = new Tone.Signal(0.5).connect(gt0);
 * 	sig.setValueAtTime(-1, 0.05);
 * }, 0.1, 1);
 * @category Signal
 */

var GreaterThanZero = /*#__PURE__*/function (_SignalOperator) {
  _inherits(GreaterThanZero, _SignalOperator);

  var _super = _createSuper(GreaterThanZero);

  function GreaterThanZero() {
    var _this;

    _classCallCheck(this, GreaterThanZero);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(GreaterThanZero.getDefaults(), arguments)));
    _this.name = "GreaterThanZero";
    _this._thresh = _this.output = new _WaveShaper__WEBPACK_IMPORTED_MODULE_2__["WaveShaper"]({
      context: _this.context,
      length: 127,
      mapping: function mapping(val) {
        if (val <= 0) {
          return 0;
        } else {
          return 1;
        }
      }
    });
    _this._scale = _this.input = new _Multiply__WEBPACK_IMPORTED_MODULE_1__["Multiply"]({
      context: _this.context,
      value: 10000
    }); // connections

    _this._scale.connect(_this._thresh);

    return _this;
  }

  _createClass(GreaterThanZero, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(GreaterThanZero.prototype), "dispose", this).call(this);

      this._scale.dispose();

      this._thresh.dispose();

      return this;
    }
  }]);

  return GreaterThanZero;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Multiply.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Multiply.js ***!
  \********************************************************/
/*! exports provided: Multiply */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Multiply", function() { return Multiply; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Multiply two incoming signals. Or, if a number is given in the constructor,
 * multiplies the incoming signal by that value.
 *
 * @example
 * // multiply two signals
 * const mult = new Tone.Multiply();
 * const sigA = new Tone.Signal(3);
 * const sigB = new Tone.Signal(4);
 * sigA.connect(mult);
 * sigB.connect(mult.factor);
 * // output of mult is 12.
 * @example
 * // multiply a signal and a number
 * const mult = new Tone.Multiply(10);
 * const sig = new Tone.Signal(2).connect(mult);
 * // the output of mult is 20.
 * @category Signal
 */

var Multiply = /*#__PURE__*/function (_Signal) {
  _inherits(Multiply, _Signal);

  var _super = _createSuper(Multiply);

  function Multiply() {
    var _this;

    _classCallCheck(this, Multiply);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Multiply.getDefaults(), arguments, ["value"])));
    _this.name = "Multiply";
    /**
     * Indicates if the value should be overridden on connection
     */

    _this.override = false;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Multiply.getDefaults(), arguments, ["value"]);
    _this._mult = _this.input = _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      minValue: options.minValue,
      maxValue: options.maxValue
    });
    _this.factor = _this._param = _this._mult.gain;

    _this.factor.setValueAtTime(options.value, 0);

    return _this;
  }

  _createClass(Multiply, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Multiply.prototype), "dispose", this).call(this);

      this._mult.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"].getDefaults(), {
        value: 0
      });
    }
  }]);

  return Multiply;
}(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Negate.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Negate.js ***!
  \******************************************************/
/*! exports provided: Negate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Negate", function() { return Negate; });
/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



/**
 * Negate the incoming signal. i.e. an input signal of 10 will output -10
 *
 * @example
 * const neg = new Tone.Negate();
 * const sig = new Tone.Signal(-2).connect(neg);
 * // output of neg is positive 2.
 * @category Signal
 */

var Negate = /*#__PURE__*/function (_SignalOperator) {
  _inherits(Negate, _SignalOperator);

  var _super = _createSuper(Negate);

  function Negate() {
    var _this;

    _classCallCheck(this, Negate);

    _this = _super.apply(this, arguments);
    _this.name = "Negate";
    /**
     * negation is done by multiplying by -1
     */

    _this._multiply = new _Multiply__WEBPACK_IMPORTED_MODULE_0__["Multiply"]({
      context: _this.context,
      value: -1
    });
    /**
     * The input and output are equal to the multiply node
     */

    _this.input = _this._multiply;
    _this.output = _this._multiply;
    return _this;
  }
  /**
   * clean up
   * @returns {Negate} this
   */


  _createClass(Negate, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Negate.prototype), "dispose", this).call(this);

      this._multiply.dispose();

      return this;
    }
  }]);

  return Negate;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_1__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Pow.js":
/*!***************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Pow.js ***!
  \***************************************************/
/*! exports provided: Pow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pow", function() { return Pow; });
/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]
 *
 * @example
 * const pow = new Tone.Pow(2);
 * const sig = new Tone.Signal(0.5).connect(pow);
 * // output of pow is 0.25.
 * @category Signal
 */

var Pow = /*#__PURE__*/function (_SignalOperator) {
  _inherits(Pow, _SignalOperator);

  var _super = _createSuper(Pow);

  function Pow() {
    var _this;

    _classCallCheck(this, Pow);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Pow.getDefaults(), arguments, ["value"])));
    _this.name = "Pow";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Pow.getDefaults(), arguments, ["value"]);
    _this._exponentScaler = _this.input = _this.output = new _WaveShaper__WEBPACK_IMPORTED_MODULE_0__["WaveShaper"]({
      context: _this.context,
      mapping: _this._expFunc(options.value),
      length: 8192
    });
    _this._exponent = options.value;
    return _this;
  }

  _createClass(Pow, [{
    key: "_expFunc",
    value:
    /**
     * the function which maps the waveshaper
     * @param exponent exponent value
     */
    function _expFunc(exponent) {
      return function (val) {
        return Math.pow(Math.abs(val), exponent);
      };
    }
    /**
     * The value of the exponent.
     */

  }, {
    key: "value",
    get: function get() {
      return this._exponent;
    },
    set: function set(exponent) {
      this._exponent = exponent;

      this._exponentScaler.setMap(this._expFunc(this._exponent));
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Pow.prototype), "dispose", this).call(this);

      this._exponentScaler.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_SignalOperator__WEBPACK_IMPORTED_MODULE_2__["SignalOperator"].getDefaults(), {
        value: 1
      });
    }
  }]);

  return Pow;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_2__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Scale.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Scale.js ***!
  \*****************************************************/
/*! exports provided: Scale */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return Scale; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Add__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Performs a linear scaling on an input signal.
 * Scales a NormalRange input to between
 * outputMin and outputMax.
 *
 * @example
 * const scale = new Tone.Scale(50, 100);
 * const signal = new Tone.Signal(0.5).connect(scale);
 * // the output of scale equals 75
 * @category Signal
 */

var Scale = /*#__PURE__*/function (_SignalOperator) {
  _inherits(Scale, _SignalOperator);

  var _super = _createSuper(Scale);

  function Scale() {
    var _this;

    _classCallCheck(this, Scale);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Scale.getDefaults(), arguments, ["min", "max"])));
    _this.name = "Scale";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Scale.getDefaults(), arguments, ["min", "max"]);
    _this._mult = _this.input = new _Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
      context: _this.context,
      value: options.max - options.min
    });
    _this._add = _this.output = new _Add__WEBPACK_IMPORTED_MODULE_1__["Add"]({
      context: _this.context,
      value: options.min
    });
    _this._min = options.min;
    _this._max = options.max;

    _this.input.connect(_this.output);

    return _this;
  }

  _createClass(Scale, [{
    key: "min",
    get:
    /**
     * The minimum output value. This number is output when the value input value is 0.
     */
    function get() {
      return this._min;
    },
    set: function set(min) {
      this._min = min;

      this._setRange();
    }
    /**
     * The maximum output value. This number is output when the value input value is 1.
     */

  }, {
    key: "max",
    get: function get() {
      return this._max;
    },
    set: function set(max) {
      this._max = max;

      this._setRange();
    }
    /**
     * set the values
     */

  }, {
    key: "_setRange",
    value: function _setRange() {
      this._add.value = this._min;
      this._mult.value = this._max - this._min;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Scale.prototype), "dispose", this).call(this);

      this._add.dispose();

      this._mult.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_SignalOperator__WEBPACK_IMPORTED_MODULE_3__["SignalOperator"].getDefaults(), {
        max: 1,
        min: 0
      });
    }
  }]);

  return Scale;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_3__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/ScaleExp.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/ScaleExp.js ***!
  \********************************************************/
/*! exports provided: ScaleExp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScaleExp", function() { return ScaleExp; });
/* harmony import */ var _Scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _Pow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Pow */ "./node_modules/tone/build/esm/signal/Pow.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * Performs an exponential scaling on an input signal.
 * Scales a NormalRange value [0,1] exponentially
 * to the output range of outputMin to outputMax.
 * @example
 * const scaleExp = new Tone.ScaleExp(0, 100, 2);
 * const signal = new Tone.Signal(0.5).connect(scaleExp);
 * @category Signal
 */

var ScaleExp = /*#__PURE__*/function (_Scale) {
  _inherits(ScaleExp, _Scale);

  var _super = _createSuper(ScaleExp);

  function ScaleExp() {
    var _this;

    _classCallCheck(this, ScaleExp);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(ScaleExp.getDefaults(), arguments, ["min", "max", "exponent"])));
    _this.name = "ScaleExp";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(ScaleExp.getDefaults(), arguments, ["min", "max", "exponent"]);
    _this.input = _this._exp = new _Pow__WEBPACK_IMPORTED_MODULE_2__["Pow"]({
      context: _this.context,
      value: options.exponent
    });

    _this._exp.connect(_this._mult);

    return _this;
  }

  _createClass(ScaleExp, [{
    key: "exponent",
    get:
    /**
     * Instead of interpolating linearly between the [[min]] and
     * [[max]] values, setting the exponent will interpolate between
     * the two values with an exponential curve.
     */
    function get() {
      return this._exp.value;
    },
    set: function set(exp) {
      this._exp.value = exp;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ScaleExp.prototype), "dispose", this).call(this);

      this._exp.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Scale__WEBPACK_IMPORTED_MODULE_0__["Scale"].getDefaults(), {
        exponent: 1
      });
    }
  }]);

  return ScaleExp;
}(_Scale__WEBPACK_IMPORTED_MODULE_0__["Scale"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Signal.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Signal.js ***!
  \******************************************************/
/*! exports provided: Signal, connectSignal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Signal", function() { return Signal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectSignal", function() { return connectSignal; });
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/AdvancedTypeCheck */ "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _ToneConstantSource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ToneConstantSource */ "./node_modules/tone/build/esm/signal/ToneConstantSource.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







/**
 * A signal is an audio-rate value. Tone.Signal is a core component of the library.
 * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal
 * has all of the methods available to native Web Audio
 * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)
 * as well as additional conveniences. Read more about working with signals
 * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination().start();
 * // a scheduleable signal which can be connected to control an AudioParam or another Signal
 * const signal = new Tone.Signal({
 * 	value: "C4",
 * 	units: "frequency"
 * }).connect(osc.frequency);
 * // the scheduled ramp controls the connected signal
 * signal.rampTo("C2", 4, "+0.5");
 * @category Signal
 */

var Signal = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Signal, _ToneAudioNode);

  var _super = _createSuper(Signal);

  function Signal() {
    var _this;

    _classCallCheck(this, Signal);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Signal.getDefaults(), arguments, ["value", "units"]));
    _this.name = "Signal";
    /**
     * Indicates if the value should be overridden on connection.
     */

    _this.override = true;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Signal.getDefaults(), arguments, ["value", "units"]);
    _this.output = _this._constantSource = new _ToneConstantSource__WEBPACK_IMPORTED_MODULE_4__["ToneConstantSource"]({
      context: _this.context,
      convert: options.convert,
      offset: options.value,
      units: options.units,
      minValue: options.minValue,
      maxValue: options.maxValue
    });

    _this._constantSource.start(0);

    _this.input = _this._param = _this._constantSource.offset;
    return _this;
  }

  _createClass(Signal, [{
    key: "connect",
    value: function connect(destination) {
      var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      // start it only when connected to something
      connectSignal(this, destination, outputNum, inputNum);
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Signal.prototype), "dispose", this).call(this);

      this._param.dispose();

      this._constantSource.dispose();

      return this;
    } //-------------------------------------
    // ABSTRACT PARAM INTERFACE
    // just a proxy for the ConstantSourceNode's offset AudioParam
    // all docs are generated from AbstractParam.ts
    //-------------------------------------

  }, {
    key: "setValueAtTime",
    value: function setValueAtTime(value, time) {
      this._param.setValueAtTime(value, time);

      return this;
    }
  }, {
    key: "getValueAtTime",
    value: function getValueAtTime(time) {
      return this._param.getValueAtTime(time);
    }
  }, {
    key: "setRampPoint",
    value: function setRampPoint(time) {
      this._param.setRampPoint(time);

      return this;
    }
  }, {
    key: "linearRampToValueAtTime",
    value: function linearRampToValueAtTime(value, time) {
      this._param.linearRampToValueAtTime(value, time);

      return this;
    }
  }, {
    key: "exponentialRampToValueAtTime",
    value: function exponentialRampToValueAtTime(value, time) {
      this._param.exponentialRampToValueAtTime(value, time);

      return this;
    }
  }, {
    key: "exponentialRampTo",
    value: function exponentialRampTo(value, rampTime, startTime) {
      this._param.exponentialRampTo(value, rampTime, startTime);

      return this;
    }
  }, {
    key: "linearRampTo",
    value: function linearRampTo(value, rampTime, startTime) {
      this._param.linearRampTo(value, rampTime, startTime);

      return this;
    }
  }, {
    key: "targetRampTo",
    value: function targetRampTo(value, rampTime, startTime) {
      this._param.targetRampTo(value, rampTime, startTime);

      return this;
    }
  }, {
    key: "exponentialApproachValueAtTime",
    value: function exponentialApproachValueAtTime(value, time, rampTime) {
      this._param.exponentialApproachValueAtTime(value, time, rampTime);

      return this;
    }
  }, {
    key: "setTargetAtTime",
    value: function setTargetAtTime(value, startTime, timeConstant) {
      this._param.setTargetAtTime(value, startTime, timeConstant);

      return this;
    }
  }, {
    key: "setValueCurveAtTime",
    value: function setValueCurveAtTime(values, startTime, duration, scaling) {
      this._param.setValueCurveAtTime(values, startTime, duration, scaling);

      return this;
    }
  }, {
    key: "cancelScheduledValues",
    value: function cancelScheduledValues(time) {
      this._param.cancelScheduledValues(time);

      return this;
    }
  }, {
    key: "cancelAndHoldAtTime",
    value: function cancelAndHoldAtTime(time) {
      this._param.cancelAndHoldAtTime(time);

      return this;
    }
  }, {
    key: "rampTo",
    value: function rampTo(value, rampTime, startTime) {
      this._param.rampTo(value, rampTime, startTime);

      return this;
    }
  }, {
    key: "value",
    get: function get() {
      return this._param.value;
    },
    set: function set(value) {
      this._param.value = value;
    }
  }, {
    key: "convert",
    get: function get() {
      return this._param.convert;
    },
    set: function set(convert) {
      this._param.convert = convert;
    }
  }, {
    key: "units",
    get: function get() {
      return this._param.units;
    }
  }, {
    key: "overridden",
    get: function get() {
      return this._param.overridden;
    },
    set: function set(overridden) {
      this._param.overridden = overridden;
    }
  }, {
    key: "maxValue",
    get: function get() {
      return this._param.maxValue;
    }
  }, {
    key: "minValue",
    get: function get() {
      return this._param.minValue;
    }
    /**
     * See [[Param.apply]].
     */

  }, {
    key: "apply",
    value: function apply(param) {
      this._param.apply(param);

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        convert: true,
        units: "number",
        value: 0
      });
    }
  }]);

  return Signal;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);
/**
 * When connecting from a signal, it's necessary to zero out the node destination
 * node if that node is also a signal. If the destination is not 0, then the values
 * will be summed. This method insures that the output of the destination signal will
 * be the same as the source signal, making the destination signal a pass through node.
 * @param signal The output signal to connect from
 * @param destination the destination to connect to
 * @param outputNum the optional output number
 * @param inputNum the input number
 */

function connectSignal(signal, destination, outputNum, inputNum) {
  if (destination instanceof _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"] || Object(_core_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__["isAudioParam"])(destination) || destination instanceof Signal && destination.override) {
    // cancel changes
    destination.cancelScheduledValues(0); // reset the value

    destination.setValueAtTime(0, 0); // mark the value as overridden

    if (destination instanceof Signal) {
      destination.overridden = true;
    }
  }

  Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(signal, destination, outputNum, inputNum);
}

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/SignalOperator.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/SignalOperator.js ***!
  \**************************************************************/
/*! exports provided: SignalOperator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignalOperator", function() { return SignalOperator; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




/**
 * A signal operator has an input and output and modifies the signal.
 */

var SignalOperator = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(SignalOperator, _ToneAudioNode);

  var _super = _createSuper(SignalOperator);

  function SignalOperator() {
    _classCallCheck(this, SignalOperator);

    return _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(SignalOperator.getDefaults(), arguments, ["context"])));
  }

  _createClass(SignalOperator, [{
    key: "connect",
    value: function connect(destination) {
      var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      Object(_Signal__WEBPACK_IMPORTED_MODULE_2__["connectSignal"])(this, destination, outputNum, inputNum);
      return this;
    }
  }]);

  return SignalOperator;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Subtract.js":
/*!********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Subtract.js ***!
  \********************************************************/
/*! exports provided: Subtract */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subtract", function() { return Subtract; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _signal_Negate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../signal/Negate */ "./node_modules/tone/build/esm/signal/Negate.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Subtract the signal connected to the input is subtracted from the signal connected
 * The subtrahend.
 *
 * @example
 * // subtract a scalar from a signal
 * const sub = new Tone.Subtract(1);
 * const sig = new Tone.Signal(4).connect(sub);
 * // the output of sub is 3.
 * @example
 * // subtract two signals
 * const sub = new Tone.Subtract();
 * const sigA = new Tone.Signal(10);
 * const sigB = new Tone.Signal(2.5);
 * sigA.connect(sub);
 * sigB.connect(sub.subtrahend);
 * // output of sub is 7.5
 * @category Signal
 */

var Subtract = /*#__PURE__*/function (_Signal) {
  _inherits(Subtract, _Signal);

  var _super = _createSuper(Subtract);

  function Subtract() {
    var _this;

    _classCallCheck(this, Subtract);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Subtract.getDefaults(), arguments, ["value"])));
    _this.override = false;
    _this.name = "Subtract";
    /**
     * the summing node
     */

    _this._sum = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
      context: _this.context
    });
    _this.input = _this._sum;
    _this.output = _this._sum;
    /**
     * Negate the input of the second input before connecting it to the summing node.
     */

    _this._neg = new _signal_Negate__WEBPACK_IMPORTED_MODULE_3__["Negate"]({
      context: _this.context
    });
    /**
     * The value which is subtracted from the main signal
     */

    _this.subtrahend = _this._param;
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"])(_this._constantSource, _this._neg, _this._sum);
    return _this;
  }

  _createClass(Subtract, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Subtract.prototype), "dispose", this).call(this);

      this._neg.dispose();

      this._sum.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"].getDefaults(), {
        value: 0
      });
    }
  }]);

  return Subtract;
}(_signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/SyncedSignal.js":
/*!************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/SyncedSignal.js ***!
  \************************************************************/
/*! exports provided: SyncedSignal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SyncedSignal", function() { return SyncedSignal; });
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/type/TransportTime */ "./node_modules/tone/build/esm/core/type/TransportTime.js");
/* harmony import */ var _ToneConstantSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ToneConstantSource */ "./node_modules/tone/build/esm/signal/ToneConstantSource.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Adds the ability to synchronize the signal to the [[Transport]]
 */

var SyncedSignal = /*#__PURE__*/function (_Signal) {
  _inherits(SyncedSignal, _Signal);

  var _super = _createSuper(SyncedSignal);

  function SyncedSignal() {
    var _this;

    _classCallCheck(this, SyncedSignal);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"].getDefaults(), arguments, ["value", "units"]));
    _this.name = "SyncedSignal";
    /**
     * Don't override when something is connected to the input
     */

    _this.override = false;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"].getDefaults(), arguments, ["value", "units"]);
    _this._lastVal = options.value;
    _this._synced = _this.context.transport.scheduleRepeat(_this._onTick.bind(_assertThisInitialized(_this)), "1i");
    _this._syncedCallback = _this._anchorValue.bind(_assertThisInitialized(_this));

    _this.context.transport.on("start", _this._syncedCallback);

    _this.context.transport.on("pause", _this._syncedCallback);

    _this.context.transport.on("stop", _this._syncedCallback); // disconnect the constant source from the output and replace it with another one


    _this._constantSource.disconnect();

    _this._constantSource.stop(0); // create a new one


    _this._constantSource = _this.output = new _ToneConstantSource__WEBPACK_IMPORTED_MODULE_3__["ToneConstantSource"]({
      context: _this.context,
      offset: options.value,
      units: options.units
    }).start(0);

    _this.setValueAtTime(options.value, 0);

    return _this;
  }
  /**
   * Callback which is invoked every tick.
   */


  _createClass(SyncedSignal, [{
    key: "_onTick",
    value: function _onTick(time) {
      var val = _get(_getPrototypeOf(SyncedSignal.prototype), "getValueAtTime", this).call(this, this.context.transport.seconds); // approximate ramp curves with linear ramps


      if (this._lastVal !== val) {
        this._lastVal = val;

        this._constantSource.offset.setValueAtTime(val, time);
      }
    }
    /**
     * Anchor the value at the start and stop of the Transport
     */

  }, {
    key: "_anchorValue",
    value: function _anchorValue(time) {
      var val = _get(_getPrototypeOf(SyncedSignal.prototype), "getValueAtTime", this).call(this, this.context.transport.seconds);

      this._lastVal = val;

      this._constantSource.offset.cancelAndHoldAtTime(time);

      this._constantSource.offset.setValueAtTime(val, time);
    }
  }, {
    key: "getValueAtTime",
    value: function getValueAtTime(time) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();
      return _get(_getPrototypeOf(SyncedSignal.prototype), "getValueAtTime", this).call(this, computedTime);
    }
  }, {
    key: "setValueAtTime",
    value: function setValueAtTime(value, time) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "setValueAtTime", this).call(this, value, computedTime);

      return this;
    }
  }, {
    key: "linearRampToValueAtTime",
    value: function linearRampToValueAtTime(value, time) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "linearRampToValueAtTime", this).call(this, value, computedTime);

      return this;
    }
  }, {
    key: "exponentialRampToValueAtTime",
    value: function exponentialRampToValueAtTime(value, time) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "exponentialRampToValueAtTime", this).call(this, value, computedTime);

      return this;
    }
  }, {
    key: "setTargetAtTime",
    value: function setTargetAtTime(value, startTime, timeConstant) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "setTargetAtTime", this).call(this, value, computedTime, timeConstant);

      return this;
    }
  }, {
    key: "cancelScheduledValues",
    value: function cancelScheduledValues(startTime) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "cancelScheduledValues", this).call(this, computedTime);

      return this;
    }
  }, {
    key: "setValueCurveAtTime",
    value: function setValueCurveAtTime(values, startTime, duration, scaling) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();
      duration = this.toSeconds(duration);

      _get(_getPrototypeOf(SyncedSignal.prototype), "setValueCurveAtTime", this).call(this, values, computedTime, duration, scaling);

      return this;
    }
  }, {
    key: "cancelAndHoldAtTime",
    value: function cancelAndHoldAtTime(time) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "cancelAndHoldAtTime", this).call(this, computedTime);

      return this;
    }
  }, {
    key: "setRampPoint",
    value: function setRampPoint(time) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "setRampPoint", this).call(this, computedTime);

      return this;
    }
  }, {
    key: "exponentialRampTo",
    value: function exponentialRampTo(value, rampTime, startTime) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "exponentialRampTo", this).call(this, value, rampTime, computedTime);

      return this;
    }
  }, {
    key: "linearRampTo",
    value: function linearRampTo(value, rampTime, startTime) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "linearRampTo", this).call(this, value, rampTime, computedTime);

      return this;
    }
  }, {
    key: "targetRampTo",
    value: function targetRampTo(value, rampTime, startTime) {
      var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

      _get(_getPrototypeOf(SyncedSignal.prototype), "targetRampTo", this).call(this, value, rampTime, computedTime);

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(SyncedSignal.prototype), "dispose", this).call(this);

      this.context.transport.clear(this._synced);
      this.context.transport.off("start", this._syncedCallback);
      this.context.transport.off("pause", this._syncedCallback);
      this.context.transport.off("stop", this._syncedCallback);

      this._constantSource.dispose();

      return this;
    }
  }]);

  return SyncedSignal;
}(_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/ToneConstantSource.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/ToneConstantSource.js ***!
  \******************************************************************/
/*! exports provided: ToneConstantSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneConstantSource", function() { return ToneConstantSource; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../source/OneShotSource */ "./node_modules/tone/build/esm/source/OneShotSource.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Wrapper around the native fire-and-forget ConstantSource.
 * Adds the ability to reschedule the stop method.
 * @category Signal
 */

var ToneConstantSource = /*#__PURE__*/function (_OneShotSource) {
  _inherits(ToneConstantSource, _OneShotSource);

  var _super = _createSuper(ToneConstantSource);

  function ToneConstantSource() {
    var _this;

    _classCallCheck(this, ToneConstantSource);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneConstantSource.getDefaults(), arguments, ["offset"]));
    _this.name = "ToneConstantSource";
    /**
     * The signal generator
     */

    _this._source = _this.context.createConstantSource();
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneConstantSource.getDefaults(), arguments, ["offset"]);
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])(_this._source, _this._gainNode);
    _this.offset = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      convert: options.convert,
      param: _this._source.offset,
      units: options.units,
      value: options.offset,
      minValue: options.minValue,
      maxValue: options.maxValue
    });
    return _this;
  }

  _createClass(ToneConstantSource, [{
    key: "start",
    value:
    /**
     * Start the source node at the given time
     * @param  time When to start the source
     */
    function start(time) {
      var computedTime = this.toSeconds(time);
      this.log("start", computedTime);

      this._startGain(computedTime);

      this._source.start(computedTime);

      return this;
    }
  }, {
    key: "_stopSource",
    value: function _stopSource(time) {
      this._source.stop(time);
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneConstantSource.prototype), "dispose", this).call(this);

      if (this.state === "started") {
        this.stop();
      }

      this._source.disconnect();

      this.offset.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"].getDefaults(), {
        convert: true,
        offset: 1,
        units: "number"
      });
    }
  }]);

  return ToneConstantSource;
}(_source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/WaveShaper.js":
/*!**********************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/WaveShaper.js ***!
  \**********************************************************/
/*! exports provided: WaveShaper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaveShaper", function() { return WaveShaper; });
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Wraps the native Web Audio API
 * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).
 *
 * @example
 * const osc = new Tone.Oscillator().toDestination().start();
 * // multiply the output of the signal by 2 using the waveshaper's function
 * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);
 * const signal = new Tone.Signal(440).connect(timesTwo);
 * @category Signal
 */

var WaveShaper = /*#__PURE__*/function (_SignalOperator) {
  _inherits(WaveShaper, _SignalOperator);

  var _super = _createSuper(WaveShaper);

  function WaveShaper() {
    var _this;

    _classCallCheck(this, WaveShaper);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(WaveShaper.getDefaults(), arguments, ["mapping", "length"])));
    _this.name = "WaveShaper";
    /**
     * the waveshaper node
     */

    _this._shaper = _this.context.createWaveShaper();
    /**
     * The input to the waveshaper node.
     */

    _this.input = _this._shaper;
    /**
     * The output from the waveshaper node
     */

    _this.output = _this._shaper;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(WaveShaper.getDefaults(), arguments, ["mapping", "length"]);

    if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isArray"])(options.mapping) || options.mapping instanceof Float32Array) {
      _this.curve = Float32Array.from(options.mapping);
    } else if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(options.mapping)) {
      _this.setMap(options.mapping, options.length);
    }

    return _this;
  }

  _createClass(WaveShaper, [{
    key: "setMap",
    value:
    /**
     * Uses a mapping function to set the value of the curve.
     * @param mapping The function used to define the values.
     *                The mapping function take two arguments:
     *                the first is the value at the current position
     *                which goes from -1 to 1 over the number of elements
     *                in the curve array. The second argument is the array position.
     * @example
     * const shaper = new Tone.WaveShaper();
     * // map the input signal from [-1, 1] to [0, 10]
     * shaper.setMap((val, index) => (val + 1) * 5);
     */
    function setMap(mapping) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1024;
      var array = new Float32Array(length);

      for (var i = 0, len = length; i < len; i++) {
        var normalized = i / (len - 1) * 2 - 1;
        array[i] = mapping(normalized, i);
      }

      this.curve = array;
      return this;
    }
    /**
     * The array to set as the waveshaper curve. For linear curves
     * array length does not make much difference, but for complex curves
     * longer arrays will provide smoother interpolation.
     */

  }, {
    key: "curve",
    get: function get() {
      return this._shaper.curve;
    },
    set: function set(mapping) {
      this._shaper.curve = mapping;
    }
    /**
     * Specifies what type of oversampling (if any) should be used when
     * applying the shaping curve. Can either be "none", "2x" or "4x".
     */

  }, {
    key: "oversample",
    get: function get() {
      return this._shaper.oversample;
    },
    set: function set(oversampling) {
      var isOverSampleType = ["none", "2x", "4x"].some(function (str) {
        return str.includes(oversampling);
      });
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(isOverSampleType, "oversampling must be either 'none', '2x', or '4x'");
      this._shaper.oversample = oversampling;
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(WaveShaper.prototype), "dispose", this).call(this);

      this._shaper.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"].getDefaults(), {
        length: 1024
      });
    }
  }]);

  return WaveShaper;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_4__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/Zero.js":
/*!****************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/Zero.js ***!
  \****************************************************/
/*! exports provided: Zero */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Zero", function() { return Zero; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _SignalOperator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SignalOperator */ "./node_modules/tone/build/esm/signal/SignalOperator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Tone.Zero outputs 0's at audio-rate. The reason this has to be
 * it's own class is that many browsers optimize out Tone.Signal
 * with a value of 0 and will not process nodes further down the graph.
 * @category Signal
 */

var Zero = /*#__PURE__*/function (_SignalOperator) {
  _inherits(Zero, _SignalOperator);

  var _super = _createSuper(Zero);

  function Zero() {
    var _this;

    _classCallCheck(this, Zero);

    _this = _super.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Zero.getDefaults(), arguments)));
    _this.name = "Zero";
    /**
     * The gain node which connects the constant source to the output
     */

    _this._gain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context
    });
    /**
     * Only outputs 0
     */

    _this.output = _this._gain;
    /**
     * no input node
     */

    _this.input = undefined;
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(_this.context.getConstant(0), _this._gain);
    return _this;
  }
  /**
   * clean up
   */


  _createClass(Zero, [{
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Zero.prototype), "dispose", this).call(this);

      Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["disconnect"])(this.context.getConstant(0), this._gain);
      return this;
    }
  }]);

  return Zero;
}(_SignalOperator__WEBPACK_IMPORTED_MODULE_3__["SignalOperator"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/signal/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/signal/index.js ***!
  \*****************************************************/
/*! exports provided: Add, Abs, AudioToGain, GainToAudio, GreaterThan, GreaterThanZero, Multiply, Negate, Pow, Signal, connectSignal, Scale, ScaleExp, Subtract, SyncedSignal, WaveShaper, Zero */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Add */ "./node_modules/tone/build/esm/signal/Add.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Add", function() { return _Add__WEBPACK_IMPORTED_MODULE_0__["Add"]; });

/* harmony import */ var _Abs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Abs */ "./node_modules/tone/build/esm/signal/Abs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Abs", function() { return _Abs__WEBPACK_IMPORTED_MODULE_1__["Abs"]; });

/* harmony import */ var _AudioToGain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AudioToGain", function() { return _AudioToGain__WEBPACK_IMPORTED_MODULE_2__["AudioToGain"]; });

/* harmony import */ var _GainToAudio__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GainToAudio */ "./node_modules/tone/build/esm/signal/GainToAudio.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GainToAudio", function() { return _GainToAudio__WEBPACK_IMPORTED_MODULE_3__["GainToAudio"]; });

/* harmony import */ var _GreaterThan__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GreaterThan */ "./node_modules/tone/build/esm/signal/GreaterThan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GreaterThan", function() { return _GreaterThan__WEBPACK_IMPORTED_MODULE_4__["GreaterThan"]; });

/* harmony import */ var _GreaterThanZero__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./GreaterThanZero */ "./node_modules/tone/build/esm/signal/GreaterThanZero.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function() { return _GreaterThanZero__WEBPACK_IMPORTED_MODULE_5__["GreaterThanZero"]; });

/* harmony import */ var _Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Multiply", function() { return _Multiply__WEBPACK_IMPORTED_MODULE_6__["Multiply"]; });

/* harmony import */ var _Negate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Negate */ "./node_modules/tone/build/esm/signal/Negate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Negate", function() { return _Negate__WEBPACK_IMPORTED_MODULE_7__["Negate"]; });

/* harmony import */ var _Pow__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Pow */ "./node_modules/tone/build/esm/signal/Pow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Pow", function() { return _Pow__WEBPACK_IMPORTED_MODULE_8__["Pow"]; });

/* harmony import */ var _Signal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Signal", function() { return _Signal__WEBPACK_IMPORTED_MODULE_9__["Signal"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "connectSignal", function() { return _Signal__WEBPACK_IMPORTED_MODULE_9__["connectSignal"]; });

/* harmony import */ var _Scale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Scale", function() { return _Scale__WEBPACK_IMPORTED_MODULE_10__["Scale"]; });

/* harmony import */ var _ScaleExp__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ScaleExp */ "./node_modules/tone/build/esm/signal/ScaleExp.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScaleExp", function() { return _ScaleExp__WEBPACK_IMPORTED_MODULE_11__["ScaleExp"]; });

/* harmony import */ var _Subtract__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Subtract */ "./node_modules/tone/build/esm/signal/Subtract.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subtract", function() { return _Subtract__WEBPACK_IMPORTED_MODULE_12__["Subtract"]; });

/* harmony import */ var _SyncedSignal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./SyncedSignal */ "./node_modules/tone/build/esm/signal/SyncedSignal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SyncedSignal", function() { return _SyncedSignal__WEBPACK_IMPORTED_MODULE_13__["SyncedSignal"]; });

/* harmony import */ var _WaveShaper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WaveShaper", function() { return _WaveShaper__WEBPACK_IMPORTED_MODULE_14__["WaveShaper"]; });

/* harmony import */ var _Zero__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Zero */ "./node_modules/tone/build/esm/signal/Zero.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Zero", function() { return _Zero__WEBPACK_IMPORTED_MODULE_15__["Zero"]; });


















/***/ }),

/***/ "./node_modules/tone/build/esm/source/Noise.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/source/Noise.js ***!
  \*****************************************************/
/*! exports provided: Noise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Noise", function() { return Noise; });
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _source_Source__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../source/Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Noise is a noise generator. It uses looped noise buffers to save on performance.
 * Noise supports the noise types: "pink", "white", and "brown". Read more about
 * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).
 *
 * @example
 * // initialize the noise and start
 * const noise = new Tone.Noise("pink").start();
 * // make an autofilter to shape the noise
 * const autoFilter = new Tone.AutoFilter({
 * 	frequency: "8n",
 * 	baseFrequency: 200,
 * 	octaves: 8
 * }).toDestination().start();
 * // connect the noise
 * noise.connect(autoFilter);
 * // start the autofilter LFO
 * autoFilter.start();
 * @category Source
 */

var Noise = /*#__PURE__*/function (_Source) {
  _inherits(Noise, _Source);

  var _super = _createSuper(Noise);

  function Noise() {
    var _this;

    _classCallCheck(this, Noise);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Noise.getDefaults(), arguments, ["type"]));
    _this.name = "Noise";
    /**
     * Private reference to the source
     */

    _this._source = null;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Noise.getDefaults(), arguments, ["type"]);
    _this._playbackRate = options.playbackRate;
    _this.type = options.type;
    _this._fadeIn = options.fadeIn;
    _this._fadeOut = options.fadeOut;
    return _this;
  }

  _createClass(Noise, [{
    key: "type",
    get:
    /**
     * The type of the noise. Can be "white", "brown", or "pink".
     * @example
     * const noise = new Tone.Noise().toDestination().start();
     * noise.type = "brown";
     */
    function get() {
      return this._type;
    },
    set: function set(type) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(type in _noiseBuffers, "Noise: invalid type: " + type);

      if (this._type !== type) {
        this._type = type; // if it's playing, stop and restart it

        if (this.state === "started") {
          var now = this.now();

          this._stop(now);

          this._start(now);
        }
      }
    }
    /**
     * The playback rate of the noise. Affects
     * the "frequency" of the noise.
     */

  }, {
    key: "playbackRate",
    get: function get() {
      return this._playbackRate;
    },
    set: function set(rate) {
      this._playbackRate = rate;

      if (this._source) {
        this._source.playbackRate.value = rate;
      }
    }
    /**
     * internal start method
     */

  }, {
    key: "_start",
    value: function _start(time) {
      var _this2 = this;

      var buffer = _noiseBuffers[this._type];
      this._source = new _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_4__["ToneBufferSource"]({
        url: buffer,
        context: this.context,
        fadeIn: this._fadeIn,
        fadeOut: this._fadeOut,
        loop: true,
        onended: function onended() {
          return _this2.onstop(_this2);
        },
        playbackRate: this._playbackRate
      }).connect(this.output);

      this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));
    }
    /**
     * internal stop method
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      if (this._source) {
        this._source.stop(this.toSeconds(time));

        this._source = null;
      }
    }
    /**
     * The fadeIn time of the amplitude envelope.
     */

  }, {
    key: "fadeIn",
    get: function get() {
      return this._fadeIn;
    },
    set: function set(time) {
      this._fadeIn = time;

      if (this._source) {
        this._source.fadeIn = this._fadeIn;
      }
    }
    /**
     * The fadeOut time of the amplitude envelope.
     */

  }, {
    key: "fadeOut",
    get: function get() {
      return this._fadeOut;
    },
    set: function set(time) {
      this._fadeOut = time;

      if (this._source) {
        this._source.fadeOut = this._fadeOut;
      }
    }
  }, {
    key: "_restart",
    value: function _restart(time) {
      // TODO could be optimized by cancelling the buffer source 'stop'
      this._stop(time);

      this._start(time);
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Noise.prototype), "dispose", this).call(this);

      if (this._source) {
        this._source.disconnect();
      }

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_source_Source__WEBPACK_IMPORTED_MODULE_3__["Source"].getDefaults(), {
        fadeIn: 0,
        fadeOut: 0,
        playbackRate: 1,
        type: "white"
      });
    }
  }]);

  return Noise;
}(_source_Source__WEBPACK_IMPORTED_MODULE_3__["Source"]); //--------------------
// THE NOISE BUFFERS
//--------------------
// Noise buffer stats

var BUFFER_LENGTH = 44100 * 5;
var NUM_CHANNELS = 2;
/**
 * Cache the noise buffers
 */

var _noiseCache = {
  brown: null,
  pink: null,
  white: null
};
/**
 * The noise arrays. Generated on initialization.
 * borrowed heavily from https://github.com/zacharydenton/noise.js
 * (c) 2013 Zach Denton (MIT)
 */

var _noiseBuffers = {
  get brown() {
    if (!_noiseCache.brown) {
      var buffer = [];

      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
        var channel = new Float32Array(BUFFER_LENGTH);
        buffer[channelNum] = channel;
        var lastOut = 0.0;

        for (var i = 0; i < BUFFER_LENGTH; i++) {
          var white = Math.random() * 2 - 1;
          channel[i] = (lastOut + 0.02 * white) / 1.02;
          lastOut = channel[i];
          channel[i] *= 3.5; // (roughly) compensate for gain
        }
      }

      _noiseCache.brown = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"]().fromArray(buffer);
    }

    return _noiseCache.brown;
  },

  get pink() {
    if (!_noiseCache.pink) {
      var buffer = [];

      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
        var channel = new Float32Array(BUFFER_LENGTH);
        buffer[channelNum] = channel;
        var b0 = void 0,
            b1 = void 0,
            b2 = void 0,
            b3 = void 0,
            b4 = void 0,
            b5 = void 0,
            b6 = void 0;
        b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;

        for (var i = 0; i < BUFFER_LENGTH; i++) {
          var white = Math.random() * 2 - 1;
          b0 = 0.99886 * b0 + white * 0.0555179;
          b1 = 0.99332 * b1 + white * 0.0750759;
          b2 = 0.96900 * b2 + white * 0.1538520;
          b3 = 0.86650 * b3 + white * 0.3104856;
          b4 = 0.55000 * b4 + white * 0.5329522;
          b5 = -0.7616 * b5 - white * 0.0168980;
          channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;
          channel[i] *= 0.11; // (roughly) compensate for gain

          b6 = white * 0.115926;
        }
      }

      _noiseCache.pink = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"]().fromArray(buffer);
    }

    return _noiseCache.pink;
  },

  get white() {
    if (!_noiseCache.white) {
      var buffer = [];

      for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
        var channel = new Float32Array(BUFFER_LENGTH);
        buffer[channelNum] = channel;

        for (var i = 0; i < BUFFER_LENGTH; i++) {
          channel[i] = Math.random() * 2 - 1;
        }
      }

      _noiseCache.white = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"]().fromArray(buffer);
    }

    return _noiseCache.white;
  }

};

/***/ }),

/***/ "./node_modules/tone/build/esm/source/OneShotSource.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/OneShotSource.js ***!
  \*************************************************************/
/*! exports provided: OneShotSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OneShotSource", function() { return OneShotSource; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }





/**
 * Base class for fire-and-forget nodes
 */

var OneShotSource = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(OneShotSource, _ToneAudioNode);

  var _super = _createSuper(OneShotSource);

  function OneShotSource(options) {
    var _this;

    _classCallCheck(this, OneShotSource);

    _this = _super.call(this, options);
    /**
     * The callback to invoke after the
     * source is done playing.
     */

    _this.onended = _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"];
    /**
     * The start time
     */

    _this._startTime = -1;
    /**
     * The stop time
     */

    _this._stopTime = -1;
    /**
     * The id of the timeout
     */

    _this._timeout = -1;
    /**
     * The public output node
     */

    _this.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: 0
    });
    /**
     * The output gain node.
     */

    _this._gainNode = _this.output;
    /**
     * Get the playback state at the given time
     */

    _this.getStateAtTime = function (time) {
      var computedTime = this.toSeconds(time);

      if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) {
        return "started";
      } else {
        return "stopped";
      }
    };

    _this._fadeIn = options.fadeIn;
    _this._fadeOut = options.fadeOut;
    _this._curve = options.curve;
    _this.onended = options.onended;
    return _this;
  }

  _createClass(OneShotSource, [{
    key: "_startGain",
    value:
    /**
     * Start the source at the given time
     * @param  time When to start the source
     */
    function _startGain(time) {
      var gain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this._startTime === -1, "Source cannot be started more than once"); // apply a fade in envelope

      var fadeInTime = this.toSeconds(this._fadeIn); // record the start time

      this._startTime = time + fadeInTime;
      this._startTime = Math.max(this._startTime, this.context.currentTime); // schedule the envelope

      if (fadeInTime > 0) {
        this._gainNode.gain.setValueAtTime(0, time);

        if (this._curve === "linear") {
          this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);
        } else {
          this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);
        }
      } else {
        this._gainNode.gain.setValueAtTime(gain, time);
      }

      return this;
    }
    /**
     * Stop the source node at the given time.
     * @param time When to stop the source
     */

  }, {
    key: "stop",
    value: function stop(time) {
      this.log("stop", time);

      this._stopGain(this.toSeconds(time));

      return this;
    }
    /**
     * Stop the source at the given time
     * @param  time When to stop the source
     */

  }, {
    key: "_stopGain",
    value: function _stopGain(time) {
      var _this2 = this;

      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this._startTime !== -1, "'start' must be called before 'stop'"); // cancel the previous stop

      this.cancelStop(); // the fadeOut time

      var fadeOutTime = this.toSeconds(this._fadeOut); // schedule the stop callback

      this._stopTime = this.toSeconds(time) + fadeOutTime;
      this._stopTime = Math.max(this._stopTime, this.context.currentTime);

      if (fadeOutTime > 0) {
        // start the fade out curve at the given time
        if (this._curve === "linear") {
          this._gainNode.gain.linearRampTo(0, fadeOutTime, time);
        } else {
          this._gainNode.gain.targetRampTo(0, fadeOutTime, time);
        }
      } else {
        // stop any ongoing ramps, and set the value to 0
        this._gainNode.gain.cancelAndHoldAtTime(time);

        this._gainNode.gain.setValueAtTime(0, time);
      }

      this.context.clearTimeout(this._timeout);
      this._timeout = this.context.setTimeout(function () {
        // allow additional time for the exponential curve to fully decay
        var additionalTail = _this2._curve === "exponential" ? fadeOutTime * 2 : 0;

        _this2._stopSource(_this2.now() + additionalTail);

        _this2._onended();
      }, this._stopTime - this.context.currentTime);
      return this;
    }
    /**
     * Invoke the onended callback
     */

  }, {
    key: "_onended",
    value: function _onended() {
      var _this3 = this;

      if (this.onended !== _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"]) {
        this.onended(this); // overwrite onended to make sure it only is called once

        this.onended = _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"]; // dispose when it's ended to free up for garbage collection only in the online context

        if (!this.context.isOffline) {
          var disposeCallback = function disposeCallback() {
            return _this3.dispose();
          }; // @ts-ignore


          if (typeof window.requestIdleCallback !== "undefined") {
            // @ts-ignore
            window.requestIdleCallback(disposeCallback);
          } else {
            setTimeout(disposeCallback, 1000);
          }
        }
      }
    }
    /**
     * Get the playback state at the current time
     */

  }, {
    key: "state",
    get: function get() {
      return this.getStateAtTime(this.now());
    }
    /**
     * Cancel a scheduled stop event
     */

  }, {
    key: "cancelStop",
    value: function cancelStop() {
      this.log("cancelStop");
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this._startTime !== -1, "Source is not started"); // cancel the stop envelope

      this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);

      this.context.clearTimeout(this._timeout);
      this._stopTime = -1;
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(OneShotSource.prototype), "dispose", this).call(this);

      this._gainNode.disconnect();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
        curve: "linear",
        fadeIn: 0,
        fadeOut: 0,
        onended: _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"]
      });
    }
  }]);

  return OneShotSource;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/Source.js":
/*!******************************************************!*\
  !*** ./node_modules/tone/build/esm/source/Source.js ***!
  \******************************************************/
/*! exports provided: Source */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Source", function() { return Source; });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_context_Destination__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/context/Destination */ "./node_modules/tone/build/esm/core/context/Destination.js");
/* harmony import */ var _core_clock_Transport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/clock/Transport */ "./node_modules/tone/build/esm/core/clock/Transport.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/StateTimeline */ "./node_modules/tone/build/esm/core/util/StateTimeline.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }











/**
 * Base class for sources.
 * start/stop of this.context.transport.
 *
 * ```
 * // Multiple state change events can be chained together,
 * // but must be set in the correct order and with ascending times
 * // OK
 * state.start().stop("+0.2");
 * // OK
 * state.start().stop("+0.2").start("+0.4").stop("+0.7")
 * // BAD
 * state.stop("+0.2").start();
 * // BAD
 * state.start("+0.3").stop("+0.2");
 * ```
 */

var Source = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Source, _ToneAudioNode);

  var _super = _createSuper(Source);

  function Source(options) {
    var _this;

    _classCallCheck(this, Source);

    _this = _super.call(this, options);
    /**
     * Sources have no inputs
     */

    _this.input = undefined;
    /**
     * Keep track of the scheduled state.
     */

    _this._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_6__["StateTimeline"]("stopped");
    /**
     * The synced `start` callback function from the transport
     */

    _this._synced = false;
    /**
     * Keep track of all of the scheduled event ids
     */

    _this._scheduled = [];
    /**
     * Placeholder functions for syncing/unsyncing to transport
     */

    _this._syncedStart = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"];
    _this._syncedStop = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"];
    _this._state.memory = 100;
    _this._state.increasing = true;
    _this._volume = _this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
      context: _this.context,
      mute: options.mute,
      volume: options.volume
    });
    _this.volume = _this._volume.volume;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this), "volume");
    _this.onstop = options.onstop;
    return _this;
  }

  _createClass(Source, [{
    key: "state",
    get:
    /**
     * Returns the playback state of the source, either "started" or "stopped".
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/ahntone_c3.mp3", () => {
     * 	player.start();
     * 	console.log(player.state);
     * }).toDestination();
     */
    function get() {
      if (this._synced) {
        if (this.context.transport.state === "started") {
          return this._state.getValueAtTime(this.context.transport.seconds);
        } else {
          return "stopped";
        }
      } else {
        return this._state.getValueAtTime(this.now());
      }
    }
    /**
     * Mute the output.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // mute the output
     * osc.mute = true;
     */

  }, {
    key: "mute",
    get: function get() {
      return this._volume.mute;
    },
    set: function set(mute) {
      this._volume.mute = mute;
    }
    /**
     * Ensure that the scheduled time is not before the current time.
     * Should only be used when scheduled unsynced.
     */

  }, {
    key: "_clampToCurrentTime",
    value: function _clampToCurrentTime(time) {
      if (this._synced) {
        return time;
      } else {
        return Math.max(time, this.context.currentTime);
      }
    }
    /**
     * Start the source at the specified time. If no time is given,
     * start the source now.
     * @param  time When the source should be started.
     * @example
     * const source = new Tone.Oscillator().toDestination();
     * source.start("+0.5"); // starts the source 0.5 seconds from now
     */

  }, {
    key: "start",
    value: function start(time, offset, duration) {
      var _this2 = this;

      var computedTime = Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isUndef"])(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
      computedTime = this._clampToCurrentTime(computedTime); // if it's started, stop it and restart it

      if (!this._synced && this._state.getValueAtTime(computedTime) === "started") {
        // time should be strictly greater than the previous start time
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assert"])(Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_9__["GT"])(computedTime, this._state.get(computedTime).time), "Start time must be strictly greater than previous start time");

        this._state.cancel(computedTime);

        this._state.setStateAtTime("started", computedTime);

        this.log("restart", computedTime);
        this.restart(computedTime, offset, duration);
      } else {
        this.log("start", computedTime);

        this._state.setStateAtTime("started", computedTime);

        if (this._synced) {
          // add the offset time to the event
          var event = this._state.get(computedTime);

          if (event) {
            event.offset = this.toSeconds(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["defaultArg"])(offset, 0));
            event.duration = duration ? this.toSeconds(duration) : undefined;
          }

          var sched = this.context.transport.schedule(function (t) {
            _this2._start(t, offset, duration);
          }, computedTime);

          this._scheduled.push(sched); // if the transport is already started
          // and the time is greater than where the transport is


          if (this.context.transport.state === "started" && this.context.transport.getSecondsAtTime(this.immediate()) > computedTime) {
            this._syncedStart(this.now(), this.context.transport.seconds);
          }
        } else {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertContextRunning"])(this.context);

          this._start(computedTime, offset, duration);
        }
      }

      return this;
    }
    /**
     * Stop the source at the specified time. If no time is given,
     * stop the source now.
     * @param  time When the source should be stopped.
     * @example
     * const source = new Tone.Oscillator().toDestination();
     * source.start();
     * source.stop("+0.5"); // stops the source 0.5 seconds from now
     */

  }, {
    key: "stop",
    value: function stop(time) {
      var computedTime = Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isUndef"])(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
      computedTime = this._clampToCurrentTime(computedTime);

      if (this._state.getValueAtTime(computedTime) === "started" || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isDefined"])(this._state.getNextState("started", computedTime))) {
        this.log("stop", computedTime);

        if (!this._synced) {
          this._stop(computedTime);
        } else {
          var sched = this.context.transport.schedule(this._stop.bind(this), computedTime);

          this._scheduled.push(sched);
        }

        this._state.cancel(computedTime);

        this._state.setStateAtTime("stopped", computedTime);
      }

      return this;
    }
    /**
     * Restart the source.
     */

  }, {
    key: "restart",
    value: function restart(time, offset, duration) {
      time = this.toSeconds(time);

      if (this._state.getValueAtTime(time) === "started") {
        this._state.cancel(time);

        this._restart(time, offset, duration);
      }

      return this;
    }
    /**
     * Sync the source to the Transport so that all subsequent
     * calls to `start` and `stop` are synced to the TransportTime
     * instead of the AudioContext time.
     *
     * @example
     * const osc = new Tone.Oscillator().toDestination();
     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline
     * osc.sync().start(0).stop(0.3);
     * // start the transport.
     * Tone.Transport.start();
     * // set it to loop once a second
     * Tone.Transport.loop = true;
     * Tone.Transport.loopEnd = 1;
     */

  }, {
    key: "sync",
    value: function sync() {
      var _this3 = this;

      if (!this._synced) {
        this._synced = true;

        this._syncedStart = function (time, offset) {
          if (offset > 0) {
            // get the playback state at that time
            var stateEvent = _this3._state.get(offset); // listen for start events which may occur in the middle of the sync'ed time


            if (stateEvent && stateEvent.state === "started" && stateEvent.time !== offset) {
              // get the offset
              var startOffset = offset - _this3.toSeconds(stateEvent.time);

              var duration;

              if (stateEvent.duration) {
                duration = _this3.toSeconds(stateEvent.duration) - startOffset;
              }

              _this3._start(time, _this3.toSeconds(stateEvent.offset) + startOffset, duration);
            }
          }
        };

        this._syncedStop = function (time) {
          var seconds = _this3.context.transport.getSecondsAtTime(Math.max(time - _this3.sampleTime, 0));

          if (_this3._state.getValueAtTime(seconds) === "started") {
            _this3._stop(time);
          }
        };

        this.context.transport.on("start", this._syncedStart);
        this.context.transport.on("loopStart", this._syncedStart);
        this.context.transport.on("stop", this._syncedStop);
        this.context.transport.on("pause", this._syncedStop);
        this.context.transport.on("loopEnd", this._syncedStop);
      }

      return this;
    }
    /**
     * Unsync the source to the Transport. See Source.sync
     */

  }, {
    key: "unsync",
    value: function unsync() {
      var _this4 = this;

      if (this._synced) {
        this.context.transport.off("stop", this._syncedStop);
        this.context.transport.off("pause", this._syncedStop);
        this.context.transport.off("loopEnd", this._syncedStop);
        this.context.transport.off("start", this._syncedStart);
        this.context.transport.off("loopStart", this._syncedStart);
      }

      this._synced = false; // clear all of the scheduled ids

      this._scheduled.forEach(function (id) {
        return _this4.context.transport.clear(id);
      });

      this._scheduled = [];

      this._state.cancel(0); // stop it also


      this._stop(0);

      return this;
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Source.prototype), "dispose", this).call(this);

      this.onstop = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"];
      this.unsync();

      this._volume.dispose();

      this._state.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults(), {
        mute: false,
        onstop: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
        volume: 0
      });
    }
  }]);

  return Source;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/UserMedia.js":
/*!*********************************************************!*\
  !*** ./node_modules/tone/build/esm/source/UserMedia.js ***!
  \*********************************************************/
/*! exports provided: UserMedia */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserMedia", function() { return UserMedia; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








/**
 * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.
 * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)
 * to see which browsers are supported. Access to an external input
 * is limited to secure (HTTPS) connections.
 * @example
 * const meter = new Tone.Meter();
 * const mic = new Tone.UserMedia().connect(meter);
 * mic.open().then(() => {
 * 	// promise resolves when input is available
 * 	console.log("mic open");
 * 	// print the incoming mic levels in decibels
 * 	setInterval(() => console.log(meter.getValue()), 100);
 * }).catch(e => {
 * 	// promise is rejected when the user doesn't have or allow mic access
 * 	console.log("mic not open");
 * });
 * @category Source
 */

var UserMedia = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(UserMedia, _ToneAudioNode);

  var _super = _createSuper(UserMedia);

  function UserMedia() {
    var _this;

    _classCallCheck(this, UserMedia);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(UserMedia.getDefaults(), arguments, ["volume"]));
    _this.name = "UserMedia";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(UserMedia.getDefaults(), arguments, ["volume"]);
    _this._volume = _this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_3__["Volume"]({
      context: _this.context,
      volume: options.volume
    });
    _this.volume = _this._volume.volume;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_6__["readOnly"])(_assertThisInitialized(_this), "volume");
    _this.mute = options.mute;
    return _this;
  }

  _createClass(UserMedia, [{
    key: "open",
    value:
    /**
     * Open the media stream. If a string is passed in, it is assumed
     * to be the label or id of the stream, if a number is passed in,
     * it is the input number of the stream.
     * @param  labelOrId The label or id of the audio input media device.
     *                   With no argument, the default stream is opened.
     * @return The promise is resolved when the stream is open.
     */
    function open(labelOrId) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var devices, constraints, stream, mediaStreamNode;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(UserMedia.supported, "UserMedia is not supported"); // close the previous stream

                if (this.state === "started") {
                  this.close();
                }

                _context.next = 4;
                return UserMedia.enumerateDevices();

              case 4:
                devices = _context.sent;

                if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isNumber"])(labelOrId)) {
                  this._device = devices[labelOrId];
                } else {
                  this._device = devices.find(function (device) {
                    return device.label === labelOrId || device.deviceId === labelOrId;
                  }); // didn't find a matching device

                  if (!this._device && devices.length > 0) {
                    this._device = devices[0];
                  }

                  Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isDefined"])(this._device), "No matching device ".concat(labelOrId));
                } // do getUserMedia


                constraints = {
                  audio: {
                    echoCancellation: false,
                    sampleRate: this.context.sampleRate,
                    noiseSuppression: false,
                    mozNoiseSuppression: false
                  }
                };

                if (this._device) {
                  // @ts-ignore
                  constraints.audio.deviceId = this._device.deviceId;
                }

                _context.next = 10;
                return navigator.mediaDevices.getUserMedia(constraints);

              case 10:
                stream = _context.sent;

                // start a new source only if the previous one is closed
                if (!this._stream) {
                  this._stream = stream; // Wrap a MediaStreamSourceNode around the live input stream.

                  mediaStreamNode = this.context.createMediaStreamSource(stream); // Connect the MediaStreamSourceNode to a gate gain node

                  Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["connect"])(mediaStreamNode, this.output);
                  this._mediaStream = mediaStreamNode;
                }

                return _context.abrupt("return", this);

              case 13:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Close the media stream
     */

  }, {
    key: "close",
    value: function close() {
      if (this._stream && this._mediaStream) {
        this._stream.getAudioTracks().forEach(function (track) {
          track.stop();
        });

        this._stream = undefined; // remove the old media stream

        this._mediaStream.disconnect();

        this._mediaStream = undefined;
      }

      this._device = undefined;
      return this;
    }
    /**
     * Returns a promise which resolves with the list of audio input devices available.
     * @return The promise that is resolved with the devices
     * @example
     * Tone.UserMedia.enumerateDevices().then((devices) => {
     * 	// print the device labels
     * 	console.log(devices.map(device => device.label));
     * });
     */

  }, {
    key: "state",
    get:
    /**
     * Returns the playback state of the source, "started" when the microphone is open
     * and "stopped" when the mic is closed.
     */
    function get() {
      return this._stream && this._stream.active ? "started" : "stopped";
    }
    /**
     * Returns an identifier for the represented device that is
     * persisted across sessions. It is un-guessable by other applications and
     * unique to the origin of the calling application. It is reset when the
     * user clears cookies (for Private Browsing, a different identifier is
     * used that is not persisted across sessions). Returns undefined when the
     * device is not open.
     */

  }, {
    key: "deviceId",
    get: function get() {
      if (this._device) {
        return this._device.deviceId;
      } else {
        return undefined;
      }
    }
    /**
     * Returns a group identifier. Two devices have the
     * same group identifier if they belong to the same physical device.
     * Returns null  when the device is not open.
     */

  }, {
    key: "groupId",
    get: function get() {
      if (this._device) {
        return this._device.groupId;
      } else {
        return undefined;
      }
    }
    /**
     * Returns a label describing this device (for example "Built-in Microphone").
     * Returns undefined when the device is not open or label is not available
     * because of permissions.
     */

  }, {
    key: "label",
    get: function get() {
      if (this._device) {
        return this._device.label;
      } else {
        return undefined;
      }
    }
    /**
     * Mute the output.
     * @example
     * const mic = new Tone.UserMedia();
     * mic.open().then(() => {
     * 	// promise resolves when input is available
     * });
     * // mute the output
     * mic.mute = true;
     */

  }, {
    key: "mute",
    get: function get() {
      return this._volume.mute;
    },
    set: function set(mute) {
      this._volume.mute = mute;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(UserMedia.prototype), "dispose", this).call(this);

      this.close();

      this._volume.dispose();

      this.volume.dispose();
      return this;
    }
    /**
     * If getUserMedia is supported by the browser.
     */

  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
        mute: false,
        volume: 0
      });
    }
  }, {
    key: "enumerateDevices",
    value: function enumerateDevices() {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        var allDevices;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return navigator.mediaDevices.enumerateDevices();

              case 2:
                allDevices = _context2.sent;
                return _context2.abrupt("return", allDevices.filter(function (device) {
                  return device.kind === "audioinput";
                }));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
    }
  }, {
    key: "supported",
    get: function get() {
      return Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isDefined"])(navigator.mediaDevices) && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isDefined"])(navigator.mediaDevices.getUserMedia);
    }
  }]);

  return UserMedia;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/GrainPlayer.js":
/*!******************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/GrainPlayer.js ***!
  \******************************************************************/
/*! exports provided: GrainPlayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GrainPlayer", function() { return GrainPlayer; });
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_clock_Clock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/clock/Clock */ "./node_modules/tone/build/esm/core/clock/Clock.js");
/* harmony import */ var _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony import */ var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/type/Conversions */ "./node_modules/tone/build/esm/core/type/Conversions.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).
 * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the
 * amount of time each small chunk of audio is played for and the overlap is the
 * amount of crossfading transition time between successive grains.
 * @category Source
 */

var GrainPlayer = /*#__PURE__*/function (_Source) {
  _inherits(GrainPlayer, _Source);

  var _super = _createSuper(GrainPlayer);

  function GrainPlayer() {
    var _this;

    _classCallCheck(this, GrainPlayer);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(GrainPlayer.getDefaults(), arguments, ["url", "onload"]));
    _this.name = "GrainPlayer";
    /**
     * Internal loopStart value
     */

    _this._loopStart = 0;
    /**
     * Internal loopStart value
     */

    _this._loopEnd = 0;
    /**
     * All of the currently playing BufferSources
     */

    _this._activeSources = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(GrainPlayer.getDefaults(), arguments, ["url", "onload"]);
    _this.buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"]({
      onload: options.onload,
      onerror: options.onerror,
      reverse: options.reverse,
      url: options.url
    });
    _this._clock = new _core_clock_Clock__WEBPACK_IMPORTED_MODULE_4__["Clock"]({
      context: _this.context,
      callback: _this._tick.bind(_assertThisInitialized(_this)),
      frequency: 1 / options.grainSize
    });
    _this._playbackRate = options.playbackRate;
    _this._grainSize = options.grainSize;
    _this._overlap = options.overlap;
    _this.detune = options.detune; // setup

    _this.overlap = options.overlap;
    _this.loop = options.loop;
    _this.playbackRate = options.playbackRate;
    _this.grainSize = options.grainSize;
    _this.loopStart = options.loopStart;
    _this.loopEnd = options.loopEnd;
    _this.reverse = options.reverse;

    _this._clock.on("stop", _this._onstop.bind(_assertThisInitialized(_this)));

    return _this;
  }

  _createClass(GrainPlayer, [{
    key: "_start",
    value:
    /**
     * Internal start method
     */
    function _start(time, offset, duration) {
      offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, 0);
      offset = this.toSeconds(offset);
      time = this.toSeconds(time);

      var grainSize = 1 / this._clock.frequency.getValueAtTime(time);

      this._clock.start(time, offset / grainSize);

      if (duration) {
        this.stop(time + this.toSeconds(duration));
      }
    }
    /**
     * Stop and then restart the player from the beginning (or offset)
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given,
     * 					it will default to the full length of the sample (minus any offset)
     */

  }, {
    key: "restart",
    value: function restart(time, offset, duration) {
      _get(_getPrototypeOf(GrainPlayer.prototype), "restart", this).call(this, time, offset, duration);

      return this;
    }
  }, {
    key: "_restart",
    value: function _restart(time, offset, duration) {
      this._stop(time);

      this._start(time, offset, duration);
    }
    /**
     * Internal stop method
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      this._clock.stop(time);
    }
    /**
     * Invoked when the clock is stopped
     */

  }, {
    key: "_onstop",
    value: function _onstop(time) {
      // stop the players
      this._activeSources.forEach(function (source) {
        source.fadeOut = 0;
        source.stop(time);
      });

      this.onstop(this);
    }
    /**
     * Invoked on each clock tick. scheduled a new grain at this time.
     */

  }, {
    key: "_tick",
    value: function _tick(time) {
      var _this2 = this;

      // check if it should stop looping
      var ticks = this._clock.getTicksAtTime(time);

      var offset = ticks * this._grainSize;
      this.log("offset", offset);

      if (!this.loop && offset > this.buffer.duration) {
        this.stop(time);
        return;
      } // at the beginning of the file, the fade in should be 0


      var fadeIn = offset < this._overlap ? 0 : this._overlap; // create a buffer source

      var source = new _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__["ToneBufferSource"]({
        context: this.context,
        url: this.buffer,
        fadeIn: fadeIn,
        fadeOut: this._overlap,
        loop: this.loop,
        loopStart: this._loopStart,
        loopEnd: this._loopEnd,
        // compute the playbackRate based on the detune
        playbackRate: Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_6__["intervalToFrequencyRatio"])(this.detune / 100)
      }).connect(this.output);
      source.start(time, this._grainSize * ticks);
      source.stop(time + this._grainSize / this.playbackRate); // add it to the active sources

      this._activeSources.push(source); // remove it when it's done


      source.onended = function () {
        var index = _this2._activeSources.indexOf(source);

        if (index !== -1) {
          _this2._activeSources.splice(index, 1);
        }
      };
    }
    /**
     * The playback rate of the sample
     */

  }, {
    key: "playbackRate",
    get: function get() {
      return this._playbackRate;
    },
    set: function set(rate) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(rate, 0.001);
      this._playbackRate = rate;
      this.grainSize = this._grainSize;
    }
    /**
     * The loop start time.
     */

  }, {
    key: "loopStart",
    get: function get() {
      return this._loopStart;
    },
    set: function set(time) {
      if (this.buffer.loaded) {
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(this.toSeconds(time), 0, this.buffer.duration);
      }

      this._loopStart = this.toSeconds(time);
    }
    /**
     * The loop end time.
     */

  }, {
    key: "loopEnd",
    get: function get() {
      return this._loopEnd;
    },
    set: function set(time) {
      if (this.buffer.loaded) {
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(this.toSeconds(time), 0, this.buffer.duration);
      }

      this._loopEnd = this.toSeconds(time);
    }
    /**
     * The direction the buffer should play in
     */

  }, {
    key: "reverse",
    get: function get() {
      return this.buffer.reverse;
    },
    set: function set(rev) {
      this.buffer.reverse = rev;
    }
    /**
     * The size of each chunk of audio that the
     * buffer is chopped into and played back at.
     */

  }, {
    key: "grainSize",
    get: function get() {
      return this._grainSize;
    },
    set: function set(size) {
      this._grainSize = this.toSeconds(size);

      this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());
    }
    /**
     * The duration of the cross-fade between successive grains.
     */

  }, {
    key: "overlap",
    get: function get() {
      return this._overlap;
    },
    set: function set(time) {
      var computedTime = this.toSeconds(time);
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(computedTime, 0);
      this._overlap = computedTime;
    }
    /**
     * If all the buffer is loaded
     */

  }, {
    key: "loaded",
    get: function get() {
      return this.buffer.loaded;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(GrainPlayer.prototype), "dispose", this).call(this);

      this.buffer.dispose();

      this._clock.dispose();

      this._activeSources.forEach(function (source) {
        return source.dispose();
      });

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_0__["Source"].getDefaults(), {
        onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["noOp"],
        onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["noOp"],
        overlap: 0.1,
        grainSize: 0.2,
        playbackRate: 1,
        detune: 0,
        loop: false,
        loopStart: 0,
        loopEnd: 0,
        reverse: false
      });
    }
  }]);

  return GrainPlayer;
}(_Source__WEBPACK_IMPORTED_MODULE_0__["Source"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/Player.js":
/*!*************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/Player.js ***!
  \*************************************************************/
/*! exports provided: Player */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Player", function() { return Player; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _ToneBufferSource__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/util/Decorator */ "./node_modules/tone/build/esm/core/util/Decorator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










/**
 * Player is an audio file player with start, loop, and stop functions.
 * @example
 * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/gong_1.mp3").toDestination();
 * // play as soon as the buffer is loaded
 * player.autostart = true;
 * @category Source
 */

var Player = /*#__PURE__*/function (_Source) {
  _inherits(Player, _Source);

  var _super = _createSuper(Player);

  function Player() {
    var _this;

    _classCallCheck(this, Player);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Player.getDefaults(), arguments, ["url", "onload"]));
    _this.name = "Player";
    /**
     * All of the active buffer source nodes
     */

    _this._activeSources = new Set();
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Player.getDefaults(), arguments, ["url", "onload"]);
    _this._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"]({
      onload: _this._onload.bind(_assertThisInitialized(_this), options.onload),
      onerror: options.onerror,
      reverse: options.reverse,
      url: options.url
    });
    _this.autostart = options.autostart;
    _this._loop = options.loop;
    _this._loopStart = options.loopStart;
    _this._loopEnd = options.loopEnd;
    _this._playbackRate = options.playbackRate;
    _this.fadeIn = options.fadeIn;
    _this.fadeOut = options.fadeOut;
    return _this;
  }

  _createClass(Player, [{
    key: "load",
    value:
    /**
     * Load the audio file as an audio buffer.
     * Decodes the audio asynchronously and invokes
     * the callback once the audio buffer loads.
     * Note: this does not need to be called if a url
     * was passed in to the constructor. Only use this
     * if you want to manually load a new url.
     * @param url The url of the buffer to load. Filetype support depends on the browser.
     */
    function load(url) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this._buffer.load(url);

              case 2:
                this._onload();

                return _context.abrupt("return", this);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Internal callback when the buffer is loaded.
     */

  }, {
    key: "_onload",
    value: function _onload() {
      var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"];
      callback();

      if (this.autostart) {
        this.start();
      }
    }
    /**
     * Internal callback when the buffer is done playing.
     */

  }, {
    key: "_onSourceEnd",
    value: function _onSourceEnd(source) {
      // invoke the onstop function
      this.onstop(this); // delete the source from the active sources

      this._activeSources.delete(source);

      if (this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === "started") {
        // remove the 'implicitEnd' event and replace with an explicit end
        this._state.cancel(this.now());

        this._state.setStateAtTime("stopped", this.now());
      }
    }
    /**
     * Play the buffer at the given startTime. Optionally add an offset
     * and/or duration which will play the buffer from a position
     * within the buffer for the given duration.
     *
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
     */

  }, {
    key: "start",
    value: function start(time, offset, duration) {
      _get(_getPrototypeOf(Player.prototype), "start", this).call(this, time, offset, duration);

      return this;
    }
    /**
     * Internal start method
     */

  }, {
    key: "_start",
    value: function _start(startTime, offset, duration) {
      // if it's a loop the default offset is the loopStart point
      if (this._loop) {
        offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, this._loopStart);
      } else {
        // otherwise the default offset is 0
        offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, 0);
      } // compute the values in seconds


      var computedOffset = this.toSeconds(offset); // compute the duration which is either the passed in duration of the buffer.duration - offset

      var origDuration = duration;
      duration = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(duration, Math.max(this._buffer.duration - computedOffset, 0));
      var computedDuration = this.toSeconds(duration); // scale it by the playback rate

      computedDuration = computedDuration / this._playbackRate; // get the start time

      startTime = this.toSeconds(startTime); // make the source

      var source = new _ToneBufferSource__WEBPACK_IMPORTED_MODULE_7__["ToneBufferSource"]({
        url: this._buffer,
        context: this.context,
        fadeIn: this.fadeIn,
        fadeOut: this.fadeOut,
        loop: this._loop,
        loopEnd: this._loopEnd,
        loopStart: this._loopStart,
        onended: this._onSourceEnd.bind(this),
        playbackRate: this._playbackRate
      }).connect(this.output); // set the looping properties

      if (!this._loop && !this._synced) {
        // cancel the previous stop
        this._state.cancel(startTime + computedDuration); // if it's not looping, set the state change at the end of the sample


        this._state.setStateAtTime("stopped", startTime + computedDuration, {
          implicitEnd: true
        });
      } // add it to the array of active sources


      this._activeSources.add(source); // start it


      if (this._loop && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__["isUndef"])(origDuration)) {
        source.start(startTime, computedOffset);
      } else {
        // subtract the fade out time
        source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));
      }
    }
    /**
     * Stop playback.
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      var computedTime = this.toSeconds(time);

      this._activeSources.forEach(function (source) {
        return source.stop(computedTime);
      });
    }
    /**
     * Stop and then restart the player from the beginning (or offset)
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given,
     * 					it will default to the full length of the sample (minus any offset)
     */

  }, {
    key: "restart",
    value: function restart(time, offset, duration) {
      _get(_getPrototypeOf(Player.prototype), "restart", this).call(this, time, offset, duration);

      return this;
    }
  }, {
    key: "_restart",
    value: function _restart(time, offset, duration) {
      this._stop(time);

      this._start(time, offset, duration);
    }
    /**
     * Seek to a specific time in the player's buffer. If the
     * source is no longer playing at that time, it will stop.
     * @param offset The time to seek to.
     * @param when The time for the seek event to occur.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/gurgling_theremin_1.mp3", () => {
     * 	player.start();
     * 	// seek to the offset in 1 second from now
     * 	player.seek(0.4, "+1");
     * }).toDestination();
     */

  }, {
    key: "seek",
    value: function seek(offset, when) {
      var computedTime = this.toSeconds(when);

      if (this._state.getValueAtTime(computedTime) === "started") {
        var computedOffset = this.toSeconds(offset); // if it's currently playing, stop it

        this._stop(computedTime); // restart it at the given time


        this._start(computedTime, computedOffset);
      }

      return this;
    }
    /**
     * Set the loop start and end. Will only loop if loop is set to true.
     * @param loopStart The loop start time
     * @param loopEnd The loop end time
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/malevoices_aa2_F3.mp3").toDestination();
     * // loop between the given points
     * player.setLoopPoints(0.2, 0.3);
     * player.loop = true;
     * player.autostart = true;
     */

  }, {
    key: "setLoopPoints",
    value: function setLoopPoints(loopStart, loopEnd) {
      this.loopStart = loopStart;
      this.loopEnd = loopEnd;
      return this;
    }
    /**
     * If loop is true, the loop will start at this position.
     */

  }, {
    key: "loopStart",
    get: function get() {
      return this._loopStart;
    },
    set: function set(loopStart) {
      this._loopStart = loopStart;

      if (this.buffer.loaded) {
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertRange"])(this.toSeconds(loopStart), 0, this.buffer.duration);
      } // get the current source


      this._activeSources.forEach(function (source) {
        source.loopStart = loopStart;
      });
    }
    /**
     * If loop is true, the loop will end at this position.
     */

  }, {
    key: "loopEnd",
    get: function get() {
      return this._loopEnd;
    },
    set: function set(loopEnd) {
      this._loopEnd = loopEnd;

      if (this.buffer.loaded) {
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertRange"])(this.toSeconds(loopEnd), 0, this.buffer.duration);
      } // get the current source


      this._activeSources.forEach(function (source) {
        source.loopEnd = loopEnd;
      });
    }
    /**
     * The audio buffer belonging to the player.
     */

  }, {
    key: "buffer",
    get: function get() {
      return this._buffer;
    },
    set: function set(buffer) {
      this._buffer.set(buffer);
    }
    /**
     * If the buffer should loop once it's over.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/drum-samples/breakbeat.mp3").toDestination();
     * player.loop = true;
     * player.autostart = true;
     */

  }, {
    key: "loop",
    get: function get() {
      return this._loop;
    },
    set: function set(loop) {
      // if no change, do nothing
      if (this._loop === loop) {
        return;
      }

      this._loop = loop; // set the loop of all of the sources

      this._activeSources.forEach(function (source) {
        source.loop = loop;
      });

      if (loop) {
        // remove the next stopEvent
        var stopEvent = this._state.getNextState("stopped", this.now());

        if (stopEvent) {
          this._state.cancel(stopEvent.time);
        }
      }
    }
    /**
     * Normal speed is 1. The pitch will change with the playback rate.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/femalevoices_aa2_A5.mp3").toDestination();
     * // play at 1/4 speed
     * player.playbackRate = 0.25;
     * // play as soon as the buffer is loaded
     * player.autostart = true;
     */

  }, {
    key: "playbackRate",
    get: function get() {
      return this._playbackRate;
    },
    set: function set(rate) {
      this._playbackRate = rate;
      var now = this.now(); // cancel the stop event since it's at a different time now

      var stopEvent = this._state.getNextState("stopped", now);

      if (stopEvent && stopEvent.implicitEnd) {
        this._state.cancel(stopEvent.time);

        this._activeSources.forEach(function (source) {
          return source.cancelStop();
        });
      } // set all the sources


      this._activeSources.forEach(function (source) {
        source.playbackRate.setValueAtTime(rate, now);
      });
    }
    /**
     * If the buffer should be reversed
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/audio/berklee/chime_1.mp3").toDestination();
     * player.autostart = true;
     * player.reverse = true;
     */

  }, {
    key: "reverse",
    get: function get() {
      return this._buffer.reverse;
    },
    set: function set(rev) {
      this._buffer.reverse = rev;
    }
    /**
     * If the buffer is loaded
     */

  }, {
    key: "loaded",
    get: function get() {
      return this._buffer.loaded;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Player.prototype), "dispose", this).call(this); // disconnect all of the players


      this._activeSources.forEach(function (source) {
        return source.dispose();
      });

      this._activeSources.clear();

      this._buffer.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults(), {
        autostart: false,
        fadeIn: 0,
        fadeOut: 0,
        loop: false,
        loopEnd: 0,
        loopStart: 0,
        onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
        onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
        playbackRate: 1,
        reverse: false
      });
    }
  }]);

  return Player;
}(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"]);

Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__["timeRange"])(0)], Player.prototype, "fadeIn", void 0);

Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__["timeRange"])(0)], Player.prototype, "fadeOut", void 0);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/Players.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/Players.js ***!
  \**************************************************************/
/*! exports provided: Players */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Players", function() { return Players; });
/* harmony import */ var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../component/channel/Volume */ "./node_modules/tone/build/esm/component/channel/Volume.js");
/* harmony import */ var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffers */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Player */ "./node_modules/tone/build/esm/source/buffer/Player.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * Players combines multiple [[Player]] objects.
 * @category Source
 */

var Players = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(Players, _ToneAudioNode);

  var _super = _createSuper(Players);

  function Players() {
    var _this;

    _classCallCheck(this, Players);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Players.getDefaults(), arguments, ["urls", "onload"], "urls"));
    _this.name = "Players";
    /**
     * Players has no input.
     */

    _this.input = undefined;
    /**
     * The container of all of the players
     */

    _this._players = new Map();
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Players.getDefaults(), arguments, ["urls", "onload"], "urls");
    /**
     * The output volume node
     */

    _this._volume = _this.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
      context: _this.context,
      volume: options.volume
    });
    _this.volume = _this._volume.volume;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this), "volume");
    _this._buffers = new _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffers"]({
      urls: options.urls,
      onload: options.onload,
      baseUrl: options.baseUrl,
      onerror: options.onerror
    }); // mute initially

    _this.mute = options.mute;
    _this._fadeIn = options.fadeIn;
    _this._fadeOut = options.fadeOut;
    return _this;
  }

  _createClass(Players, [{
    key: "mute",
    get:
    /**
     * Mute the output.
     */
    function get() {
      return this._volume.mute;
    },
    set: function set(mute) {
      this._volume.mute = mute;
    }
    /**
     * The fadeIn time of the envelope applied to the source.
     */

  }, {
    key: "fadeIn",
    get: function get() {
      return this._fadeIn;
    },
    set: function set(fadeIn) {
      this._fadeIn = fadeIn;

      this._players.forEach(function (player) {
        player.fadeIn = fadeIn;
      });
    }
    /**
     * The fadeOut time of the each of the sources.
     */

  }, {
    key: "fadeOut",
    get: function get() {
      return this._fadeOut;
    },
    set: function set(fadeOut) {
      this._fadeOut = fadeOut;

      this._players.forEach(function (player) {
        player.fadeOut = fadeOut;
      });
    }
    /**
     * The state of the players object. Returns "started" if any of the players are playing.
     */

  }, {
    key: "state",
    get: function get() {
      var playing = Array.from(this._players).some(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            _ = _ref2[0],
            player = _ref2[1];

        return player.state === "started";
      });
      return playing ? "started" : "stopped";
    }
    /**
     * True if the buffers object has a buffer by that name.
     * @param name  The key or index of the buffer.
     */

  }, {
    key: "has",
    value: function has(name) {
      return this._buffers.has(name);
    }
    /**
     * Get a player by name.
     * @param  name  The players name as defined in the constructor object or `add` method.
     */

  }, {
    key: "player",
    value: function player(name) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(this.has(name), "No Player with the name ".concat(name, " exists on this object"));

      if (!this._players.has(name)) {
        var player = new _Player__WEBPACK_IMPORTED_MODULE_7__["Player"]({
          context: this.context,
          fadeIn: this._fadeIn,
          fadeOut: this._fadeOut,
          url: this._buffers.get(name)
        }).connect(this.output);

        this._players.set(name, player);
      }

      return this._players.get(name);
    }
    /**
     * If all the buffers are loaded or not
     */

  }, {
    key: "loaded",
    get: function get() {
      return this._buffers.loaded;
    }
    /**
     * Add a player by name and url to the Players
     * @param  name A unique name to give the player
     * @param  url  Either the url of the bufer or a buffer which will be added with the given name.
     * @param callback  The callback to invoke when the url is loaded.
     */

  }, {
    key: "add",
    value: function add(name, url, callback) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(!this._buffers.has(name), "A buffer with that name already exists on this object");

      this._buffers.add(name, url, callback);

      return this;
    }
    /**
     * Stop all of the players at the given time
     * @param time The time to stop all of the players.
     */

  }, {
    key: "stopAll",
    value: function stopAll(time) {
      this._players.forEach(function (player) {
        return player.stop(time);
      });

      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Players.prototype), "dispose", this).call(this);

      this._volume.dispose();

      this.volume.dispose();

      this._players.forEach(function (player) {
        return player.dispose();
      });

      this._buffers.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults(), {
        baseUrl: "",
        fadeIn: 0,
        fadeOut: 0,
        mute: false,
        onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
        onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
        urls: {},
        volume: 0
      });
    }
  }]);

  return Players;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js ***!
  \***********************************************************************/
/*! exports provided: ToneBufferSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function() { return ToneBufferSource; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioBuffer */ "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _OneShotSource__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../OneShotSource */ "./node_modules/tone/build/esm/source/OneShotSource.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










/**
 * Wrapper around the native BufferSourceNode.
 * @category Source
 */

var ToneBufferSource = /*#__PURE__*/function (_OneShotSource) {
  _inherits(ToneBufferSource, _OneShotSource);

  var _super = _createSuper(ToneBufferSource);

  function ToneBufferSource() {
    var _this;

    _classCallCheck(this, ToneBufferSource);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]));
    _this.name = "ToneBufferSource";
    /**
     * The oscillator
     */

    _this._source = _this.context.createBufferSource();
    _this._internalChannels = [_this._source];
    /**
     * indicators if the source has started/stopped
     */

    _this._sourceStarted = false;
    _this._sourceStopped = false;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]);
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])(_this._source, _this._gainNode);

    _this._source.onended = function () {
      return _this._stopSource();
    };
    /**
     * The playbackRate of the buffer
     */


    _this.playbackRate = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this._source.playbackRate,
      units: "positive",
      value: options.playbackRate
    }); // set some values initially

    _this.loop = options.loop;
    _this.loopStart = options.loopStart;
    _this.loopEnd = options.loopEnd;
    _this._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"](options.url, options.onload, options.onerror);

    _this._internalChannels.push(_this._source);

    return _this;
  }

  _createClass(ToneBufferSource, [{
    key: "fadeIn",
    get:
    /**
     * The fadeIn time of the amplitude envelope.
     */
    function get() {
      return this._fadeIn;
    },
    set: function set(t) {
      this._fadeIn = t;
    }
    /**
     * The fadeOut time of the amplitude envelope.
     */

  }, {
    key: "fadeOut",
    get: function get() {
      return this._fadeOut;
    },
    set: function set(t) {
      this._fadeOut = t;
    }
    /**
     * The curve applied to the fades, either "linear" or "exponential"
     */

  }, {
    key: "curve",
    get: function get() {
      return this._curve;
    },
    set: function set(t) {
      this._curve = t;
    }
    /**
     * Start the buffer
     * @param  time When the player should start.
     * @param  offset The offset from the beginning of the sample to start at.
     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
     * @param  gain  The gain to play the buffer back at.
     */

  }, {
    key: "start",
    value: function start(time, offset, duration) {
      var gain = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(this.buffer.loaded, "buffer is either not set or not loaded");
      var computedTime = this.toSeconds(time); // apply the gain envelope

      this._startGain(computedTime, gain); // if it's a loop the default offset is the loopstart point


      if (this.loop) {
        offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, this.loopStart);
      } else {
        // otherwise the default offset is 0
        offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, 0);
      } // make sure the offset is not less than 0


      var computedOffset = Math.max(this.toSeconds(offset), 0); // start the buffer source

      if (this.loop) {
        // modify the offset if it's greater than the loop time
        var loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
        var loopStart = this.toSeconds(this.loopStart);
        var loopDuration = loopEnd - loopStart; // move the offset back

        if (Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_8__["GTE"])(computedOffset, loopEnd)) {
          computedOffset = (computedOffset - loopStart) % loopDuration + loopStart;
        } // when the offset is very close to the duration, set it to 0


        if (Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_8__["EQ"])(computedOffset, this.buffer.duration)) {
          computedOffset = 0;
        }
      } // this.buffer.loaded would have return false if the AudioBuffer was undefined


      this._source.buffer = this.buffer.get();
      this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;

      if (Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_8__["LT"])(computedOffset, this.buffer.duration)) {
        this._sourceStarted = true;

        this._source.start(computedTime, computedOffset);
      } // if a duration is given, schedule a stop


      if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__["isDefined"])(duration)) {
        var computedDur = this.toSeconds(duration); // make sure it's never negative

        computedDur = Math.max(computedDur, 0);
        this.stop(computedTime + computedDur);
      }

      return this;
    }
  }, {
    key: "_stopSource",
    value: function _stopSource(time) {
      if (!this._sourceStopped && this._sourceStarted) {
        this._sourceStopped = true;

        this._source.stop(this.toSeconds(time));

        this._onended();
      }
    }
    /**
     * If loop is true, the loop will start at this position.
     */

  }, {
    key: "loopStart",
    get: function get() {
      return this._source.loopStart;
    },
    set: function set(loopStart) {
      this._source.loopStart = this.toSeconds(loopStart);
    }
    /**
     * If loop is true, the loop will end at this position.
     */

  }, {
    key: "loopEnd",
    get: function get() {
      return this._source.loopEnd;
    },
    set: function set(loopEnd) {
      this._source.loopEnd = this.toSeconds(loopEnd);
    }
    /**
     * The audio buffer belonging to the player.
     */

  }, {
    key: "buffer",
    get: function get() {
      return this._buffer;
    },
    set: function set(buffer) {
      this._buffer.set(buffer);
    }
    /**
     * If the buffer should loop once it's over.
     */

  }, {
    key: "loop",
    get: function get() {
      return this._source.loop;
    },
    set: function set(loop) {
      this._source.loop = loop;

      if (this._sourceStarted) {
        this.cancelStop();
      }
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneBufferSource.prototype), "dispose", this).call(this);

      this._source.onended = null;

      this._source.disconnect();

      this._buffer.dispose();

      this.playbackRate.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_OneShotSource__WEBPACK_IMPORTED_MODULE_7__["OneShotSource"].getDefaults(), {
        url: new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"](),
        loop: false,
        loopEnd: 0,
        loopStart: 0,
        onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
        onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
        playbackRate: 1
      });
    }
  }]);

  return ToneBufferSource;
}(_OneShotSource__WEBPACK_IMPORTED_MODULE_7__["OneShotSource"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/tone/build/esm/source/index.js ***!
  \*****************************************************/
/*! exports provided: Noise, UserMedia, Oscillator, AMOscillator, FMOscillator, PulseOscillator, FatOscillator, PWMOscillator, OmniOscillator, ToneOscillatorNode, LFO, ToneBufferSource, Player, Players, GrainPlayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Noise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Noise */ "./node_modules/tone/build/esm/source/Noise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Noise", function() { return _Noise__WEBPACK_IMPORTED_MODULE_0__["Noise"]; });

/* harmony import */ var _UserMedia__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UserMedia */ "./node_modules/tone/build/esm/source/UserMedia.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserMedia", function() { return _UserMedia__WEBPACK_IMPORTED_MODULE_1__["UserMedia"]; });

/* harmony import */ var _oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./oscillator/Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Oscillator", function() { return _oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_2__["Oscillator"]; });

/* harmony import */ var _oscillator_AMOscillator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./oscillator/AMOscillator */ "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AMOscillator", function() { return _oscillator_AMOscillator__WEBPACK_IMPORTED_MODULE_3__["AMOscillator"]; });

/* harmony import */ var _oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./oscillator/FMOscillator */ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FMOscillator", function() { return _oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_4__["FMOscillator"]; });

/* harmony import */ var _oscillator_PulseOscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./oscillator/PulseOscillator */ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PulseOscillator", function() { return _oscillator_PulseOscillator__WEBPACK_IMPORTED_MODULE_5__["PulseOscillator"]; });

/* harmony import */ var _oscillator_FatOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./oscillator/FatOscillator */ "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FatOscillator", function() { return _oscillator_FatOscillator__WEBPACK_IMPORTED_MODULE_6__["FatOscillator"]; });

/* harmony import */ var _oscillator_PWMOscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./oscillator/PWMOscillator */ "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PWMOscillator", function() { return _oscillator_PWMOscillator__WEBPACK_IMPORTED_MODULE_7__["PWMOscillator"]; });

/* harmony import */ var _oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./oscillator/OmniOscillator */ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OmniOscillator", function() { return _oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_8__["OmniOscillator"]; });

/* harmony import */ var _oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./oscillator/ToneOscillatorNode */ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function() { return _oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_9__["ToneOscillatorNode"]; });

/* harmony import */ var _oscillator_LFO__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./oscillator/LFO */ "./node_modules/tone/build/esm/source/oscillator/LFO.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LFO", function() { return _oscillator_LFO__WEBPACK_IMPORTED_MODULE_10__["LFO"]; });

/* harmony import */ var _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./buffer/ToneBufferSource */ "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function() { return _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_11__["ToneBufferSource"]; });

/* harmony import */ var _buffer_Player__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./buffer/Player */ "./node_modules/tone/build/esm/source/buffer/Player.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Player", function() { return _buffer_Player__WEBPACK_IMPORTED_MODULE_12__["Player"]; });

/* harmony import */ var _buffer_Players__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./buffer/Players */ "./node_modules/tone/build/esm/source/buffer/Players.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Players", function() { return _buffer_Players__WEBPACK_IMPORTED_MODULE_13__["Players"]; });

/* harmony import */ var _buffer_GrainPlayer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./buffer/GrainPlayer */ "./node_modules/tone/build/esm/source/buffer/GrainPlayer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GrainPlayer", function() { return _buffer_GrainPlayer__WEBPACK_IMPORTED_MODULE_14__["GrainPlayer"]; });

















/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/AMOscillator.js ***!
  \***********************************************************************/
/*! exports provided: AMOscillator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AMOscillator", function() { return AMOscillator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










/**
 * An amplitude modulated oscillator node. It is implemented with
 * two oscillators, one which modulators the other's amplitude
 * through a gain node.
 * ```
 *    +-------------+       +----------+
 *    | Carrier Osc +>------> GainNode |
 *    +-------------+       |          +--->Output
 *                      +---> gain     |
 * +---------------+    |   +----------+
 * | Modulator Osc +>---+
 * +---------------+
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const amOsc = new Tone.AMOscillator(30, "sine", "square").toDestination().start();
 * }, 0.2, 1);
 * @category Source
 */

var AMOscillator = /*#__PURE__*/function (_Source) {
  _inherits(AMOscillator, _Source);

  var _super = _createSuper(AMOscillator);

  function AMOscillator() {
    var _this;

    _classCallCheck(this, AMOscillator);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
    _this.name = "AMOscillator";
    /**
     * convert the -1,1 output to 0,1
     */

    _this._modulationScale = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__["AudioToGain"]({
      context: _this.context
    });
    /**
     * the node where the modulation happens
     */

    _this._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context
    });
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
    _this._carrier = new _Oscillator__WEBPACK_IMPORTED_MODULE_8__["Oscillator"]({
      context: _this.context,
      detune: options.detune,
      frequency: options.frequency,
      onstop: function onstop() {
        return _this.onstop(_assertThisInitialized(_this));
      },
      phase: options.phase,
      type: options.type
    });
    _this.frequency = _this._carrier.frequency, _this.detune = _this._carrier.detune;
    _this._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_8__["Oscillator"]({
      context: _this.context,
      phase: options.phase,
      type: options.modulationType
    });
    _this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__["Multiply"]({
      context: _this.context,
      units: "positive",
      value: options.harmonicity
    }); // connections

    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);

    _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);

    _this._carrier.chain(_this._modulationNode, _this.output);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["frequency", "detune", "harmonicity"]);
    return _this;
  }

  _createClass(AMOscillator, [{
    key: "_start",
    value:
    /**
     * start the oscillator
     */
    function _start(time) {
      this._modulator.start(time);

      this._carrier.start(time);
    }
    /**
     * stop the oscillator
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      this._modulator.stop(time);

      this._carrier.stop(time);
    }
  }, {
    key: "_restart",
    value: function _restart(time) {
      this._modulator.restart(time);

      this._carrier.restart(time);
    }
    /**
     * The type of the carrier oscillator
     */

  }, {
    key: "type",
    get: function get() {
      return this._carrier.type;
    },
    set: function set(type) {
      this._carrier.type = type;
    }
  }, {
    key: "baseType",
    get: function get() {
      return this._carrier.baseType;
    },
    set: function set(baseType) {
      this._carrier.baseType = baseType;
    }
  }, {
    key: "partialCount",
    get: function get() {
      return this._carrier.partialCount;
    },
    set: function set(partialCount) {
      this._carrier.partialCount = partialCount;
    }
    /**
     * The type of the modulator oscillator
     */

  }, {
    key: "modulationType",
    get: function get() {
      return this._modulator.type;
    },
    set: function set(type) {
      this._modulator.type = type;
    }
  }, {
    key: "phase",
    get: function get() {
      return this._carrier.phase;
    },
    set: function set(phase) {
      this._carrier.phase = phase;
      this._modulator.phase = phase;
    }
  }, {
    key: "partials",
    get: function get() {
      return this._carrier.partials;
    },
    set: function set(partials) {
      this._carrier.partials = partials;
    }
  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__["generateWaveform"])(this, length));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(AMOscillator.prototype), "dispose", this).call(this);

      this.frequency.dispose();
      this.detune.dispose();
      this.harmonicity.dispose();

      this._carrier.dispose();

      this._modulator.dispose();

      this._modulationNode.dispose();

      this._modulationScale.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_8__["Oscillator"].getDefaults(), {
        harmonicity: 1,
        modulationType: "square"
      });
    }
  }]);

  return AMOscillator;
}(_Source__WEBPACK_IMPORTED_MODULE_7__["Source"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/FMOscillator.js ***!
  \***********************************************************************/
/*! exports provided: FMOscillator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FMOscillator", function() { return FMOscillator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










/**
 * FMOscillator implements a frequency modulation synthesis
 * ```
 *                                              +-------------+
 * +---------------+        +-------------+     | Carrier Osc |
 * | Modulator Osc +>-------> GainNode    |     |             +--->Output
 * +---------------+        |             +>----> frequency   |
 *                       +--> gain        |     +-------------+
 *                       |  +-------------+
 * +-----------------+   |
 * | modulationIndex +>--+
 * +-----------------+
 * ```
 *
 * @example
 * return Tone.Offline(() => {
 * 	const fmOsc = new Tone.FMOscillator({
 * 		frequency: 200,
 * 		type: "square",
 * 		modulationType: "triangle",
 * 		harmonicity: 0.2,
 * 		modulationIndex: 3
 * 	}).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */

var FMOscillator = /*#__PURE__*/function (_Source) {
  _inherits(FMOscillator, _Source);

  var _super = _createSuper(FMOscillator);

  function FMOscillator() {
    var _this;

    _classCallCheck(this, FMOscillator);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
    _this.name = "FMOscillator";
    /**
     * the node where the modulation happens
     */

    _this._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context,
      gain: 0
    });
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
    _this._carrier = new _Oscillator__WEBPACK_IMPORTED_MODULE_8__["Oscillator"]({
      context: _this.context,
      detune: options.detune,
      frequency: 0,
      onstop: function onstop() {
        return _this.onstop(_assertThisInitialized(_this));
      },
      phase: options.phase,
      type: options.type
    });
    _this.detune = _this._carrier.detune;
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_6__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.frequency
    });
    _this._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_8__["Oscillator"]({
      context: _this.context,
      phase: options.phase,
      type: options.modulationType
    });
    _this.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_5__["Multiply"]({
      context: _this.context,
      units: "positive",
      value: options.harmonicity
    });
    _this.modulationIndex = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_5__["Multiply"]({
      context: _this.context,
      units: "positive",
      value: options.modulationIndex
    }); // connections

    _this.frequency.connect(_this._carrier.frequency);

    _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);

    _this.frequency.chain(_this.modulationIndex, _this._modulationNode);

    _this._modulator.connect(_this._modulationNode.gain);

    _this._modulationNode.connect(_this._carrier.frequency);

    _this._carrier.connect(_this.output);

    _this.detune.connect(_this._modulator.detune);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["modulationIndex", "frequency", "detune", "harmonicity"]);
    return _this;
  }

  _createClass(FMOscillator, [{
    key: "_start",
    value:
    /**
     * start the oscillator
     */
    function _start(time) {
      this._modulator.start(time);

      this._carrier.start(time);
    }
    /**
     * stop the oscillator
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      this._modulator.stop(time);

      this._carrier.stop(time);
    }
  }, {
    key: "_restart",
    value: function _restart(time) {
      this._modulator.restart(time);

      this._carrier.restart(time);

      return this;
    }
  }, {
    key: "type",
    get: function get() {
      return this._carrier.type;
    },
    set: function set(type) {
      this._carrier.type = type;
    }
  }, {
    key: "baseType",
    get: function get() {
      return this._carrier.baseType;
    },
    set: function set(baseType) {
      this._carrier.baseType = baseType;
    }
  }, {
    key: "partialCount",
    get: function get() {
      return this._carrier.partialCount;
    },
    set: function set(partialCount) {
      this._carrier.partialCount = partialCount;
    }
    /**
     * The type of the modulator oscillator
     */

  }, {
    key: "modulationType",
    get: function get() {
      return this._modulator.type;
    },
    set: function set(type) {
      this._modulator.type = type;
    }
  }, {
    key: "phase",
    get: function get() {
      return this._carrier.phase;
    },
    set: function set(phase) {
      this._carrier.phase = phase;
      this._modulator.phase = phase;
    }
  }, {
    key: "partials",
    get: function get() {
      return this._carrier.partials;
    },
    set: function set(partials) {
      this._carrier.partials = partials;
    }
  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__["generateWaveform"])(this, length));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FMOscillator.prototype), "dispose", this).call(this);

      this.frequency.dispose();
      this.harmonicity.dispose();

      this._carrier.dispose();

      this._modulator.dispose();

      this._modulationNode.dispose();

      this.modulationIndex.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_8__["Oscillator"].getDefaults(), {
        harmonicity: 1,
        modulationIndex: 2,
        modulationType: "square"
      });
    }
  }]);

  return FMOscillator;
}(_Source__WEBPACK_IMPORTED_MODULE_7__["Source"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/FatOscillator.js ***!
  \************************************************************************/
/*! exports provided: FatOscillator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FatOscillator", function() { return FatOscillator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * FatOscillator is an array of oscillators with detune spread between the oscillators
 * @example
 * const fatOsc = new Tone.FatOscillator("Ab3", "sawtooth", 40).toDestination().start();
 * @category Source
 */

var FatOscillator = /*#__PURE__*/function (_Source) {
  _inherits(FatOscillator, _Source);

  var _super = _createSuper(FatOscillator);

  function FatOscillator() {
    var _this;

    _classCallCheck(this, FatOscillator);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]));
    _this.name = "FatOscillator";
    /**
     * The array of oscillators
     */

    _this._oscillators = [];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]);
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.frequency
    });
    _this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
      context: _this.context,
      units: "cents",
      value: options.detune
    });
    _this._spread = options.spread;
    _this._type = options.type;
    _this._phase = options.phase;
    _this._partials = options.partials;
    _this._partialCount = options.partialCount; // set the count initially

    _this.count = options.count;
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["frequency", "detune"]);
    return _this;
  }

  _createClass(FatOscillator, [{
    key: "_start",
    value:
    /**
     * start the oscillator
     */
    function _start(time) {
      time = this.toSeconds(time);

      this._forEach(function (osc) {
        return osc.start(time);
      });
    }
    /**
     * stop the oscillator
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      time = this.toSeconds(time);

      this._forEach(function (osc) {
        return osc.stop(time);
      });
    }
  }, {
    key: "_restart",
    value: function _restart(time) {
      this._forEach(function (osc) {
        return osc.restart(time);
      });
    }
    /**
     * Iterate over all of the oscillators
     */

  }, {
    key: "_forEach",
    value: function _forEach(iterator) {
      for (var i = 0; i < this._oscillators.length; i++) {
        iterator(this._oscillators[i], i);
      }
    }
    /**
     * The type of the oscillator
     */

  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(type) {
      this._type = type;

      this._forEach(function (osc) {
        return osc.type = type;
      });
    }
    /**
     * The detune spread between the oscillators. If "count" is
     * set to 3 oscillators and the "spread" is set to 40,
     * the three oscillators would be detuned like this: [-20, 0, 20]
     * for a total detune spread of 40 cents.
     * @example
     * const fatOsc = new Tone.FatOscillator().toDestination().start();
     * fatOsc.spread = 70;
     */

  }, {
    key: "spread",
    get: function get() {
      return this._spread;
    },
    set: function set(spread) {
      this._spread = spread;

      if (this._oscillators.length > 1) {
        var start = -spread / 2;
        var step = spread / (this._oscillators.length - 1);

        this._forEach(function (osc, i) {
          return osc.detune.value = start + step * i;
        });
      }
    }
    /**
     * The number of detuned oscillators. Must be an integer greater than 1.
     * @example
     * const fatOsc = new Tone.FatOscillator("C#3", "sawtooth").toDestination().start();
     * // use 4 sawtooth oscillators
     * fatOsc.count = 4;
     */

  }, {
    key: "count",
    get: function get() {
      return this._oscillators.length;
    },
    set: function set(count) {
      var _this2 = this;

      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertRange"])(count, 1);

      if (this._oscillators.length !== count) {
        // dispose the previous oscillators
        this._forEach(function (osc) {
          return osc.dispose();
        });

        this._oscillators = [];

        for (var i = 0; i < count; i++) {
          var osc = new _Oscillator__WEBPACK_IMPORTED_MODULE_6__["Oscillator"]({
            context: this.context,
            volume: -6 - count * 1.1,
            type: this._type,
            phase: this._phase + i / count * 360,
            partialCount: this._partialCount,
            onstop: i === 0 ? function () {
              return _this2.onstop(_this2);
            } : _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"]
          });

          if (this.type === "custom") {
            osc.partials = this._partials;
          }

          this.frequency.connect(osc.frequency);
          this.detune.connect(osc.detune);
          osc.detune.overridden = false;
          osc.connect(this.output);
          this._oscillators[i] = osc;
        } // set the spread


        this.spread = this._spread;

        if (this.state === "started") {
          this._forEach(function (osc) {
            return osc.start();
          });
        }
      }
    }
  }, {
    key: "phase",
    get: function get() {
      return this._phase;
    },
    set: function set(phase) {
      var _this3 = this;

      this._phase = phase;

      this._forEach(function (osc, i) {
        return osc.phase = _this3._phase + i / _this3.count * 360;
      });
    }
  }, {
    key: "baseType",
    get: function get() {
      return this._oscillators[0].baseType;
    },
    set: function set(baseType) {
      this._forEach(function (osc) {
        return osc.baseType = baseType;
      });

      this._type = this._oscillators[0].type;
    }
  }, {
    key: "partials",
    get: function get() {
      return this._oscillators[0].partials;
    },
    set: function set(partials) {
      this._partials = partials;
      this._partialCount = this._partials.length;

      if (partials.length) {
        this._type = "custom";

        this._forEach(function (osc) {
          return osc.partials = partials;
        });
      }
    }
  }, {
    key: "partialCount",
    get: function get() {
      return this._oscillators[0].partialCount;
    },
    set: function set(partialCount) {
      this._partialCount = partialCount;

      this._forEach(function (osc) {
        return osc.partialCount = partialCount;
      });

      this._type = this._oscillators[0].type;
    }
  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__["generateWaveform"])(this, length));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(FatOscillator.prototype), "dispose", this).call(this);

      this.frequency.dispose();
      this.detune.dispose();

      this._forEach(function (osc) {
        return osc.dispose();
      });

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_6__["Oscillator"].getDefaults(), {
        count: 3,
        spread: 20,
        type: "sawtooth"
      });
    }
  }]);

  return FatOscillator;
}(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/LFO.js":
/*!**************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/LFO.js ***!
  \**************************************************************/
/*! exports provided: LFO */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LFO", function() { return LFO; });
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/AudioToGain */ "./node_modules/tone/build/esm/signal/AudioToGain.js");
/* harmony import */ var _signal_Scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../signal/Scale */ "./node_modules/tone/build/esm/signal/Scale.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_Zero__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../signal/Zero */ "./node_modules/tone/build/esm/signal/Zero.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }











/**
 * LFO stands for low frequency oscillator. LFO produces an output signal
 * which can be attached to an AudioParam or Tone.Signal
 * in order to modulate that parameter with an oscillator. The LFO can
 * also be synced to the transport to start/stop and change when the tempo changes.
 * @example
 * return Tone.Offline(() => {
 * 	const lfo = new Tone.LFO("4n", 400, 4000).start().toDestination();
 * }, 0.5, 1);
 * @category Source
 */

var LFO = /*#__PURE__*/function (_ToneAudioNode) {
  _inherits(LFO, _ToneAudioNode);

  var _super = _createSuper(LFO);

  function LFO() {
    var _this;

    _classCallCheck(this, LFO);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(LFO.getDefaults(), arguments, ["frequency", "min", "max"]));
    _this.name = "LFO";
    /**
     * The value that the LFO outputs when it's stopped
     */

    _this._stoppedValue = 0;
    /**
     * A private placeholder for the units
     */

    _this._units = "number";
    /**
     * If the input value is converted using the [[units]]
     */

    _this.convert = true;
    /**
     * Private methods borrowed from Param
     */
    // @ts-ignore

    _this._fromType = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._fromType; // @ts-ignore

    _this._toType = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._toType; // @ts-ignore

    _this._is = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._is; // @ts-ignore

    _this._clampValue = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._clampValue;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(LFO.getDefaults(), arguments, ["frequency", "min", "max"]);
    _this._oscillator = new _Oscillator__WEBPACK_IMPORTED_MODULE_9__["Oscillator"](options);
    _this.frequency = _this._oscillator.frequency;
    _this._amplitudeGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
      context: _this.context,
      gain: options.amplitude,
      units: "normalRange"
    });
    _this.amplitude = _this._amplitudeGain.gain;
    _this._stoppedSignal = new _signal_Signal__WEBPACK_IMPORTED_MODULE_7__["Signal"]({
      context: _this.context,
      units: "audioRange",
      value: 0
    });
    _this._zeros = new _signal_Zero__WEBPACK_IMPORTED_MODULE_8__["Zero"]({
      context: _this.context
    });
    _this._a2g = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__["AudioToGain"]({
      context: _this.context
    });
    _this._scaler = _this.output = new _signal_Scale__WEBPACK_IMPORTED_MODULE_6__["Scale"]({
      context: _this.context,
      max: options.max,
      min: options.min
    });
    _this.units = options.units;
    _this.min = options.min;
    _this.max = options.max; // connect it up

    _this._oscillator.chain(_this._amplitudeGain, _this._a2g, _this._scaler);

    _this._zeros.connect(_this._a2g);

    _this._stoppedSignal.connect(_this._a2g);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["amplitude", "frequency"]);
    _this.phase = options.phase;
    return _this;
  }

  _createClass(LFO, [{
    key: "start",
    value:
    /**
     * Start the LFO.
     * @param time The time the LFO will start
     */
    function start(time) {
      time = this.toSeconds(time);

      this._stoppedSignal.setValueAtTime(0, time);

      this._oscillator.start(time);

      return this;
    }
    /**
     * Stop the LFO.
     * @param  time The time the LFO will stop
     */

  }, {
    key: "stop",
    value: function stop(time) {
      time = this.toSeconds(time);

      this._stoppedSignal.setValueAtTime(this._stoppedValue, time);

      this._oscillator.stop(time);

      return this;
    }
    /**
     * Sync the start/stop/pause to the transport
     * and the frequency to the bpm of the transport
     * @example
     * const lfo = new Tone.LFO("8n");
     * lfo.sync().start(0);
     * // the rate of the LFO will always be an eighth note, even as the tempo changes
     */

  }, {
    key: "sync",
    value: function sync() {
      this._oscillator.sync();

      this._oscillator.syncFrequency();

      return this;
    }
    /**
     * unsync the LFO from transport control
     */

  }, {
    key: "unsync",
    value: function unsync() {
      this._oscillator.unsync();

      this._oscillator.unsyncFrequency();

      return this;
    }
    /**
     * After the oscillator waveform is updated, reset the `_stoppedSignal` value to match the updated waveform
     */

  }, {
    key: "_setStoppedValue",
    value: function _setStoppedValue() {
      this._stoppedValue = this._oscillator.getInitialValue();
      this._stoppedSignal.value = this._stoppedValue;
    }
    /**
     * The minimum output of the LFO.
     */

  }, {
    key: "min",
    get: function get() {
      return this._toType(this._scaler.min);
    },
    set: function set(min) {
      min = this._fromType(min);
      this._scaler.min = min;
    }
    /**
     * The maximum output of the LFO.
     */

  }, {
    key: "max",
    get: function get() {
      return this._toType(this._scaler.max);
    },
    set: function set(max) {
      max = this._fromType(max);
      this._scaler.max = max;
    }
    /**
     * The type of the oscillator: See [[Oscillator.type]]
     */

  }, {
    key: "type",
    get: function get() {
      return this._oscillator.type;
    },
    set: function set(type) {
      this._oscillator.type = type;

      this._setStoppedValue();
    }
    /**
     * The oscillator's partials array: See [[Oscillator.partials]]
     */

  }, {
    key: "partials",
    get: function get() {
      return this._oscillator.partials;
    },
    set: function set(partials) {
      this._oscillator.partials = partials;

      this._setStoppedValue();
    }
    /**
     * The phase of the LFO.
     */

  }, {
    key: "phase",
    get: function get() {
      return this._oscillator.phase;
    },
    set: function set(phase) {
      this._oscillator.phase = phase;

      this._setStoppedValue();
    }
    /**
     * The output units of the LFO.
     */

  }, {
    key: "units",
    get: function get() {
      return this._units;
    },
    set: function set(val) {
      var currentMin = this.min;
      var currentMax = this.max; // convert the min and the max

      this._units = val;
      this.min = currentMin;
      this.max = currentMax;
    }
    /**
     * Returns the playback state of the source, either "started" or "stopped".
     */

  }, {
    key: "state",
    get: function get() {
      return this._oscillator.state;
    }
    /**
     * @param node the destination to connect to
     * @param outputNum the optional output number
     * @param inputNum the input number
     */

  }, {
    key: "connect",
    value: function connect(node, outputNum, inputNum) {
      if (node instanceof _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"] || node instanceof _signal_Signal__WEBPACK_IMPORTED_MODULE_7__["Signal"]) {
        this.convert = node.convert;
        this.units = node.units;
      }

      Object(_signal_Signal__WEBPACK_IMPORTED_MODULE_7__["connectSignal"])(this, node, outputNum, inputNum);
      return this;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(LFO.prototype), "dispose", this).call(this);

      this._oscillator.dispose();

      this._stoppedSignal.dispose();

      this._zeros.dispose();

      this._scaler.dispose();

      this._a2g.dispose();

      this._amplitudeGain.dispose();

      this.amplitude.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_9__["Oscillator"].getDefaults(), {
        amplitude: 1,
        frequency: "4n",
        max: 1,
        min: 0,
        type: "sine",
        units: "number"
      });
    }
  }]);

  return LFO;
}(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js ***!
  \*************************************************************************/
/*! exports provided: OmniOscillator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OmniOscillator", function() { return OmniOscillator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _AMOscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AMOscillator */ "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js");
/* harmony import */ var _FatOscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./FatOscillator */ "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js");
/* harmony import */ var _FMOscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./FMOscillator */ "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _PulseOscillator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./PulseOscillator */ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
/* harmony import */ var _PWMOscillator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./PWMOscillator */ "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }














var OmniOscillatorSourceMap = {
  am: _AMOscillator__WEBPACK_IMPORTED_MODULE_7__["AMOscillator"],
  fat: _FatOscillator__WEBPACK_IMPORTED_MODULE_8__["FatOscillator"],
  fm: _FMOscillator__WEBPACK_IMPORTED_MODULE_9__["FMOscillator"],
  oscillator: _Oscillator__WEBPACK_IMPORTED_MODULE_10__["Oscillator"],
  pulse: _PulseOscillator__WEBPACK_IMPORTED_MODULE_12__["PulseOscillator"],
  pwm: _PWMOscillator__WEBPACK_IMPORTED_MODULE_13__["PWMOscillator"]
};
/**
 * OmniOscillator aggregates all of the oscillator types into one.
 * @example
 * return Tone.Offline(() => {
 * 	const omniOsc = new Tone.OmniOscillator("C#4", "pwm").toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */

var OmniOscillator = /*#__PURE__*/function (_Source) {
  _inherits(OmniOscillator, _Source);

  var _super = _createSuper(OmniOscillator);

  function OmniOscillator() {
    var _this;

    _classCallCheck(this, OmniOscillator);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]));
    _this.name = "OmniOscillator";
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]);
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.frequency
    });
    _this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "cents",
      value: options.detune
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["frequency", "detune"]); // set the options

    _this.set(options);

    return _this;
  }

  _createClass(OmniOscillator, [{
    key: "_start",
    value:
    /**
     * start the oscillator
     */
    function _start(time) {
      this._oscillator.start(time);
    }
    /**
     * start the oscillator
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      this._oscillator.stop(time);
    }
  }, {
    key: "_restart",
    value: function _restart(time) {
      this._oscillator.restart(time);

      return this;
    }
    /**
     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or
     * prefix the basic types with "fm", "am", or "fat" to use the FMOscillator, AMOscillator or FatOscillator
     * types. The oscillator could also be set to "pwm" or "pulse". All of the parameters of the
     * oscillator's class are accessible when the oscillator is set to that type, but throws an error
     * when it's not.
     * @example
     * const omniOsc = new Tone.OmniOscillator().toDestination().start();
     * omniOsc.type = "pwm";
     * // modulationFrequency is parameter which is available
     * // only when the type is "pwm".
     * omniOsc.modulationFrequency.value = 0.5;
     */

  }, {
    key: "type",
    get: function get() {
      var _this2 = this;

      var prefix = "";

      if (["am", "fm", "fat"].some(function (p) {
        return _this2._sourceType === p;
      })) {
        prefix = this._sourceType;
      }

      return prefix + this._oscillator.type;
    },
    set: function set(type) {
      if (type.substr(0, 2) === "fm") {
        this._createNewOscillator("fm");

        this._oscillator = this._oscillator;
        this._oscillator.type = type.substr(2);
      } else if (type.substr(0, 2) === "am") {
        this._createNewOscillator("am");

        this._oscillator = this._oscillator;
        this._oscillator.type = type.substr(2);
      } else if (type.substr(0, 3) === "fat") {
        this._createNewOscillator("fat");

        this._oscillator = this._oscillator;
        this._oscillator.type = type.substr(3);
      } else if (type === "pwm") {
        this._createNewOscillator("pwm");

        this._oscillator = this._oscillator;
      } else if (type === "pulse") {
        this._createNewOscillator("pulse");
      } else {
        this._createNewOscillator("oscillator");

        this._oscillator = this._oscillator;
        this._oscillator.type = type;
      }
    }
    /**
     * The value is an empty array when the type is not "custom".
     * This is not available on "pwm" and "pulse" oscillator types.
     * See [[Oscillator.partials]]
     */

  }, {
    key: "partials",
    get: function get() {
      return this._oscillator.partials;
    },
    set: function set(partials) {
      if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
        this._oscillator.partials = partials;
      }
    }
  }, {
    key: "partialCount",
    get: function get() {
      return this._oscillator.partialCount;
    },
    set: function set(partialCount) {
      if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
        this._oscillator.partialCount = partialCount;
      }
    }
  }, {
    key: "set",
    value: function set(props) {
      // make sure the type is set first
      if (Reflect.has(props, "type") && props.type) {
        this.type = props.type;
      } // then set the rest


      _get(_getPrototypeOf(OmniOscillator.prototype), "set", this).call(this, props);

      return this;
    }
    /**
     * connect the oscillator to the frequency and detune signals
     */

  }, {
    key: "_createNewOscillator",
    value: function _createNewOscillator(oscType) {
      var _this3 = this;

      if (oscType !== this._sourceType) {
        this._sourceType = oscType;
        var OscConstructor = OmniOscillatorSourceMap[oscType]; // short delay to avoid clicks on the change

        var now = this.now();

        if (this._oscillator) {
          var oldOsc = this._oscillator;
          oldOsc.stop(now); // dispose the old one

          this.context.setTimeout(function () {
            return oldOsc.dispose();
          }, this.blockTime);
        }

        this._oscillator = new OscConstructor({
          context: this.context
        });
        this.frequency.connect(this._oscillator.frequency);
        this.detune.connect(this._oscillator.detune);

        this._oscillator.connect(this.output);

        this._oscillator.onstop = function () {
          return _this3.onstop(_this3);
        };

        if (this.state === "started") {
          this._oscillator.start(now);
        }
      }
    }
  }, {
    key: "phase",
    get: function get() {
      return this._oscillator.phase;
    },
    set: function set(phase) {
      this._oscillator.phase = phase;
    }
    /**
     * The source type of the oscillator.
     * @example
     * const omniOsc = new Tone.OmniOscillator(440, "fmsquare");
     * console.log(omniOsc.sourceType); // 'fm'
     */

  }, {
    key: "sourceType",
    get: function get() {
      return this._sourceType;
    },
    set: function set(sType) {
      // the basetype defaults to sine
      var baseType = "sine";

      if (this._oscillator.type !== "pwm" && this._oscillator.type !== "pulse") {
        baseType = this._oscillator.type;
      } // set the type


      if (sType === "fm") {
        this.type = "fm" + baseType;
      } else if (sType === "am") {
        this.type = "am" + baseType;
      } else if (sType === "fat") {
        this.type = "fat" + baseType;
      } else if (sType === "oscillator") {
        this.type = baseType;
      } else if (sType === "pulse") {
        this.type = "pulse";
      } else if (sType === "pwm") {
        this.type = "pwm";
      }
    }
  }, {
    key: "_getOscType",
    value: function _getOscType(osc, sourceType) {
      return osc instanceof OmniOscillatorSourceMap[sourceType];
    }
    /**
     * The base type of the oscillator. See [[Oscillator.baseType]]
     * @example
     * const omniOsc = new Tone.OmniOscillator(440, "fmsquare4");
     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);
     */

  }, {
    key: "baseType",
    get: function get() {
      return this._oscillator.baseType;
    },
    set: function set(baseType) {
      if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm") && baseType !== "pulse" && baseType !== "pwm") {
        this._oscillator.baseType = baseType;
      }
    }
    /**
     * The width of the oscillator when sourceType === "pulse".
     * See [[PWMOscillator.width]]
     */

  }, {
    key: "width",
    get: function get() {
      if (this._getOscType(this._oscillator, "pulse")) {
        return this._oscillator.width;
      } else {
        return undefined;
      }
    }
    /**
     * The number of detuned oscillators when sourceType === "fat".
     * See [[FatOscillator.count]]
     */

  }, {
    key: "count",
    get: function get() {
      if (this._getOscType(this._oscillator, "fat")) {
        return this._oscillator.count;
      } else {
        return undefined;
      }
    },
    set: function set(count) {
      if (this._getOscType(this._oscillator, "fat") && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isNumber"])(count)) {
        this._oscillator.count = count;
      }
    }
    /**
     * The detune spread between the oscillators when sourceType === "fat".
     * See [[FatOscillator.count]]
     */

  }, {
    key: "spread",
    get: function get() {
      if (this._getOscType(this._oscillator, "fat")) {
        return this._oscillator.spread;
      } else {
        return undefined;
      }
    },
    set: function set(spread) {
      if (this._getOscType(this._oscillator, "fat") && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isNumber"])(spread)) {
        this._oscillator.spread = spread;
      }
    }
    /**
     * The type of the modulator oscillator. Only if the oscillator is set to "am" or "fm" types.
     * See [[AMOscillator]] or [[FMOscillator]]
     */

  }, {
    key: "modulationType",
    get: function get() {
      if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
        return this._oscillator.modulationType;
      } else {
        return undefined;
      }
    },
    set: function set(mType) {
      if ((this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isString"])(mType)) {
        this._oscillator.modulationType = mType;
      }
    }
    /**
     * The modulation index when the sourceType === "fm"
     * See [[FMOscillator]].
     */

  }, {
    key: "modulationIndex",
    get: function get() {
      if (this._getOscType(this._oscillator, "fm")) {
        return this._oscillator.modulationIndex;
      } else {
        return undefined;
      }
    }
    /**
     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.
     * See [[AMOscillator]] or [[FMOscillator]]
     */

  }, {
    key: "harmonicity",
    get: function get() {
      if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
        return this._oscillator.harmonicity;
      } else {
        return undefined;
      }
    }
    /**
     * The modulationFrequency Signal of the oscillator when sourceType === "pwm"
     * see [[PWMOscillator]]
     * @min 0.1
     * @max 5
     */

  }, {
    key: "modulationFrequency",
    get: function get() {
      if (this._getOscType(this._oscillator, "pwm")) {
        return this._oscillator.modulationFrequency;
      } else {
        return undefined;
      }
    }
  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_11__["generateWaveform"])(this, length));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(OmniOscillator.prototype), "dispose", this).call(this);

      this.detune.dispose();
      this.frequency.dispose();

      this._oscillator.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_10__["Oscillator"].getDefaults(), _FMOscillator__WEBPACK_IMPORTED_MODULE_9__["FMOscillator"].getDefaults(), _AMOscillator__WEBPACK_IMPORTED_MODULE_7__["AMOscillator"].getDefaults(), _FatOscillator__WEBPACK_IMPORTED_MODULE_8__["FatOscillator"].getDefaults(), _PulseOscillator__WEBPACK_IMPORTED_MODULE_12__["PulseOscillator"].getDefaults(), _PWMOscillator__WEBPACK_IMPORTED_MODULE_13__["PWMOscillator"].getDefaults());
    }
  }]);

  return OmniOscillator;
}(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/Oscillator.js ***!
  \*********************************************************************/
/*! exports provided: Oscillator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Oscillator", function() { return Oscillator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/TypeCheck */ "./node_modules/tone/build/esm/core/util/TypeCheck.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ToneOscillatorNode */ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
/* harmony import */ var _core_util_Debug__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/util/Debug */ "./node_modules/tone/build/esm/core/util/Debug.js");
/* harmony import */ var _core_util_Math__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/util/Math */ "./node_modules/tone/build/esm/core/util/Math.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }











/**
 * Oscillator supports a number of features including
 * phase rotation, multiple oscillator types (see Oscillator.type),
 * and Transport syncing (see Oscillator.syncFrequency).
 *
 * @example
 * // make and start a 440hz sine tone
 * const osc = new Tone.Oscillator(440, "sine").toDestination().start();
 * @category Source
 */

var Oscillator = /*#__PURE__*/function (_Source) {
  _inherits(Oscillator, _Source);

  var _super = _createSuper(Oscillator);

  function Oscillator() {
    var _this;

    _classCallCheck(this, Oscillator);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Oscillator.getDefaults(), arguments, ["frequency", "type"]));
    _this.name = "Oscillator";
    /**
     * the main oscillator
     */

    _this._oscillator = null;
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Oscillator.getDefaults(), arguments, ["frequency", "type"]);
    _this.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "frequency",
      value: options.frequency
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "frequency");
    _this.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "cents",
      value: options.detune
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), "detune");
    _this._partials = options.partials;
    _this._partialCount = options.partialCount;
    _this._type = options.type;

    if (options.partialCount && options.type !== "custom") {
      _this._type = _this.baseType + options.partialCount.toString();
    }

    _this.phase = options.phase;
    return _this;
  }

  _createClass(Oscillator, [{
    key: "_start",
    value:
    /**
     * start the oscillator
     */
    function _start(time) {
      var _this2 = this;

      var computedTime = this.toSeconds(time); // new oscillator with previous values

      var oscillator = new _ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__["ToneOscillatorNode"]({
        context: this.context,
        onended: function onended() {
          return _this2.onstop(_this2);
        }
      });
      this._oscillator = oscillator;

      if (this._wave) {
        this._oscillator.setPeriodicWave(this._wave);
      } else {
        this._oscillator.type = this._type;
      } // connect the control signal to the oscillator frequency & detune


      this._oscillator.connect(this.output);

      this.frequency.connect(this._oscillator.frequency);
      this.detune.connect(this._oscillator.detune); // start the oscillator

      this._oscillator.start(computedTime);
    }
    /**
     * stop the oscillator
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      var computedTime = this.toSeconds(time);

      if (this._oscillator) {
        this._oscillator.stop(computedTime);
      }
    }
    /**
     * Restart the oscillator. Does not stop the oscillator, but instead
     * just cancels any scheduled 'stop' from being invoked.
     */

  }, {
    key: "_restart",
    value: function _restart(time) {
      var computedTime = this.toSeconds(time);
      this.log("restart", computedTime);

      if (this._oscillator) {
        this._oscillator.cancelStop();
      }

      this._state.cancel(computedTime);

      return this;
    }
    /**
     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,
     * will also affect the oscillators frequency.
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * osc.frequency.value = 440;
     * // the ratio between the bpm and the frequency will be maintained
     * osc.syncFrequency();
     * // double the tempo
     * Tone.Transport.bpm.value *= 2;
     * // the frequency of the oscillator is doubled to 880
     */

  }, {
    key: "syncFrequency",
    value: function syncFrequency() {
      this.context.transport.syncSignal(this.frequency);
      return this;
    }
    /**
     * Unsync the oscillator's frequency from the Transport.
     * See Oscillator.syncFrequency
     */

  }, {
    key: "unsyncFrequency",
    value: function unsyncFrequency() {
      this.context.transport.unsyncSignal(this.frequency);
      return this;
    }
    /**
     * Get a cached periodic wave. Avoids having to recompute
     * the oscillator values when they have already been computed
     * with the same values.
     */

  }, {
    key: "_getCachedPeriodicWave",
    value: function _getCachedPeriodicWave() {
      var _this3 = this;

      if (this._type === "custom") {
        var oscProps = Oscillator._periodicWaveCache.find(function (description) {
          return description.phase === _this3._phase && Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["deepEquals"])(description.partials, _this3._partials);
        });

        return oscProps;
      } else {
        var _oscProps = Oscillator._periodicWaveCache.find(function (description) {
          return description.type === _this3._type && description.phase === _this3._phase;
        });

        this._partialCount = _oscProps ? _oscProps.partialCount : this._partialCount;
        return _oscProps;
      }
    }
  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(type) {
      this._type = type;
      var isBasicType = ["sine", "square", "sawtooth", "triangle"].indexOf(type) !== -1;

      if (this._phase === 0 && isBasicType) {
        this._wave = undefined;
        this._partialCount = 0; // just go with the basic approach

        if (this._oscillator !== null) {
          // already tested that it's a basic type
          this._oscillator.type = type;
        }
      } else {
        // first check if the value is cached
        var cache = this._getCachedPeriodicWave();

        if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(cache)) {
          var partials = cache.partials,
              wave = cache.wave;
          this._wave = wave;
          this._partials = partials;

          if (this._oscillator !== null) {
            this._oscillator.setPeriodicWave(this._wave);
          }
        } else {
          var _this$_getRealImagina = this._getRealImaginary(type, this._phase),
              _this$_getRealImagina2 = _slicedToArray(_this$_getRealImagina, 2),
              real = _this$_getRealImagina2[0],
              imag = _this$_getRealImagina2[1];

          var periodicWave = this.context.createPeriodicWave(real, imag);
          this._wave = periodicWave;

          if (this._oscillator !== null) {
            this._oscillator.setPeriodicWave(this._wave);
          } // set the cache


          Oscillator._periodicWaveCache.push({
            imag: imag,
            partialCount: this._partialCount,
            partials: this._partials,
            phase: this._phase,
            real: real,
            type: this._type,
            wave: this._wave
          });

          if (Oscillator._periodicWaveCache.length > 100) {
            Oscillator._periodicWaveCache.shift();
          }
        }
      }
    }
  }, {
    key: "baseType",
    get: function get() {
      return this._type.replace(this.partialCount.toString(), "");
    },
    set: function set(baseType) {
      if (this.partialCount && this._type !== "custom" && baseType !== "custom") {
        this.type = baseType + this.partialCount;
      } else {
        this.type = baseType;
      }
    }
  }, {
    key: "partialCount",
    get: function get() {
      return this._partialCount;
    },
    set: function set(p) {
      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assertRange"])(p, 0);
      var type = this._type;
      var partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);

      if (partial) {
        type = partial[1];
      }

      if (this._type !== "custom") {
        if (p === 0) {
          this.type = type;
        } else {
          this.type = type + p.toString();
        }
      } else {
        // extend or shorten the partials array
        var fullPartials = new Float32Array(p); // copy over the partials array

        this._partials.forEach(function (v, i) {
          return fullPartials[i] = v;
        });

        this._partials = Array.from(fullPartials);
        this.type = this._type;
      }
    }
    /**
     * Returns the real and imaginary components based
     * on the oscillator type.
     * @returns [real: Float32Array, imaginary: Float32Array]
     */

  }, {
    key: "_getRealImaginary",
    value: function _getRealImaginary(type, phase) {
      var fftSize = 4096;
      var periodicWaveSize = fftSize / 2;
      var real = new Float32Array(periodicWaveSize);
      var imag = new Float32Array(periodicWaveSize);
      var partialCount = 1;

      if (type === "custom") {
        partialCount = this._partials.length + 1;
        this._partialCount = this._partials.length;
        periodicWaveSize = partialCount; // if the partial count is 0, don't bother doing any computation

        if (this._partials.length === 0) {
          return [real, imag];
        }
      } else {
        var partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(type);

        if (partial) {
          partialCount = parseInt(partial[2], 10) + 1;
          this._partialCount = parseInt(partial[2], 10);
          type = partial[1];
          partialCount = Math.max(partialCount, 2);
          periodicWaveSize = partialCount;
        } else {
          this._partialCount = 0;
        }

        this._partials = [];
      }

      for (var n = 1; n < periodicWaveSize; ++n) {
        var piFactor = 2 / (n * Math.PI);
        var b = void 0;

        switch (type) {
          case "sine":
            b = n <= partialCount ? 1 : 0;
            this._partials[n - 1] = b;
            break;

          case "square":
            b = n & 1 ? 2 * piFactor : 0;
            this._partials[n - 1] = b;
            break;

          case "sawtooth":
            b = piFactor * (n & 1 ? 1 : -1);
            this._partials[n - 1] = b;
            break;

          case "triangle":
            if (n & 1) {
              b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);
            } else {
              b = 0;
            }

            this._partials[n - 1] = b;
            break;

          case "custom":
            b = this._partials[n - 1];
            break;

          default:
            throw new TypeError("Oscillator: invalid type: " + type);
        }

        if (b !== 0) {
          real[n] = -b * Math.sin(phase * n);
          imag[n] = b * Math.cos(phase * n);
        } else {
          real[n] = 0;
          imag[n] = 0;
        }
      }

      return [real, imag];
    }
    /**
     * Compute the inverse FFT for a given phase.
     */

  }, {
    key: "_inverseFFT",
    value: function _inverseFFT(real, imag, phase) {
      var sum = 0;
      var len = real.length;

      for (var i = 0; i < len; i++) {
        sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);
      }

      return sum;
    }
    /**
     * Returns the initial value of the oscillator when stopped.
     * E.g. a "sine" oscillator with phase = 90 would return an initial value of -1.
     */

  }, {
    key: "getInitialValue",
    value: function getInitialValue() {
      var _this$_getRealImagina3 = this._getRealImaginary(this._type, 0),
          _this$_getRealImagina4 = _slicedToArray(_this$_getRealImagina3, 2),
          real = _this$_getRealImagina4[0],
          imag = _this$_getRealImagina4[1];

      var maxValue = 0;
      var twoPi = Math.PI * 2;
      var testPositions = 32; // check for peaks in 16 places

      for (var i = 0; i < testPositions; i++) {
        maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);
      }

      return Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_10__["clamp"])(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);
    }
  }, {
    key: "partials",
    get: function get() {
      return this._partials.slice(0, this.partialCount);
    },
    set: function set(partials) {
      this._partials = partials;
      this._partialCount = this._partials.length;

      if (partials.length) {
        this.type = "custom";
      }
    }
  }, {
    key: "phase",
    get: function get() {
      return this._phase * (180 / Math.PI);
    },
    set: function set(phase) {
      this._phase = phase * Math.PI / 180; // reset the type

      this.type = this._type;
    }
  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__["generateWaveform"])(this, length));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(Oscillator.prototype), "dispose", this).call(this);

      if (this._oscillator !== null) {
        this._oscillator.dispose();
      }

      this._wave = undefined;
      this.frequency.dispose();
      this.detune.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults(), {
        detune: 0,
        frequency: 440,
        partialCount: 0,
        partials: [],
        phase: 0,
        type: "sine"
      });
    }
  }]);

  return Oscillator;
}(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"]);
/**
 * Cache the periodic waves to avoid having to redo computations
 */

Oscillator._periodicWaveCache = [];

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js":
/*!******************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js ***!
  \******************************************************************************/
/*! exports provided: generateWaveform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateWaveform", function() { return generateWaveform; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/OfflineContext */ "./node_modules/tone/build/esm/core/context/OfflineContext.js");



/**
 * Render a segment of the oscillator to an offline context and return the results as an array
 */

function generateWaveform(instance, length) {
  return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
    var duration, context, clone, buffer;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            duration = length / instance.context.sampleRate;
            context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_2__["OfflineContext"](1, duration, instance.context.sampleRate);
            clone = new instance.constructor(Object.assign(instance.get(), {
              // should do 2 iterations
              frequency: 2 / duration,
              // zero out the detune
              detune: 0,
              context: context
            })).toDestination();
            clone.start(0);
            _context.next = 6;
            return context.render();

          case 6:
            buffer = _context.sent;
            return _context.abrupt("return", buffer.getChannelData(0));

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js":
/*!************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js ***!
  \************************************************************************/
/*! exports provided: PWMOscillator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PWMOscillator", function() { return PWMOscillator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../signal/Multiply */ "./node_modules/tone/build/esm/signal/Multiply.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
/* harmony import */ var _PulseOscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./PulseOscillator */ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }









/**
 * PWMOscillator modulates the width of a Tone.PulseOscillator
 * at the modulationFrequency. This has the effect of continuously
 * changing the timbre of the oscillator by altering the harmonics
 * generated.
 * @example
 * return Tone.Offline(() => {
 * 	const pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */

var PWMOscillator = /*#__PURE__*/function (_Source) {
  _inherits(PWMOscillator, _Source);

  var _super = _createSuper(PWMOscillator);

  function PWMOscillator() {
    var _this;

    _classCallCheck(this, PWMOscillator);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]));
    _this.name = "PWMOscillator";
    _this.sourceType = "pwm";
    /**
     * Scale the oscillator so it doesn't go silent
     * at the extreme values.
     */

    _this._scale = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__["Multiply"]({
      context: _this.context,
      value: 2
    });
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]);
    _this._pulse = new _PulseOscillator__WEBPACK_IMPORTED_MODULE_8__["PulseOscillator"]({
      context: _this.context,
      frequency: options.modulationFrequency
    }); // change the pulse oscillator type

    _this._pulse.carrierType = "sine";
    _this.modulationFrequency = _this._pulse.frequency;
    _this._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_6__["Oscillator"]({
      context: _this.context,
      detune: options.detune,
      frequency: options.frequency,
      onstop: function onstop() {
        return _this.onstop(_assertThisInitialized(_this));
      },
      phase: options.phase
    });
    _this.frequency = _this._modulator.frequency;
    _this.detune = _this._modulator.detune; // connections

    _this._modulator.chain(_this._scale, _this._pulse.width);

    _this._pulse.connect(_this.output);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this), ["modulationFrequency", "frequency", "detune"]);
    return _this;
  }

  _createClass(PWMOscillator, [{
    key: "_start",
    value:
    /**
     * start the oscillator
     */
    function _start(time) {
      time = this.toSeconds(time);

      this._modulator.start(time);

      this._pulse.start(time);
    }
    /**
     * stop the oscillator
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      time = this.toSeconds(time);

      this._modulator.stop(time);

      this._pulse.stop(time);
    }
    /**
     * restart the oscillator
     */

  }, {
    key: "_restart",
    value: function _restart(time) {
      this._modulator.restart(time);

      this._pulse.restart(time);
    }
    /**
     * The type of the oscillator. Always returns "pwm".
     */

  }, {
    key: "type",
    get: function get() {
      return "pwm";
    }
    /**
     * The baseType of the oscillator. Always returns "pwm".
     */

  }, {
    key: "baseType",
    get: function get() {
      return "pwm";
    }
    /**
     * The partials of the waveform. Cannot set partials for this waveform type
     */

  }, {
    key: "partials",
    get: function get() {
      return [];
    }
    /**
     * No partials for this waveform type.
     */

  }, {
    key: "partialCount",
    get: function get() {
      return 0;
    }
    /**
     * The phase of the oscillator in degrees.
     */

  }, {
    key: "phase",
    get: function get() {
      return this._modulator.phase;
    },
    set: function set(phase) {
      this._modulator.phase = phase;
    }
  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_7__["generateWaveform"])(this, length));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PWMOscillator.prototype), "dispose", this).call(this);

      this._pulse.dispose();

      this._scale.dispose();

      this._modulator.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"].getDefaults(), {
        detune: 0,
        frequency: 440,
        modulationFrequency: 0.4,
        phase: 0,
        type: "pwm"
      });
    }
  }]);

  return PWMOscillator;
}(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js":
/*!**************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js ***!
  \**************************************************************************/
/*! exports provided: PulseOscillator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PulseOscillator", function() { return PulseOscillator; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tone/node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/context/Gain */ "./node_modules/tone/build/esm/core/context/Gain.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
/* harmony import */ var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../signal/Signal */ "./node_modules/tone/build/esm/signal/Signal.js");
/* harmony import */ var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../signal/WaveShaper */ "./node_modules/tone/build/esm/signal/WaveShaper.js");
/* harmony import */ var _Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Source */ "./node_modules/tone/build/esm/source/Source.js");
/* harmony import */ var _Oscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Oscillator */ "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
/* harmony import */ var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OscillatorInterface */ "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }










/**
 * PulseOscillator is an oscillator with control over pulse width,
 * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is
 * a square wave.
 * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).
 * ```
 *    width = -0.25        width = 0.0          width = 0.25
 *
 *   +-----+            +-------+       +    +-------+     +-+
 *   |     |            |       |       |            |     |
 *   |     |            |       |       |            |     |
 * +-+     +-------+    +       +-------+            +-----+
 *
 *
 *    width = -0.5                              width = 0.5
 *
 *     +---+                                 +-------+   +---+
 *     |   |                                         |   |
 *     |   |                                         |   |
 * +---+   +-------+                                 +---+
 *
 *
 *    width = -0.75                             width = 0.75
 *
 *       +-+                                 +-------+ +-----+
 *       | |                                         | |
 *       | |                                         | |
 * +-----+ +-------+                                 +-+
 * ```
 * @example
 * return Tone.Offline(() => {
 * 	const pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();
 * }, 0.1, 1);
 * @category Source
 */

var PulseOscillator = /*#__PURE__*/function (_Source) {
  _inherits(PulseOscillator, _Source);

  var _super = _createSuper(PulseOscillator);

  function PulseOscillator() {
    var _this;

    _classCallCheck(this, PulseOscillator);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]));
    _this.name = "PulseOscillator";
    /**
     * gate the width amount
     */

    _this._widthGate = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
      context: _this.context,
      gain: 0
    });
    /**
     * Threshold the signal to turn it into a square
     */

    _this._thresh = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_6__["WaveShaper"]({
      context: _this.context,
      mapping: function mapping(val) {
        return val <= 0 ? -1 : 1;
      }
    });
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]);
    _this.width = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
      context: _this.context,
      units: "audioRange",
      value: options.width
    });
    _this._triangle = new _Oscillator__WEBPACK_IMPORTED_MODULE_8__["Oscillator"]({
      context: _this.context,
      detune: options.detune,
      frequency: options.frequency,
      onstop: function onstop() {
        return _this.onstop(_assertThisInitialized(_this));
      },
      phase: options.phase,
      type: "triangle"
    });
    _this.frequency = _this._triangle.frequency;
    _this.detune = _this._triangle.detune; // connections

    _this._triangle.chain(_this._thresh, _this.output);

    _this.width.chain(_this._widthGate, _this._thresh);

    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["width", "frequency", "detune"]);
    return _this;
  }

  _createClass(PulseOscillator, [{
    key: "_start",
    value:
    /**
     * start the oscillator
     */
    function _start(time) {
      time = this.toSeconds(time);

      this._triangle.start(time);

      this._widthGate.gain.setValueAtTime(1, time);
    }
    /**
     * stop the oscillator
     */

  }, {
    key: "_stop",
    value: function _stop(time) {
      time = this.toSeconds(time);

      this._triangle.stop(time); // the width is still connected to the output.
      // that needs to be stopped also


      this._widthGate.gain.cancelScheduledValues(time);

      this._widthGate.gain.setValueAtTime(0, time);
    }
  }, {
    key: "_restart",
    value: function _restart(time) {
      this._triangle.restart(time);

      this._widthGate.gain.cancelScheduledValues(time);

      this._widthGate.gain.setValueAtTime(1, time);
    }
    /**
     * The phase of the oscillator in degrees.
     */

  }, {
    key: "phase",
    get: function get() {
      return this._triangle.phase;
    },
    set: function set(phase) {
      this._triangle.phase = phase;
    }
    /**
     * The type of the oscillator. Always returns "pulse".
     */

  }, {
    key: "type",
    get: function get() {
      return "pulse";
    }
    /**
     * The baseType of the oscillator. Always returns "pulse".
     */

  }, {
    key: "baseType",
    get: function get() {
      return "pulse";
    }
    /**
     * The partials of the waveform. Cannot set partials for this waveform type
     */

  }, {
    key: "partials",
    get: function get() {
      return [];
    }
    /**
     * No partials for this waveform type.
     */

  }, {
    key: "partialCount",
    get: function get() {
      return 0;
    }
    /**
     * *Internal use* The carrier oscillator type is fed through the
     * waveshaper node to create the pulse. Using different carrier oscillators
     * changes oscillator's behavior.
     */

  }, {
    key: "carrierType",
    set: function set(type) {
      this._triangle.type = type;
    }
  }, {
    key: "asArray",
    value: function asArray() {
      var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_1__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_9__["generateWaveform"])(this, length));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
    /**
     * Clean up method.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(PulseOscillator.prototype), "dispose", this).call(this);

      this._triangle.dispose();

      this.width.dispose();

      this._widthGate.dispose();

      this._thresh.dispose();

      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_7__["Source"].getDefaults(), {
        detune: 0,
        frequency: 440,
        phase: 0,
        type: "pulse",
        width: 0.2
      });
    }
  }]);

  return PulseOscillator;
}(_Source__WEBPACK_IMPORTED_MODULE_7__["Source"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js ***!
  \*****************************************************************************/
/*! exports provided: ToneOscillatorNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function() { return ToneOscillatorNode; });
/* harmony import */ var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/context/ToneAudioNode */ "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
/* harmony import */ var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/context/Param */ "./node_modules/tone/build/esm/core/context/Param.js");
/* harmony import */ var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/util/Defaults */ "./node_modules/tone/build/esm/core/util/Defaults.js");
/* harmony import */ var _OneShotSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../OneShotSource */ "./node_modules/tone/build/esm/source/OneShotSource.js");
/* harmony import */ var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/util/Interface */ "./node_modules/tone/build/esm/core/util/Interface.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






/**
 * Wrapper around the native fire-and-forget OscillatorNode.
 * Adds the ability to reschedule the stop method.
 * ***[[Oscillator]] is better for most use-cases***
 * @category Source
 */

var ToneOscillatorNode = /*#__PURE__*/function (_OneShotSource) {
  _inherits(ToneOscillatorNode, _OneShotSource);

  var _super = _createSuper(ToneOscillatorNode);

  function ToneOscillatorNode() {
    var _this;

    _classCallCheck(this, ToneOscillatorNode);

    _this = _super.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]));
    _this.name = "ToneOscillatorNode";
    /**
     * The oscillator
     */

    _this._oscillator = _this.context.createOscillator();
    _this._internalChannels = [_this._oscillator];
    var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]);
    Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])(_this._oscillator, _this._gainNode);
    _this.type = options.type;
    _this.frequency = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this._oscillator.frequency,
      units: "frequency",
      value: options.frequency
    });
    _this.detune = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
      context: _this.context,
      param: _this._oscillator.detune,
      units: "cents",
      value: options.detune
    });
    Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this), ["frequency", "detune"]);
    return _this;
  }

  _createClass(ToneOscillatorNode, [{
    key: "start",
    value:
    /**
     * Start the oscillator node at the given time
     * @param  time When to start the oscillator
     */
    function start(time) {
      var computedTime = this.toSeconds(time);
      this.log("start", computedTime);

      this._startGain(computedTime);

      this._oscillator.start(computedTime);

      return this;
    }
  }, {
    key: "_stopSource",
    value: function _stopSource(time) {
      this._oscillator.stop(time);
    }
    /**
     * Sets an arbitrary custom periodic waveform given a PeriodicWave.
     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave
     */

  }, {
    key: "setPeriodicWave",
    value: function setPeriodicWave(periodicWave) {
      this._oscillator.setPeriodicWave(periodicWave);

      return this;
    }
    /**
     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'
     */

  }, {
    key: "type",
    get: function get() {
      return this._oscillator.type;
    },
    set: function set(type) {
      this._oscillator.type = type;
    }
    /**
     * Clean up.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      _get(_getPrototypeOf(ToneOscillatorNode.prototype), "dispose", this).call(this);

      if (this.state === "started") {
        this.stop();
      }

      this._oscillator.disconnect();

      this.frequency.dispose();
      this.detune.dispose();
      return this;
    }
  }], [{
    key: "getDefaults",
    value: function getDefaults() {
      return Object.assign(_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"].getDefaults(), {
        detune: 0,
        frequency: 440,
        type: "sine"
      });
    }
  }]);

  return ToneOscillatorNode;
}(_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"]);

/***/ }),

/***/ "./node_modules/tone/build/esm/version.js":
/*!************************************************!*\
  !*** ./node_modules/tone/build/esm/version.js ***!
  \************************************************/
/*! exports provided: version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
var version = "14.7.77";

/***/ }),

/***/ "./node_modules/tone/node_modules/tslib/tslib.es6.js":
/*!***********************************************************!*\
  !*** ./node_modules/tone/node_modules/tslib/tslib.es6.js ***!
  \***********************************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __spreadArray, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return _assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArray", function() { return __spreadArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};


function __rest(s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
var __createBinding = Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
};
function __exportStar(m, o) {
  for (var p in m) {
    if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
  }
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
/** @deprecated */

function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
}
/** @deprecated */

function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
}
function __spreadArray(to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];
  }

  return to;
}
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;

var __setModuleDefault = Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
};

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
}

/***/ }),

/***/ "./node_modules/turbolinks/dist/turbolinks.js":
/*!****************************************************!*\
  !*** ./node_modules/turbolinks/dist/turbolinks.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*
Turbolinks 5.2.0
Copyright © 2018 Basecamp, LLC
 */
(function () {
  var t = this;
  (function () {
    (function () {
      this.Turbolinks = {
        supported: function () {
          return null != window.history.pushState && null != window.requestAnimationFrame && null != window.addEventListener;
        }(),
        visit: function visit(t, r) {
          return e.controller.visit(t, r);
        },
        clearCache: function clearCache() {
          return e.controller.clearCache();
        },
        setProgressBarDelay: function setProgressBarDelay(t) {
          return e.controller.setProgressBarDelay(t);
        }
      };
    }).call(this);
  }).call(t);
  var e = t.Turbolinks;
  (function () {
    (function () {
      var t,
          r,
          n,
          o = [].slice;
      e.copyObject = function (t) {
        var e, r, n;
        r = {};

        for (e in t) {
          n = t[e], r[e] = n;
        }

        return r;
      }, e.closest = function (e, r) {
        return t.call(e, r);
      }, t = function () {
        var t, e;
        return t = document.documentElement, null != (e = t.closest) ? e : function (t) {
          var e;

          for (e = this; e;) {
            if (e.nodeType === Node.ELEMENT_NODE && r.call(e, t)) return e;
            e = e.parentNode;
          }
        };
      }(), e.defer = function (t) {
        return setTimeout(t, 1);
      }, e.throttle = function (t) {
        var e;
        return e = null, function () {
          var r;
          return r = 1 <= arguments.length ? o.call(arguments, 0) : [], null != e ? e : e = requestAnimationFrame(function (n) {
            return function () {
              return e = null, t.apply(n, r);
            };
          }(this));
        };
      }, e.dispatch = function (t, e) {
        var r, o, i, s, a, u;
        return a = null != e ? e : {}, u = a.target, r = a.cancelable, o = a.data, i = document.createEvent("Events"), i.initEvent(t, !0, r === !0), i.data = null != o ? o : {}, i.cancelable && !n && (s = i.preventDefault, i.preventDefault = function () {
          return this.defaultPrevented || Object.defineProperty(this, "defaultPrevented", {
            get: function get() {
              return !0;
            }
          }), s.call(this);
        }), (null != u ? u : document).dispatchEvent(i), i;
      }, n = function () {
        var t;
        return t = document.createEvent("Events"), t.initEvent("test", !0, !0), t.preventDefault(), t.defaultPrevented;
      }(), e.match = function (t, e) {
        return r.call(t, e);
      }, r = function () {
        var t, e, r, n;
        return t = document.documentElement, null != (e = null != (r = null != (n = t.matchesSelector) ? n : t.webkitMatchesSelector) ? r : t.msMatchesSelector) ? e : t.mozMatchesSelector;
      }(), e.uuid = function () {
        var t, e, r;

        for (r = "", t = e = 1; 36 >= e; t = ++e) {
          r += 9 === t || 14 === t || 19 === t || 24 === t ? "-" : 15 === t ? "4" : 20 === t ? (Math.floor(4 * Math.random()) + 8).toString(16) : Math.floor(15 * Math.random()).toString(16);
        }

        return r;
      };
    }).call(this), function () {
      e.Location = function () {
        function t(t) {
          var e, r;
          null == t && (t = ""), r = document.createElement("a"), r.href = t.toString(), this.absoluteURL = r.href, e = r.hash.length, 2 > e ? this.requestURL = this.absoluteURL : (this.requestURL = this.absoluteURL.slice(0, -e), this.anchor = r.hash.slice(1));
        }

        var e, r, n, o;
        return t.wrap = function (t) {
          return t instanceof this ? t : new this(t);
        }, t.prototype.getOrigin = function () {
          return this.absoluteURL.split("/", 3).join("/");
        }, t.prototype.getPath = function () {
          var t, e;
          return null != (t = null != (e = this.requestURL.match(/\/\/[^\/]*(\/[^?;]*)/)) ? e[1] : void 0) ? t : "/";
        }, t.prototype.getPathComponents = function () {
          return this.getPath().split("/").slice(1);
        }, t.prototype.getLastPathComponent = function () {
          return this.getPathComponents().slice(-1)[0];
        }, t.prototype.getExtension = function () {
          var t, e;
          return null != (t = null != (e = this.getLastPathComponent().match(/\.[^.]*$/)) ? e[0] : void 0) ? t : "";
        }, t.prototype.isHTML = function () {
          return this.getExtension().match(/^(?:|\.(?:htm|html|xhtml))$/);
        }, t.prototype.isPrefixedBy = function (t) {
          var e;
          return e = r(t), this.isEqualTo(t) || o(this.absoluteURL, e);
        }, t.prototype.isEqualTo = function (t) {
          return this.absoluteURL === (null != t ? t.absoluteURL : void 0);
        }, t.prototype.toCacheKey = function () {
          return this.requestURL;
        }, t.prototype.toJSON = function () {
          return this.absoluteURL;
        }, t.prototype.toString = function () {
          return this.absoluteURL;
        }, t.prototype.valueOf = function () {
          return this.absoluteURL;
        }, r = function r(t) {
          return e(t.getOrigin() + t.getPath());
        }, e = function e(t) {
          return n(t, "/") ? t : t + "/";
        }, o = function o(t, e) {
          return t.slice(0, e.length) === e;
        }, n = function n(t, e) {
          return t.slice(-e.length) === e;
        }, t;
      }();
    }.call(this), function () {
      var t = function t(_t, e) {
        return function () {
          return _t.apply(e, arguments);
        };
      };

      e.HttpRequest = function () {
        function r(r, n, o) {
          this.delegate = r, this.requestCanceled = t(this.requestCanceled, this), this.requestTimedOut = t(this.requestTimedOut, this), this.requestFailed = t(this.requestFailed, this), this.requestLoaded = t(this.requestLoaded, this), this.requestProgressed = t(this.requestProgressed, this), this.url = e.Location.wrap(n).requestURL, this.referrer = e.Location.wrap(o).absoluteURL, this.createXHR();
        }

        return r.NETWORK_FAILURE = 0, r.TIMEOUT_FAILURE = -1, r.timeout = 60, r.prototype.send = function () {
          var t;
          return this.xhr && !this.sent ? (this.notifyApplicationBeforeRequestStart(), this.setProgress(0), this.xhr.send(), this.sent = !0, "function" == typeof (t = this.delegate).requestStarted ? t.requestStarted() : void 0) : void 0;
        }, r.prototype.cancel = function () {
          return this.xhr && this.sent ? this.xhr.abort() : void 0;
        }, r.prototype.requestProgressed = function (t) {
          return t.lengthComputable ? this.setProgress(t.loaded / t.total) : void 0;
        }, r.prototype.requestLoaded = function () {
          return this.endRequest(function (t) {
            return function () {
              var e;
              return 200 <= (e = t.xhr.status) && 300 > e ? t.delegate.requestCompletedWithResponse(t.xhr.responseText, t.xhr.getResponseHeader("Turbolinks-Location")) : (t.failed = !0, t.delegate.requestFailedWithStatusCode(t.xhr.status, t.xhr.responseText));
            };
          }(this));
        }, r.prototype.requestFailed = function () {
          return this.endRequest(function (t) {
            return function () {
              return t.failed = !0, t.delegate.requestFailedWithStatusCode(t.constructor.NETWORK_FAILURE);
            };
          }(this));
        }, r.prototype.requestTimedOut = function () {
          return this.endRequest(function (t) {
            return function () {
              return t.failed = !0, t.delegate.requestFailedWithStatusCode(t.constructor.TIMEOUT_FAILURE);
            };
          }(this));
        }, r.prototype.requestCanceled = function () {
          return this.endRequest();
        }, r.prototype.notifyApplicationBeforeRequestStart = function () {
          return e.dispatch("turbolinks:request-start", {
            data: {
              url: this.url,
              xhr: this.xhr
            }
          });
        }, r.prototype.notifyApplicationAfterRequestEnd = function () {
          return e.dispatch("turbolinks:request-end", {
            data: {
              url: this.url,
              xhr: this.xhr
            }
          });
        }, r.prototype.createXHR = function () {
          return this.xhr = new XMLHttpRequest(), this.xhr.open("GET", this.url, !0), this.xhr.timeout = 1e3 * this.constructor.timeout, this.xhr.setRequestHeader("Accept", "text/html, application/xhtml+xml"), this.xhr.setRequestHeader("Turbolinks-Referrer", this.referrer), this.xhr.onprogress = this.requestProgressed, this.xhr.onload = this.requestLoaded, this.xhr.onerror = this.requestFailed, this.xhr.ontimeout = this.requestTimedOut, this.xhr.onabort = this.requestCanceled;
        }, r.prototype.endRequest = function (t) {
          return this.xhr ? (this.notifyApplicationAfterRequestEnd(), null != t && t.call(this), this.destroy()) : void 0;
        }, r.prototype.setProgress = function (t) {
          var e;
          return this.progress = t, "function" == typeof (e = this.delegate).requestProgressed ? e.requestProgressed(this.progress) : void 0;
        }, r.prototype.destroy = function () {
          var t;
          return this.setProgress(1), "function" == typeof (t = this.delegate).requestFinished && t.requestFinished(), this.delegate = null, this.xhr = null;
        }, r;
      }();
    }.call(this), function () {
      var t = function t(_t2, e) {
        return function () {
          return _t2.apply(e, arguments);
        };
      };

      e.ProgressBar = function () {
        function e() {
          this.trickle = t(this.trickle, this), this.stylesheetElement = this.createStylesheetElement(), this.progressElement = this.createProgressElement();
        }

        var r;
        return r = 300, e.defaultCSS = ".turbolinks-progress-bar {\n  position: fixed;\n  display: block;\n  top: 0;\n  left: 0;\n  height: 3px;\n  background: #0076ff;\n  z-index: 9999;\n  transition: width " + r + "ms ease-out, opacity " + r / 2 + "ms " + r / 2 + "ms ease-in;\n  transform: translate3d(0, 0, 0);\n}", e.prototype.show = function () {
          return this.visible ? void 0 : (this.visible = !0, this.installStylesheetElement(), this.installProgressElement(), this.startTrickling());
        }, e.prototype.hide = function () {
          return this.visible && !this.hiding ? (this.hiding = !0, this.fadeProgressElement(function (t) {
            return function () {
              return t.uninstallProgressElement(), t.stopTrickling(), t.visible = !1, t.hiding = !1;
            };
          }(this))) : void 0;
        }, e.prototype.setValue = function (t) {
          return this.value = t, this.refresh();
        }, e.prototype.installStylesheetElement = function () {
          return document.head.insertBefore(this.stylesheetElement, document.head.firstChild);
        }, e.prototype.installProgressElement = function () {
          return this.progressElement.style.width = 0, this.progressElement.style.opacity = 1, document.documentElement.insertBefore(this.progressElement, document.body), this.refresh();
        }, e.prototype.fadeProgressElement = function (t) {
          return this.progressElement.style.opacity = 0, setTimeout(t, 1.5 * r);
        }, e.prototype.uninstallProgressElement = function () {
          return this.progressElement.parentNode ? document.documentElement.removeChild(this.progressElement) : void 0;
        }, e.prototype.startTrickling = function () {
          return null != this.trickleInterval ? this.trickleInterval : this.trickleInterval = setInterval(this.trickle, r);
        }, e.prototype.stopTrickling = function () {
          return clearInterval(this.trickleInterval), this.trickleInterval = null;
        }, e.prototype.trickle = function () {
          return this.setValue(this.value + Math.random() / 100);
        }, e.prototype.refresh = function () {
          return requestAnimationFrame(function (t) {
            return function () {
              return t.progressElement.style.width = 10 + 90 * t.value + "%";
            };
          }(this));
        }, e.prototype.createStylesheetElement = function () {
          var t;
          return t = document.createElement("style"), t.type = "text/css", t.textContent = this.constructor.defaultCSS, t;
        }, e.prototype.createProgressElement = function () {
          var t;
          return t = document.createElement("div"), t.className = "turbolinks-progress-bar", t;
        }, e;
      }();
    }.call(this), function () {
      var t = function t(_t3, e) {
        return function () {
          return _t3.apply(e, arguments);
        };
      };

      e.BrowserAdapter = function () {
        function r(r) {
          this.controller = r, this.showProgressBar = t(this.showProgressBar, this), this.progressBar = new e.ProgressBar();
        }

        var n, o, i;
        return i = e.HttpRequest, n = i.NETWORK_FAILURE, o = i.TIMEOUT_FAILURE, r.prototype.visitProposedToLocationWithAction = function (t, e) {
          return this.controller.startVisitToLocationWithAction(t, e);
        }, r.prototype.visitStarted = function (t) {
          return t.issueRequest(), t.changeHistory(), t.loadCachedSnapshot();
        }, r.prototype.visitRequestStarted = function (t) {
          return this.progressBar.setValue(0), t.hasCachedSnapshot() || "restore" !== t.action ? this.showProgressBarAfterDelay() : this.showProgressBar();
        }, r.prototype.visitRequestProgressed = function (t) {
          return this.progressBar.setValue(t.progress);
        }, r.prototype.visitRequestCompleted = function (t) {
          return t.loadResponse();
        }, r.prototype.visitRequestFailedWithStatusCode = function (t, e) {
          switch (e) {
            case n:
            case o:
              return this.reload();

            default:
              return t.loadResponse();
          }
        }, r.prototype.visitRequestFinished = function (t) {
          return this.hideProgressBar();
        }, r.prototype.visitCompleted = function (t) {
          return t.followRedirect();
        }, r.prototype.pageInvalidated = function () {
          return this.reload();
        }, r.prototype.showProgressBarAfterDelay = function () {
          return this.progressBarTimeout = setTimeout(this.showProgressBar, this.controller.progressBarDelay);
        }, r.prototype.showProgressBar = function () {
          return this.progressBar.show();
        }, r.prototype.hideProgressBar = function () {
          return this.progressBar.hide(), clearTimeout(this.progressBarTimeout);
        }, r.prototype.reload = function () {
          return window.location.reload();
        }, r;
      }();
    }.call(this), function () {
      var t = function t(_t4, e) {
        return function () {
          return _t4.apply(e, arguments);
        };
      };

      e.History = function () {
        function r(e) {
          this.delegate = e, this.onPageLoad = t(this.onPageLoad, this), this.onPopState = t(this.onPopState, this);
        }

        return r.prototype.start = function () {
          return this.started ? void 0 : (addEventListener("popstate", this.onPopState, !1), addEventListener("load", this.onPageLoad, !1), this.started = !0);
        }, r.prototype.stop = function () {
          return this.started ? (removeEventListener("popstate", this.onPopState, !1), removeEventListener("load", this.onPageLoad, !1), this.started = !1) : void 0;
        }, r.prototype.push = function (t, r) {
          return t = e.Location.wrap(t), this.update("push", t, r);
        }, r.prototype.replace = function (t, r) {
          return t = e.Location.wrap(t), this.update("replace", t, r);
        }, r.prototype.onPopState = function (t) {
          var r, n, o, i;
          return this.shouldHandlePopState() && (i = null != (n = t.state) ? n.turbolinks : void 0) ? (r = e.Location.wrap(window.location), o = i.restorationIdentifier, this.delegate.historyPoppedToLocationWithRestorationIdentifier(r, o)) : void 0;
        }, r.prototype.onPageLoad = function (t) {
          return e.defer(function (t) {
            return function () {
              return t.pageLoaded = !0;
            };
          }(this));
        }, r.prototype.shouldHandlePopState = function () {
          return this.pageIsLoaded();
        }, r.prototype.pageIsLoaded = function () {
          return this.pageLoaded || "complete" === document.readyState;
        }, r.prototype.update = function (t, e, r) {
          var n;
          return n = {
            turbolinks: {
              restorationIdentifier: r
            }
          }, history[t + "State"](n, null, e);
        }, r;
      }();
    }.call(this), function () {
      e.HeadDetails = function () {
        function t(t) {
          var e, r, n, s, a, u;

          for (this.elements = {}, n = 0, a = t.length; a > n; n++) {
            u = t[n], u.nodeType === Node.ELEMENT_NODE && (s = u.outerHTML, r = null != (e = this.elements)[s] ? e[s] : e[s] = {
              type: i(u),
              tracked: o(u),
              elements: []
            }, r.elements.push(u));
          }
        }

        var e, r, n, o, i;
        return t.fromHeadElement = function (t) {
          var e;
          return new this(null != (e = null != t ? t.childNodes : void 0) ? e : []);
        }, t.prototype.hasElementWithKey = function (t) {
          return t in this.elements;
        }, t.prototype.getTrackedElementSignature = function () {
          var t, e;
          return function () {
            var r, n;
            r = this.elements, n = [];

            for (t in r) {
              e = r[t].tracked, e && n.push(t);
            }

            return n;
          }.call(this).join("");
        }, t.prototype.getScriptElementsNotInDetails = function (t) {
          return this.getElementsMatchingTypeNotInDetails("script", t);
        }, t.prototype.getStylesheetElementsNotInDetails = function (t) {
          return this.getElementsMatchingTypeNotInDetails("stylesheet", t);
        }, t.prototype.getElementsMatchingTypeNotInDetails = function (t, e) {
          var r, n, o, i, s, a;
          o = this.elements, s = [];

          for (n in o) {
            i = o[n], a = i.type, r = i.elements, a !== t || e.hasElementWithKey(n) || s.push(r[0]);
          }

          return s;
        }, t.prototype.getProvisionalElements = function () {
          var t, e, r, n, o, i, s;
          r = [], n = this.elements;

          for (e in n) {
            o = n[e], s = o.type, i = o.tracked, t = o.elements, null != s || i ? t.length > 1 && r.push.apply(r, t.slice(1)) : r.push.apply(r, t);
          }

          return r;
        }, t.prototype.getMetaValue = function (t) {
          var e;
          return null != (e = this.findMetaElementByName(t)) ? e.getAttribute("content") : void 0;
        }, t.prototype.findMetaElementByName = function (t) {
          var r, n, o, i;
          r = void 0, i = this.elements;

          for (o in i) {
            n = i[o].elements, e(n[0], t) && (r = n[0]);
          }

          return r;
        }, i = function i(t) {
          return r(t) ? "script" : n(t) ? "stylesheet" : void 0;
        }, o = function o(t) {
          return "reload" === t.getAttribute("data-turbolinks-track");
        }, r = function r(t) {
          var e;
          return e = t.tagName.toLowerCase(), "script" === e;
        }, n = function n(t) {
          var e;
          return e = t.tagName.toLowerCase(), "style" === e || "link" === e && "stylesheet" === t.getAttribute("rel");
        }, e = function e(t, _e) {
          var r;
          return r = t.tagName.toLowerCase(), "meta" === r && t.getAttribute("name") === _e;
        }, t;
      }();
    }.call(this), function () {
      e.Snapshot = function () {
        function t(t, e) {
          this.headDetails = t, this.bodyElement = e;
        }

        return t.wrap = function (t) {
          return t instanceof this ? t : "string" == typeof t ? this.fromHTMLString(t) : this.fromHTMLElement(t);
        }, t.fromHTMLString = function (t) {
          var e;
          return e = document.createElement("html"), e.innerHTML = t, this.fromHTMLElement(e);
        }, t.fromHTMLElement = function (t) {
          var r, n, o, i;
          return o = t.querySelector("head"), r = null != (i = t.querySelector("body")) ? i : document.createElement("body"), n = e.HeadDetails.fromHeadElement(o), new this(n, r);
        }, t.prototype.clone = function () {
          return new this.constructor(this.headDetails, this.bodyElement.cloneNode(!0));
        }, t.prototype.getRootLocation = function () {
          var t, r;
          return r = null != (t = this.getSetting("root")) ? t : "/", new e.Location(r);
        }, t.prototype.getCacheControlValue = function () {
          return this.getSetting("cache-control");
        }, t.prototype.getElementForAnchor = function (t) {
          try {
            return this.bodyElement.querySelector("[id='" + t + "'], a[name='" + t + "']");
          } catch (e) {}
        }, t.prototype.getPermanentElements = function () {
          return this.bodyElement.querySelectorAll("[id][data-turbolinks-permanent]");
        }, t.prototype.getPermanentElementById = function (t) {
          return this.bodyElement.querySelector("#" + t + "[data-turbolinks-permanent]");
        }, t.prototype.getPermanentElementsPresentInSnapshot = function (t) {
          var e, r, n, o, i;

          for (o = this.getPermanentElements(), i = [], r = 0, n = o.length; n > r; r++) {
            e = o[r], t.getPermanentElementById(e.id) && i.push(e);
          }

          return i;
        }, t.prototype.findFirstAutofocusableElement = function () {
          return this.bodyElement.querySelector("[autofocus]");
        }, t.prototype.hasAnchor = function (t) {
          return null != this.getElementForAnchor(t);
        }, t.prototype.isPreviewable = function () {
          return "no-preview" !== this.getCacheControlValue();
        }, t.prototype.isCacheable = function () {
          return "no-cache" !== this.getCacheControlValue();
        }, t.prototype.isVisitable = function () {
          return "reload" !== this.getSetting("visit-control");
        }, t.prototype.getSetting = function (t) {
          return this.headDetails.getMetaValue("turbolinks-" + t);
        }, t;
      }();
    }.call(this), function () {
      var t = [].slice;

      e.Renderer = function () {
        function e() {}

        var r;
        return e.render = function () {
          var e, r, n, o;
          return n = arguments[0], r = arguments[1], e = 3 <= arguments.length ? t.call(arguments, 2) : [], o = function (t, e, r) {
            r.prototype = t.prototype;
            var n = new r(),
                o = t.apply(n, e);
            return Object(o) === o ? o : n;
          }(this, e, function () {}), o.delegate = n, o.render(r), o;
        }, e.prototype.renderView = function (t) {
          return this.delegate.viewWillRender(this.newBody), t(), this.delegate.viewRendered(this.newBody);
        }, e.prototype.invalidateView = function () {
          return this.delegate.viewInvalidated();
        }, e.prototype.createScriptElement = function (t) {
          var e;
          return "false" === t.getAttribute("data-turbolinks-eval") ? t : (e = document.createElement("script"), e.textContent = t.textContent, e.async = !1, r(e, t), e);
        }, r = function r(t, e) {
          var r, n, o, i, s, a, u;

          for (i = e.attributes, a = [], r = 0, n = i.length; n > r; r++) {
            s = i[r], o = s.name, u = s.value, a.push(t.setAttribute(o, u));
          }

          return a;
        }, e;
      }();
    }.call(this), function () {
      var t,
          r,
          n = function n(t, e) {
        function r() {
          this.constructor = t;
        }

        for (var n in e) {
          o.call(e, n) && (t[n] = e[n]);
        }

        return r.prototype = e.prototype, t.prototype = new r(), t.__super__ = e.prototype, t;
      },
          o = {}.hasOwnProperty;

      e.SnapshotRenderer = function (e) {
        function o(t, e, r) {
          this.currentSnapshot = t, this.newSnapshot = e, this.isPreview = r, this.currentHeadDetails = this.currentSnapshot.headDetails, this.newHeadDetails = this.newSnapshot.headDetails, this.currentBody = this.currentSnapshot.bodyElement, this.newBody = this.newSnapshot.bodyElement;
        }

        return n(o, e), o.prototype.render = function (t) {
          return this.shouldRender() ? (this.mergeHead(), this.renderView(function (e) {
            return function () {
              return e.replaceBody(), e.isPreview || e.focusFirstAutofocusableElement(), t();
            };
          }(this))) : this.invalidateView();
        }, o.prototype.mergeHead = function () {
          return this.copyNewHeadStylesheetElements(), this.copyNewHeadScriptElements(), this.removeCurrentHeadProvisionalElements(), this.copyNewHeadProvisionalElements();
        }, o.prototype.replaceBody = function () {
          var t;
          return t = this.relocateCurrentBodyPermanentElements(), this.activateNewBodyScriptElements(), this.assignNewBody(), this.replacePlaceholderElementsWithClonedPermanentElements(t);
        }, o.prototype.shouldRender = function () {
          return this.newSnapshot.isVisitable() && this.trackedElementsAreIdentical();
        }, o.prototype.trackedElementsAreIdentical = function () {
          return this.currentHeadDetails.getTrackedElementSignature() === this.newHeadDetails.getTrackedElementSignature();
        }, o.prototype.copyNewHeadStylesheetElements = function () {
          var t, e, r, n, o;

          for (n = this.getNewHeadStylesheetElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.appendChild(t));
          }

          return o;
        }, o.prototype.copyNewHeadScriptElements = function () {
          var t, e, r, n, o;

          for (n = this.getNewHeadScriptElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.appendChild(this.createScriptElement(t)));
          }

          return o;
        }, o.prototype.removeCurrentHeadProvisionalElements = function () {
          var t, e, r, n, o;

          for (n = this.getCurrentHeadProvisionalElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.removeChild(t));
          }

          return o;
        }, o.prototype.copyNewHeadProvisionalElements = function () {
          var t, e, r, n, o;

          for (n = this.getNewHeadProvisionalElements(), o = [], e = 0, r = n.length; r > e; e++) {
            t = n[e], o.push(document.head.appendChild(t));
          }

          return o;
        }, o.prototype.relocateCurrentBodyPermanentElements = function () {
          var e, n, o, i, s, a, u;

          for (a = this.getCurrentBodyPermanentElements(), u = [], e = 0, n = a.length; n > e; e++) {
            i = a[e], s = t(i), o = this.newSnapshot.getPermanentElementById(i.id), r(i, s.element), r(o, i), u.push(s);
          }

          return u;
        }, o.prototype.replacePlaceholderElementsWithClonedPermanentElements = function (t) {
          var e, n, o, i, s, a, u;

          for (u = [], o = 0, i = t.length; i > o; o++) {
            a = t[o], n = a.element, s = a.permanentElement, e = s.cloneNode(!0), u.push(r(n, e));
          }

          return u;
        }, o.prototype.activateNewBodyScriptElements = function () {
          var t, e, n, o, i, s;

          for (i = this.getNewBodyScriptElements(), s = [], e = 0, o = i.length; o > e; e++) {
            n = i[e], t = this.createScriptElement(n), s.push(r(n, t));
          }

          return s;
        }, o.prototype.assignNewBody = function () {
          return document.body = this.newBody;
        }, o.prototype.focusFirstAutofocusableElement = function () {
          var t;
          return null != (t = this.newSnapshot.findFirstAutofocusableElement()) ? t.focus() : void 0;
        }, o.prototype.getNewHeadStylesheetElements = function () {
          return this.newHeadDetails.getStylesheetElementsNotInDetails(this.currentHeadDetails);
        }, o.prototype.getNewHeadScriptElements = function () {
          return this.newHeadDetails.getScriptElementsNotInDetails(this.currentHeadDetails);
        }, o.prototype.getCurrentHeadProvisionalElements = function () {
          return this.currentHeadDetails.getProvisionalElements();
        }, o.prototype.getNewHeadProvisionalElements = function () {
          return this.newHeadDetails.getProvisionalElements();
        }, o.prototype.getCurrentBodyPermanentElements = function () {
          return this.currentSnapshot.getPermanentElementsPresentInSnapshot(this.newSnapshot);
        }, o.prototype.getNewBodyScriptElements = function () {
          return this.newBody.querySelectorAll("script");
        }, o;
      }(e.Renderer), t = function t(_t5) {
        var e;
        return e = document.createElement("meta"), e.setAttribute("name", "turbolinks-permanent-placeholder"), e.setAttribute("content", _t5.id), {
          element: e,
          permanentElement: _t5
        };
      }, r = function r(t, e) {
        var r;
        return (r = t.parentNode) ? r.replaceChild(e, t) : void 0;
      };
    }.call(this), function () {
      var t = function t(_t6, e) {
        function n() {
          this.constructor = _t6;
        }

        for (var o in e) {
          r.call(e, o) && (_t6[o] = e[o]);
        }

        return n.prototype = e.prototype, _t6.prototype = new n(), _t6.__super__ = e.prototype, _t6;
      },
          r = {}.hasOwnProperty;

      e.ErrorRenderer = function (e) {
        function r(t) {
          var e;
          e = document.createElement("html"), e.innerHTML = t, this.newHead = e.querySelector("head"), this.newBody = e.querySelector("body");
        }

        return t(r, e), r.prototype.render = function (t) {
          return this.renderView(function (e) {
            return function () {
              return e.replaceHeadAndBody(), e.activateBodyScriptElements(), t();
            };
          }(this));
        }, r.prototype.replaceHeadAndBody = function () {
          var t, e;
          return e = document.head, t = document.body, e.parentNode.replaceChild(this.newHead, e), t.parentNode.replaceChild(this.newBody, t);
        }, r.prototype.activateBodyScriptElements = function () {
          var t, e, r, n, o, i;

          for (n = this.getScriptElements(), i = [], e = 0, r = n.length; r > e; e++) {
            o = n[e], t = this.createScriptElement(o), i.push(o.parentNode.replaceChild(t, o));
          }

          return i;
        }, r.prototype.getScriptElements = function () {
          return document.documentElement.querySelectorAll("script");
        }, r;
      }(e.Renderer);
    }.call(this), function () {
      e.View = function () {
        function t(t) {
          this.delegate = t, this.htmlElement = document.documentElement;
        }

        return t.prototype.getRootLocation = function () {
          return this.getSnapshot().getRootLocation();
        }, t.prototype.getElementForAnchor = function (t) {
          return this.getSnapshot().getElementForAnchor(t);
        }, t.prototype.getSnapshot = function () {
          return e.Snapshot.fromHTMLElement(this.htmlElement);
        }, t.prototype.render = function (t, e) {
          var r, n, o;
          return o = t.snapshot, r = t.error, n = t.isPreview, this.markAsPreview(n), null != o ? this.renderSnapshot(o, n, e) : this.renderError(r, e);
        }, t.prototype.markAsPreview = function (t) {
          return t ? this.htmlElement.setAttribute("data-turbolinks-preview", "") : this.htmlElement.removeAttribute("data-turbolinks-preview");
        }, t.prototype.renderSnapshot = function (t, r, n) {
          return e.SnapshotRenderer.render(this.delegate, n, this.getSnapshot(), e.Snapshot.wrap(t), r);
        }, t.prototype.renderError = function (t, r) {
          return e.ErrorRenderer.render(this.delegate, r, t);
        }, t;
      }();
    }.call(this), function () {
      var t = function t(_t7, e) {
        return function () {
          return _t7.apply(e, arguments);
        };
      };

      e.ScrollManager = function () {
        function r(r) {
          this.delegate = r, this.onScroll = t(this.onScroll, this), this.onScroll = e.throttle(this.onScroll);
        }

        return r.prototype.start = function () {
          return this.started ? void 0 : (addEventListener("scroll", this.onScroll, !1), this.onScroll(), this.started = !0);
        }, r.prototype.stop = function () {
          return this.started ? (removeEventListener("scroll", this.onScroll, !1), this.started = !1) : void 0;
        }, r.prototype.scrollToElement = function (t) {
          return t.scrollIntoView();
        }, r.prototype.scrollToPosition = function (t) {
          var e, r;
          return e = t.x, r = t.y, window.scrollTo(e, r);
        }, r.prototype.onScroll = function (t) {
          return this.updatePosition({
            x: window.pageXOffset,
            y: window.pageYOffset
          });
        }, r.prototype.updatePosition = function (t) {
          var e;
          return this.position = t, null != (e = this.delegate) ? e.scrollPositionChanged(this.position) : void 0;
        }, r;
      }();
    }.call(this), function () {
      e.SnapshotCache = function () {
        function t(t) {
          this.size = t, this.keys = [], this.snapshots = {};
        }

        var r;
        return t.prototype.has = function (t) {
          var e;
          return e = r(t), e in this.snapshots;
        }, t.prototype.get = function (t) {
          var e;
          if (this.has(t)) return e = this.read(t), this.touch(t), e;
        }, t.prototype.put = function (t, e) {
          return this.write(t, e), this.touch(t), e;
        }, t.prototype.read = function (t) {
          var e;
          return e = r(t), this.snapshots[e];
        }, t.prototype.write = function (t, e) {
          var n;
          return n = r(t), this.snapshots[n] = e;
        }, t.prototype.touch = function (t) {
          var e, n;
          return n = r(t), e = this.keys.indexOf(n), e > -1 && this.keys.splice(e, 1), this.keys.unshift(n), this.trim();
        }, t.prototype.trim = function () {
          var t, e, r, n, o;

          for (n = this.keys.splice(this.size), o = [], t = 0, r = n.length; r > t; t++) {
            e = n[t], o.push(delete this.snapshots[e]);
          }

          return o;
        }, r = function r(t) {
          return e.Location.wrap(t).toCacheKey();
        }, t;
      }();
    }.call(this), function () {
      var t = function t(_t8, e) {
        return function () {
          return _t8.apply(e, arguments);
        };
      };

      e.Visit = function () {
        function r(r, n, o) {
          this.controller = r, this.action = o, this.performScroll = t(this.performScroll, this), this.identifier = e.uuid(), this.location = e.Location.wrap(n), this.adapter = this.controller.adapter, this.state = "initialized", this.timingMetrics = {};
        }

        var n;
        return r.prototype.start = function () {
          return "initialized" === this.state ? (this.recordTimingMetric("visitStart"), this.state = "started", this.adapter.visitStarted(this)) : void 0;
        }, r.prototype.cancel = function () {
          var t;
          return "started" === this.state ? (null != (t = this.request) && t.cancel(), this.cancelRender(), this.state = "canceled") : void 0;
        }, r.prototype.complete = function () {
          var t;
          return "started" === this.state ? (this.recordTimingMetric("visitEnd"), this.state = "completed", "function" == typeof (t = this.adapter).visitCompleted && t.visitCompleted(this), this.controller.visitCompleted(this)) : void 0;
        }, r.prototype.fail = function () {
          var t;
          return "started" === this.state ? (this.state = "failed", "function" == typeof (t = this.adapter).visitFailed ? t.visitFailed(this) : void 0) : void 0;
        }, r.prototype.changeHistory = function () {
          var t, e;
          return this.historyChanged ? void 0 : (t = this.location.isEqualTo(this.referrer) ? "replace" : this.action, e = n(t), this.controller[e](this.location, this.restorationIdentifier), this.historyChanged = !0);
        }, r.prototype.issueRequest = function () {
          return this.shouldIssueRequest() && null == this.request ? (this.progress = 0, this.request = new e.HttpRequest(this, this.location, this.referrer), this.request.send()) : void 0;
        }, r.prototype.getCachedSnapshot = function () {
          var t;
          return !(t = this.controller.getCachedSnapshotForLocation(this.location)) || null != this.location.anchor && !t.hasAnchor(this.location.anchor) || "restore" !== this.action && !t.isPreviewable() ? void 0 : t;
        }, r.prototype.hasCachedSnapshot = function () {
          return null != this.getCachedSnapshot();
        }, r.prototype.loadCachedSnapshot = function () {
          var t, e;
          return (e = this.getCachedSnapshot()) ? (t = this.shouldIssueRequest(), this.render(function () {
            var r;
            return this.cacheSnapshot(), this.controller.render({
              snapshot: e,
              isPreview: t
            }, this.performScroll), "function" == typeof (r = this.adapter).visitRendered && r.visitRendered(this), t ? void 0 : this.complete();
          })) : void 0;
        }, r.prototype.loadResponse = function () {
          return null != this.response ? this.render(function () {
            var t, e;
            return this.cacheSnapshot(), this.request.failed ? (this.controller.render({
              error: this.response
            }, this.performScroll), "function" == typeof (t = this.adapter).visitRendered && t.visitRendered(this), this.fail()) : (this.controller.render({
              snapshot: this.response
            }, this.performScroll), "function" == typeof (e = this.adapter).visitRendered && e.visitRendered(this), this.complete());
          }) : void 0;
        }, r.prototype.followRedirect = function () {
          return this.redirectedToLocation && !this.followedRedirect ? (this.location = this.redirectedToLocation, this.controller.replaceHistoryWithLocationAndRestorationIdentifier(this.redirectedToLocation, this.restorationIdentifier), this.followedRedirect = !0) : void 0;
        }, r.prototype.requestStarted = function () {
          var t;
          return this.recordTimingMetric("requestStart"), "function" == typeof (t = this.adapter).visitRequestStarted ? t.visitRequestStarted(this) : void 0;
        }, r.prototype.requestProgressed = function (t) {
          var e;
          return this.progress = t, "function" == typeof (e = this.adapter).visitRequestProgressed ? e.visitRequestProgressed(this) : void 0;
        }, r.prototype.requestCompletedWithResponse = function (t, r) {
          return this.response = t, null != r && (this.redirectedToLocation = e.Location.wrap(r)), this.adapter.visitRequestCompleted(this);
        }, r.prototype.requestFailedWithStatusCode = function (t, e) {
          return this.response = e, this.adapter.visitRequestFailedWithStatusCode(this, t);
        }, r.prototype.requestFinished = function () {
          var t;
          return this.recordTimingMetric("requestEnd"), "function" == typeof (t = this.adapter).visitRequestFinished ? t.visitRequestFinished(this) : void 0;
        }, r.prototype.performScroll = function () {
          return this.scrolled ? void 0 : ("restore" === this.action ? this.scrollToRestoredPosition() || this.scrollToTop() : this.scrollToAnchor() || this.scrollToTop(), this.scrolled = !0);
        }, r.prototype.scrollToRestoredPosition = function () {
          var t, e;
          return t = null != (e = this.restorationData) ? e.scrollPosition : void 0, null != t ? (this.controller.scrollToPosition(t), !0) : void 0;
        }, r.prototype.scrollToAnchor = function () {
          return null != this.location.anchor ? (this.controller.scrollToAnchor(this.location.anchor), !0) : void 0;
        }, r.prototype.scrollToTop = function () {
          return this.controller.scrollToPosition({
            x: 0,
            y: 0
          });
        }, r.prototype.recordTimingMetric = function (t) {
          var e;
          return null != (e = this.timingMetrics)[t] ? e[t] : e[t] = new Date().getTime();
        }, r.prototype.getTimingMetrics = function () {
          return e.copyObject(this.timingMetrics);
        }, n = function n(t) {
          switch (t) {
            case "replace":
              return "replaceHistoryWithLocationAndRestorationIdentifier";

            case "advance":
            case "restore":
              return "pushHistoryWithLocationAndRestorationIdentifier";
          }
        }, r.prototype.shouldIssueRequest = function () {
          return "restore" === this.action ? !this.hasCachedSnapshot() : !0;
        }, r.prototype.cacheSnapshot = function () {
          return this.snapshotCached ? void 0 : (this.controller.cacheSnapshot(), this.snapshotCached = !0);
        }, r.prototype.render = function (t) {
          return this.cancelRender(), this.frame = requestAnimationFrame(function (e) {
            return function () {
              return e.frame = null, t.call(e);
            };
          }(this));
        }, r.prototype.cancelRender = function () {
          return this.frame ? cancelAnimationFrame(this.frame) : void 0;
        }, r;
      }();
    }.call(this), function () {
      var t = function t(_t9, e) {
        return function () {
          return _t9.apply(e, arguments);
        };
      };

      e.Controller = function () {
        function r() {
          this.clickBubbled = t(this.clickBubbled, this), this.clickCaptured = t(this.clickCaptured, this), this.pageLoaded = t(this.pageLoaded, this), this.history = new e.History(this), this.view = new e.View(this), this.scrollManager = new e.ScrollManager(this), this.restorationData = {}, this.clearCache(), this.setProgressBarDelay(500);
        }

        return r.prototype.start = function () {
          return e.supported && !this.started ? (addEventListener("click", this.clickCaptured, !0), addEventListener("DOMContentLoaded", this.pageLoaded, !1), this.scrollManager.start(), this.startHistory(), this.started = !0, this.enabled = !0) : void 0;
        }, r.prototype.disable = function () {
          return this.enabled = !1;
        }, r.prototype.stop = function () {
          return this.started ? (removeEventListener("click", this.clickCaptured, !0), removeEventListener("DOMContentLoaded", this.pageLoaded, !1), this.scrollManager.stop(), this.stopHistory(), this.started = !1) : void 0;
        }, r.prototype.clearCache = function () {
          return this.cache = new e.SnapshotCache(10);
        }, r.prototype.visit = function (t, r) {
          var n, o;
          return null == r && (r = {}), t = e.Location.wrap(t), this.applicationAllowsVisitingLocation(t) ? this.locationIsVisitable(t) ? (n = null != (o = r.action) ? o : "advance", this.adapter.visitProposedToLocationWithAction(t, n)) : window.location = t : void 0;
        }, r.prototype.startVisitToLocationWithAction = function (t, r, n) {
          var o;
          return e.supported ? (o = this.getRestorationDataForIdentifier(n), this.startVisit(t, r, {
            restorationData: o
          })) : window.location = t;
        }, r.prototype.setProgressBarDelay = function (t) {
          return this.progressBarDelay = t;
        }, r.prototype.startHistory = function () {
          return this.location = e.Location.wrap(window.location), this.restorationIdentifier = e.uuid(), this.history.start(), this.history.replace(this.location, this.restorationIdentifier);
        }, r.prototype.stopHistory = function () {
          return this.history.stop();
        }, r.prototype.pushHistoryWithLocationAndRestorationIdentifier = function (t, r) {
          return this.restorationIdentifier = r, this.location = e.Location.wrap(t), this.history.push(this.location, this.restorationIdentifier);
        }, r.prototype.replaceHistoryWithLocationAndRestorationIdentifier = function (t, r) {
          return this.restorationIdentifier = r, this.location = e.Location.wrap(t), this.history.replace(this.location, this.restorationIdentifier);
        }, r.prototype.historyPoppedToLocationWithRestorationIdentifier = function (t, r) {
          var n;
          return this.restorationIdentifier = r, this.enabled ? (n = this.getRestorationDataForIdentifier(this.restorationIdentifier), this.startVisit(t, "restore", {
            restorationIdentifier: this.restorationIdentifier,
            restorationData: n,
            historyChanged: !0
          }), this.location = e.Location.wrap(t)) : this.adapter.pageInvalidated();
        }, r.prototype.getCachedSnapshotForLocation = function (t) {
          var e;
          return null != (e = this.cache.get(t)) ? e.clone() : void 0;
        }, r.prototype.shouldCacheSnapshot = function () {
          return this.view.getSnapshot().isCacheable();
        }, r.prototype.cacheSnapshot = function () {
          var t, r;
          return this.shouldCacheSnapshot() ? (this.notifyApplicationBeforeCachingSnapshot(), r = this.view.getSnapshot(), t = this.lastRenderedLocation, e.defer(function (e) {
            return function () {
              return e.cache.put(t, r.clone());
            };
          }(this))) : void 0;
        }, r.prototype.scrollToAnchor = function (t) {
          var e;
          return (e = this.view.getElementForAnchor(t)) ? this.scrollToElement(e) : this.scrollToPosition({
            x: 0,
            y: 0
          });
        }, r.prototype.scrollToElement = function (t) {
          return this.scrollManager.scrollToElement(t);
        }, r.prototype.scrollToPosition = function (t) {
          return this.scrollManager.scrollToPosition(t);
        }, r.prototype.scrollPositionChanged = function (t) {
          var e;
          return e = this.getCurrentRestorationData(), e.scrollPosition = t;
        }, r.prototype.render = function (t, e) {
          return this.view.render(t, e);
        }, r.prototype.viewInvalidated = function () {
          return this.adapter.pageInvalidated();
        }, r.prototype.viewWillRender = function (t) {
          return this.notifyApplicationBeforeRender(t);
        }, r.prototype.viewRendered = function () {
          return this.lastRenderedLocation = this.currentVisit.location, this.notifyApplicationAfterRender();
        }, r.prototype.pageLoaded = function () {
          return this.lastRenderedLocation = this.location, this.notifyApplicationAfterPageLoad();
        }, r.prototype.clickCaptured = function () {
          return removeEventListener("click", this.clickBubbled, !1), addEventListener("click", this.clickBubbled, !1);
        }, r.prototype.clickBubbled = function (t) {
          var e, r, n;
          return this.enabled && this.clickEventIsSignificant(t) && (r = this.getVisitableLinkForNode(t.target)) && (n = this.getVisitableLocationForLink(r)) && this.applicationAllowsFollowingLinkToLocation(r, n) ? (t.preventDefault(), e = this.getActionForLink(r), this.visit(n, {
            action: e
          })) : void 0;
        }, r.prototype.applicationAllowsFollowingLinkToLocation = function (t, e) {
          var r;
          return r = this.notifyApplicationAfterClickingLinkToLocation(t, e), !r.defaultPrevented;
        }, r.prototype.applicationAllowsVisitingLocation = function (t) {
          var e;
          return e = this.notifyApplicationBeforeVisitingLocation(t), !e.defaultPrevented;
        }, r.prototype.notifyApplicationAfterClickingLinkToLocation = function (t, r) {
          return e.dispatch("turbolinks:click", {
            target: t,
            data: {
              url: r.absoluteURL
            },
            cancelable: !0
          });
        }, r.prototype.notifyApplicationBeforeVisitingLocation = function (t) {
          return e.dispatch("turbolinks:before-visit", {
            data: {
              url: t.absoluteURL
            },
            cancelable: !0
          });
        }, r.prototype.notifyApplicationAfterVisitingLocation = function (t) {
          return e.dispatch("turbolinks:visit", {
            data: {
              url: t.absoluteURL
            }
          });
        }, r.prototype.notifyApplicationBeforeCachingSnapshot = function () {
          return e.dispatch("turbolinks:before-cache");
        }, r.prototype.notifyApplicationBeforeRender = function (t) {
          return e.dispatch("turbolinks:before-render", {
            data: {
              newBody: t
            }
          });
        }, r.prototype.notifyApplicationAfterRender = function () {
          return e.dispatch("turbolinks:render");
        }, r.prototype.notifyApplicationAfterPageLoad = function (t) {
          return null == t && (t = {}), e.dispatch("turbolinks:load", {
            data: {
              url: this.location.absoluteURL,
              timing: t
            }
          });
        }, r.prototype.startVisit = function (t, e, r) {
          var n;
          return null != (n = this.currentVisit) && n.cancel(), this.currentVisit = this.createVisit(t, e, r), this.currentVisit.start(), this.notifyApplicationAfterVisitingLocation(t);
        }, r.prototype.createVisit = function (t, r, n) {
          var o, i, s, a, u;
          return i = null != n ? n : {}, a = i.restorationIdentifier, s = i.restorationData, o = i.historyChanged, u = new e.Visit(this, t, r), u.restorationIdentifier = null != a ? a : e.uuid(), u.restorationData = e.copyObject(s), u.historyChanged = o, u.referrer = this.location, u;
        }, r.prototype.visitCompleted = function (t) {
          return this.notifyApplicationAfterPageLoad(t.getTimingMetrics());
        }, r.prototype.clickEventIsSignificant = function (t) {
          return !(t.defaultPrevented || t.target.isContentEditable || t.which > 1 || t.altKey || t.ctrlKey || t.metaKey || t.shiftKey);
        }, r.prototype.getVisitableLinkForNode = function (t) {
          return this.nodeIsVisitable(t) ? e.closest(t, "a[href]:not([target]):not([download])") : void 0;
        }, r.prototype.getVisitableLocationForLink = function (t) {
          var r;
          return r = new e.Location(t.getAttribute("href")), this.locationIsVisitable(r) ? r : void 0;
        }, r.prototype.getActionForLink = function (t) {
          var e;
          return null != (e = t.getAttribute("data-turbolinks-action")) ? e : "advance";
        }, r.prototype.nodeIsVisitable = function (t) {
          var r;
          return (r = e.closest(t, "[data-turbolinks]")) ? "false" !== r.getAttribute("data-turbolinks") : !0;
        }, r.prototype.locationIsVisitable = function (t) {
          return t.isPrefixedBy(this.view.getRootLocation()) && t.isHTML();
        }, r.prototype.getCurrentRestorationData = function () {
          return this.getRestorationDataForIdentifier(this.restorationIdentifier);
        }, r.prototype.getRestorationDataForIdentifier = function (t) {
          var e;
          return null != (e = this.restorationData)[t] ? e[t] : e[t] = {};
        }, r;
      }();
    }.call(this), function () {
      !function () {
        var t, e;
        if ((t = e = document.currentScript) && !e.hasAttribute("data-turbolinks-suppress-warning")) for (; t = t.parentNode;) {
          if (t === document.body) return console.warn("You are loading Turbolinks from a <script> element inside the <body> element. This is probably not what you meant to do!\n\nLoad your application\u2019s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\n\nFor more information, see: https://github.com/turbolinks/turbolinks#working-with-script-elements\n\n\u2014\u2014\nSuppress this warning by adding a `data-turbolinks-suppress-warning` attribute to: %s", e.outerHTML);
        }
      }();
    }.call(this), function () {
      var t, r, n;
      e.start = function () {
        return r() ? (null == e.controller && (e.controller = t()), e.controller.start()) : void 0;
      }, r = function r() {
        return null == window.Turbolinks && (window.Turbolinks = e), n();
      }, t = function t() {
        var t;
        return t = new e.Controller(), t.adapter = new e.BrowserAdapter(t), t;
      }, n = function n() {
        return window.Turbolinks === e;
      }, n() && e.start();
    }.call(this);
  }).call(this), "object" == ( false ? undefined : _typeof(module)) && module.exports ? module.exports = e :  true && !(__WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}).call(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ })

/******/ });
//# sourceMappingURL=application-db367d47cec2ae938f8d.js.map